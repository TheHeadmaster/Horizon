<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Octokit.Reactive</name>
    </assembly>
    <members>
        <member name="T:Octokit.Reactive.IObservableEnterpriseAdminStatsClient">
             <summary>
             A client for GitHub's Enterprise Admin Stats API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/admin_stats/">Enterprise Admin Stats API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsIssues">
            <summary>
            Gets GitHub Enterprise Issue statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsIssues"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsHooks">
            <summary>
            Gets GitHub Enterprise Hook statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsHooks"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsMilestones">
            <summary>
            Gets GitHub Enterprise Milestone statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsMilestones"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsOrgs">
            <summary>
            Gets GitHub Enterprise Organization statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsOrgs"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsComments">
            <summary>
            Gets GitHub Enterprise Comment statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsComments"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsPages">
            <summary>
            Gets GitHub Enterprise Pages statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsPages"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsUsers">
            <summary>
            Gets GitHub Enterprise User statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsUsers"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsGists">
            <summary>
            Gets GitHub Enterprise Gist statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsGists"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsPulls">
            <summary>
            Gets GitHub Enterprise PullRequest statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsPulls"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsRepos">
            <summary>
            Gets GitHub Enterprise Repository statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsRepos"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseAdminStatsClient.GetStatisticsAll">
            <summary>
            Gets GitHub Enterprise statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStats"/> collection of statistics.</returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableEnterpriseClient">
            <summary>
            A client for GitHub's Enterprise API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/enterprise/">Enterprise API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableEnterpriseClient.AdminStats">
            <summary>
            A client for GitHub's Enterprise Admin Stats API
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/enterprise/admin_stats/">Enterprise Admin Stats API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableEnterpriseClient.Ldap">
            <summary>
            A client for GitHub's Enterprise LDAP API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/ldap/">Enterprise LDAP API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableEnterpriseClient.License">
            <summary>
            A client for GitHub's Enterprise License API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/license/">Enterprise License API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableEnterpriseClient.ManagementConsole">
            <summary>
            A client for GitHub's Enterprise Management Console API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/management_console/">Enterprise Management Console API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableEnterpriseClient.Organization">
            <summary>
            A client for GitHub's Enterprise Organization API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/orgs/">Enterprise Organization API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableEnterpriseClient.SearchIndexing">
            <summary>
            A client for GitHub's Enterprise Search Indexing API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/search_indexing/">Enterprise Search Indexing API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableEnterpriseClient.PreReceiveEnvironment">
             <summary>
             A client for GitHub's Enterprise Pre-receive Environments API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/">Enterprise Pre-receive Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.IObservableEnterpriseLdapClient">
             <summary>
             A client for GitHub's Enterprise LDAP API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/ldap/">Enterprise LDAP API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseLdapClient.UpdateUserMapping(System.String,Octokit.NewLdapMapping)">
            <summary>
            Update the LDAP mapping for a user on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#update-ldap-mapping-for-a-user
            </remarks>
            <param name="userName">The username to update LDAP mapping</param>
            <param name="newLdapMapping">The <see cref="T:Octokit.NewLdapMapping"/></param>
            <returns>The <see cref="T:Octokit.User"/> object.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseLdapClient.QueueSyncUserMapping(System.String)">
            <summary>
            Queue an LDAP Sync job for a user on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#sync-ldap-mapping-for-a-user
            </remarks>
            <param name="userName">The username to sync LDAP mapping</param>
            <returns>The <see cref="T:Octokit.LdapSyncResponse"/> of the queue request.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseLdapClient.UpdateTeamMapping(System.Int32,Octokit.NewLdapMapping)">
            <summary>
            Update the LDAP mapping for a team on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#update-ldap-mapping-for-a-team
            </remarks>
            <param name="teamId">The teamId to update LDAP mapping</param>
            <param name="newLdapMapping">The <see cref="T:Octokit.NewLdapMapping"/></param>
            <returns>The <see cref="T:Octokit.Team"/> object.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseLdapClient.QueueSyncTeamMapping(System.Int32)">
            <summary>
            Queue an LDAP Sync job for a team on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#sync-ldap-mapping-for-a-team
            </remarks>
            <param name="teamId">The teamId to update LDAP mapping</param>
            <returns>The <see cref="T:Octokit.LdapSyncResponse"/> of the queue request.</returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableEnterpriseLicenseClient">
             <summary>
             A client for GitHub's Enterprise License API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/license/">Enterprise License API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseLicenseClient.Get">
            <summary>
            Gets GitHub Enterprise License Information (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/license/#get-license-information
            </remarks>
            <returns>The <see cref="T:Octokit.LicenseInfo"/> statistics.</returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableEnterpriseManagementConsoleClient">
            <summary>
            A client for GitHub's Enterprise Management Console API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/management_console/">Enterprise Management Console API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseManagementConsoleClient.GetMaintenanceMode(System.String)">
            <summary>
            Gets GitHub Enterprise Maintenance Mode Status
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/management_console/#check-maintenance-status
            </remarks>
            <returns>The <see cref="T:Octokit.MaintenanceModeResponse"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseManagementConsoleClient.EditMaintenanceMode(Octokit.UpdateMaintenanceRequest,System.String)">
            <summary>
            Sets GitHub Enterprise Maintenance Mode
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/management_console/#check-maintenance-status
            </remarks>
            <returns>The <see cref="T:Octokit.MaintenanceModeResponse"/>.</returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableEnterpriseOrganizationClient">
             <summary>
             A client for GitHub's Enterprise Organization API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/orgs/">Enterprise Organization API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseOrganizationClient.Create(Octokit.NewOrganization)">
            <summary>
            Creates an Organization on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/orgs/#create-an-organization
            </remarks>
            <param name="newOrganization">A <see cref="T:Octokit.NewOrganization"/> instance describing the organization to be created</param>
            <returns>The <see cref="T:Octokit.Organization"/> created.</returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableEnterprisePreReceiveEnvironmentsClient">
             <summary>
             A client for GitHub's Enterprise Pre-receive Environments API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/">Enterprise Pre-receive Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterprisePreReceiveEnvironmentsClient.GetAll">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveEnvironment"/>s.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments">API documentation</a> for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterprisePreReceiveEnvironmentsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveEnvironment"/>s.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterprisePreReceiveEnvironmentsClient.Get(System.Int64)">
            <summary>
            Gets a single <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-single-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterprisePreReceiveEnvironmentsClient.Create(Octokit.NewPreReceiveEnvironment)">
            <summary>
            Creates a new <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#create-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="newPreReceiveEnvironment">A description of the pre-receive environment to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterprisePreReceiveEnvironmentsClient.Edit(System.Int64,Octokit.UpdatePreReceiveEnvironment)">
            <summary>
            Edits an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#edit-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <param name="updatePreReceiveEnvironment">A description of the pre-receive environment to edit</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterprisePreReceiveEnvironmentsClient.Delete(System.Int64)">
            <summary>
            Deletes an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#delete-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterprisePreReceiveEnvironmentsClient.DownloadStatus(System.Int64)">
            <summary>
            Gets the download status for an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-pre-receive-environments-download-status">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterprisePreReceiveEnvironmentsClient.TriggerDownload(System.Int64)">
            <summary>
            Triggers a new download of the <see cref="T:Octokit.PreReceiveEnvironment"/>'s tarball from the environment's <see cref="P:Octokit.PreReceiveEnvironment.ImageUrl"/>.
            When the download is finished, the newly downloaded tarball will overwrite the existing environment.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#trigger-a-pre-receive-environment-download">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.Reactive.IObservableEnterpriseSearchIndexingClient">
             <summary>
             A client for GitHub's Enterprise Search Indexing API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/search_indexing/">Enterprise Search Indexing API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseSearchIndexingClient.Queue(System.String)">
            <summary>
            Queue an indexing job for a user or organization account (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseSearchIndexingClient.Queue(System.String,System.String)">
            <summary>
            Queue an indexing job for a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseSearchIndexingClient.QueueAll(System.String)">
            <summary>
            Queue an indexing job for all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseSearchIndexingClient.QueueAllIssues(System.String,System.String)">
            <summary>
            Queue an indexing job for all the issues in a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseSearchIndexingClient.QueueAllIssues(System.String)">
            <summary>
            Queue an indexing job for all the issues in all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseSearchIndexingClient.QueueAllCode(System.String,System.String)">
            <summary>
            Queue an indexing job for all the source code in a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableEnterpriseSearchIndexingClient.QueueAllCode(System.String)">
            <summary>
            Queue an indexing job for all the source code in all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableEnterpriseAdminStatsClient">
             <summary>
             A client for GitHub's Enterprise Admin Stats API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/admin_stats/">Enterprise Admin Stats API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsIssues">
            <summary>
            Gets GitHub Enterprise Issue statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsIssues"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsHooks">
            <summary>
            Gets GitHub Enterprise Hook statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsHooks"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsMilestones">
            <summary>
            Gets GitHub Enterprise Milestone statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsMilestones"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsOrgs">
            <summary>
            Gets GitHub Enterprise Organization statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsOrgs"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsComments">
            <summary>
            Gets GitHub Enterprise Comment statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsComments"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsPages">
            <summary>
            Gets GitHub Enterprise Pages statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsPages"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsUsers">
            <summary>
            Gets GitHub Enterprise User statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsUsers"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsGists">
            <summary>
            Gets GitHub Enterprise Gist statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsGists"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsPulls">
            <summary>
            Gets GitHub Enterprise PullRequest statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsPulls"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsRepos">
            <summary>
            Gets GitHub Enterprise Repository statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStatsRepos"/> statistics.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseAdminStatsClient.GetStatisticsAll">
            <summary>
            Gets GitHub Enterprise statistics (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/admin_stats/#get-statistics
            </remarks>
            <returns>The <see cref="T:Octokit.AdminStats"/> collection of statistics.</returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableEnterpriseClient">
            <summary>
            A client for GitHub's Enterprise API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/enterprise/">Enterprise API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableEnterpriseClient.AdminStats">
            <summary>
            A client for GitHub's Enterprise Admin Stats API
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/enterprise/admin_stats/">Enterprise Admin Stats API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableEnterpriseClient.Ldap">
            <summary>
            A client for GitHub's Enterprise LDAP API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/ldap/">Enterprise LDAP API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableEnterpriseClient.License">
            <summary>
            A client for GitHub's Enterprise License API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/license/">Enterprise License API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableEnterpriseClient.ManagementConsole">
            <summary>
            A client for GitHub's Enterprise Management Console API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/management_console/">Enterprise Management Console API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableEnterpriseClient.Organization">
            <summary>
            A client for GitHub's Enterprise Organization API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/orgs/">Enterprise Organization API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableEnterpriseClient.SearchIndexing">
            <summary>
            A client for GitHub's Enterprise Search Indexing API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/search_indexing/">Enterprise Search Indexing API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableEnterpriseClient.PreReceiveEnvironment">
             <summary>
             A client for GitHub's Enterprise Pre-receive Environments API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/">Enterprise Pre-receive Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.ObservableEnterpriseLdapClient">
             <summary>
             A client for GitHub's Enterprise LDAP API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/ldap/">Enterprise LDAP API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseLdapClient.UpdateUserMapping(System.String,Octokit.NewLdapMapping)">
            <summary>
            Update the LDAP mapping for a user on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#update-ldap-mapping-for-a-user
            </remarks>
            <param name="userName">The username to update LDAP mapping</param>
            <param name="newLdapMapping">The <see cref="T:Octokit.NewLdapMapping"/></param>
            <returns>The <see cref="T:Octokit.User"/> object.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseLdapClient.QueueSyncUserMapping(System.String)">
            <summary>
            Queue an LDAP Sync job for a user on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#sync-ldap-mapping-for-a-user
            </remarks>
            <param name="userName">The username to sync LDAP mapping</param>
            <returns>The <see cref="T:Octokit.LdapSyncResponse"/> of the queue request.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseLdapClient.UpdateTeamMapping(System.Int32,Octokit.NewLdapMapping)">
            <summary>
            Update the LDAP mapping for a team on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#update-ldap-mapping-for-a-team
            </remarks>
            <param name="teamId">The teamId to update LDAP mapping</param>
            <param name="newLdapMapping">The <see cref="T:Octokit.NewLdapMapping"/></param>
            <returns>The <see cref="T:Octokit.Team"/> object.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseLdapClient.QueueSyncTeamMapping(System.Int32)">
            <summary>
            Queue an LDAP Sync job for a team on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/ldap/#sync-ldap-mapping-for-a-team
            </remarks>
            <param name="teamId">The teamId to update LDAP mapping</param>
            <returns>The <see cref="T:Octokit.LdapSyncResponse"/> of the queue request.</returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableEnterpriseLicenseClient">
             <summary>
             A client for GitHub's Enterprise License API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/license/">Enterprise License API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseLicenseClient.Get">
            <summary>
            Gets GitHub Enterprise License Information (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/license/#get-license-information
            </remarks>
            <returns>The <see cref="T:Octokit.LicenseInfo"/> statistics.</returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableEnterpriseManagementConsoleClient">
            <summary>
            A client for GitHub's Enterprise Management Console API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise/management_console/">Enterprise Management Console API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseManagementConsoleClient.GetMaintenanceMode(System.String)">
            <summary>
            Gets GitHub Enterprise Maintenance Mode Status
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/management_console/#check-maintenance-status
            </remarks>
            <returns>The <see cref="T:Octokit.MaintenanceModeResponse"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseManagementConsoleClient.EditMaintenanceMode(Octokit.UpdateMaintenanceRequest,System.String)">
            <summary>
            Sets GitHub Enterprise Maintenance Mode
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/management_console/#check-maintenance-status
            </remarks>
            <returns>The <see cref="T:Octokit.MaintenanceModeResponse"/>.</returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableEnterpriseOrganizationClient">
             <summary>
             A client for GitHub's Enterprise Organization API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/orgs/">Enterprise Organization API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseOrganizationClient.Create(Octokit.NewOrganization)">
            <summary>
            Creates an Organization on a GitHub Enterprise appliance (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/orgs/#create-an-organization
            </remarks>
            <param name="newOrganization">A <see cref="T:Octokit.NewOrganization"/> instance describing the organization to be created</param>
            <returns>The <see cref="T:Octokit.Organization"/> created.</returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableEnterprisePreReceiveEnvironmentsClient">
             <summary>
             A client for GitHub's Enterprise Pre-receive Environments API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/">Enterprise Pre-receive Environments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterprisePreReceiveEnvironmentsClient.GetAll">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveEnvironment"/>s.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments">API documentation</a> for more information.
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterprisePreReceiveEnvironmentsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.PreReceiveEnvironment"/>s.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterprisePreReceiveEnvironmentsClient.Get(System.Int64)">
            <summary>
            Gets a single <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-single-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterprisePreReceiveEnvironmentsClient.Create(Octokit.NewPreReceiveEnvironment)">
            <summary>
            Creates a new <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#create-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="newPreReceiveEnvironment">A description of the pre-receive environment to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterprisePreReceiveEnvironmentsClient.Edit(System.Int64,Octokit.UpdatePreReceiveEnvironment)">
            <summary>
            Edits an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#edit-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <param name="updatePreReceiveEnvironment">A description of the pre-receive environment to edit</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterprisePreReceiveEnvironmentsClient.Delete(System.Int64)">
            <summary>
            Deletes an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#delete-a-pre-receive-environment">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterprisePreReceiveEnvironmentsClient.DownloadStatus(System.Int64)">
            <summary>
            Gets the download status for an existing <see cref="T:Octokit.PreReceiveEnvironment"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-pre-receive-environments-download-status">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterprisePreReceiveEnvironmentsClient.TriggerDownload(System.Int64)">
            <summary>
            Triggers a new download of the <see cref="T:Octokit.PreReceiveEnvironment"/>'s tarball from the environment's <see cref="P:Octokit.PreReceiveEnvironment.ImageUrl"/>.
            When the download is finished, the newly downloaded tarball will overwrite the existing environment.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#trigger-a-pre-receive-environment-download">API documentation</a> for more information.
            </remarks>
            <param name="environmentId">The id of the pre-receive environment</param>
            <exception cref="T:Octokit.NotFoundException">Thrown when the specified <paramref name="environmentId"/> does not exist.</exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.Reactive.ObservableEnterpriseSearchIndexingClient">
             <summary>
             A client for GitHub's Enterprise Search Indexing API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/enterprise/search_indexing/">Enterprise Search Indexing API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseSearchIndexingClient.Queue(System.String)">
            <summary>
            Queue an indexing job for a user or organization account (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseSearchIndexingClient.Queue(System.String,System.String)">
            <summary>
            Queue an indexing job for a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseSearchIndexingClient.QueueAll(System.String)">
            <summary>
            Queue an indexing job for all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseSearchIndexingClient.QueueAllIssues(System.String,System.String)">
            <summary>
            Queue an indexing job for all the issues in a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseSearchIndexingClient.QueueAllIssues(System.String)">
            <summary>
            Queue an indexing job for all the issues in all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseSearchIndexingClient.QueueAllCode(System.String,System.String)">
            <summary>
            Queue an indexing job for all the source code in a repository (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <param name="repository">A repository</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableEnterpriseSearchIndexingClient.QueueAllCode(System.String)">
            <summary>
            Queue an indexing job for all the source code in all of a user or organization's repositories (must be Site Admin user).
            </summary>
            <remarks>
            https://developer.github.com/v3/enterprise/search_indexing/#queue-an-indexing-job
            </remarks>
            <param name="owner">A user or organization account</param>
            <returns>The <see cref="T:Octokit.SearchIndexingResponse"/> message.</returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableAssigneesClient">
            <summary>
            A client for GitHub's Issue Assignees API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/assignees/">Issue Assignees API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableAssigneesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableAssigneesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableAssigneesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">The options to change API's behaviour.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableAssigneesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">The options to change API's behaviour.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableAssigneesClient.CheckAssignee(System.String,System.String,System.String)">
            <summary>
            Checks to see if a user is an assignee for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="assignee">Username of the prospective assignee</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableAssigneesClient.AddAssignees(System.String,System.String,System.Int32,Octokit.AssigneesUpdate)">
            <summary>
            Add assignees to a specified Issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="assignees">List of names of assignees to add</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAssigneesClient.RemoveAssignees(System.String,System.String,System.Int32,Octokit.AssigneesUpdate)">
            <summary>
            Remove assignees from a specified Issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="assignees">List of assignees to remove </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAssigneesClient.CheckAssignee(System.Int64,System.String)">
            <summary>
            Checks to see if a user is an assignee for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assignee">Username of the prospective assignee</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.GetAll">
            <summary>
            Get all <see cref="T:Octokit.Authorization"/>s for the authenticated user. This method requires basic auth.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> for more
            details.
            </remarks>
            <returns>A list of <see cref="T:Octokit.Authorization"/>s for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Get all <see cref="T:Octokit.Authorization"/>s for the authenticated user. This method requires basic auth.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> for more
            details.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <returns>A list of <see cref="T:Octokit.Authorization"/>s for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.Get(System.Int32)">
            <summary>
            Get a specific <see cref="T:Octokit.Authorization"/> for the authenticated user. This method requires basic auth.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#get-a-single-authorization">API documentation</a> for
            more details.
            </remarks>
            <param name="id">The id of the <see cref="T:Octokit.Authorization"/></param>
            <returns>An <see cref="T:Octokit.Authorization"/></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.Create(Octokit.NewAuthorization)">
            <summary>
            Creates a new personal token for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization">API documentation</a> for more information.
            </remarks>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.Create(Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new personal token for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization">API documentation</a> for more information.
            </remarks>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.Create(System.String,System.String,Octokit.NewAuthorization)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application
            doesn’t already exist for the user; otherwise, it fails.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.Create(System.String,System.String,Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application
            doesn’t already exist for the user; otherwise, it fails.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.GetOrCreateApplicationAuthentication(System.String,System.String,Octokit.NewAuthorization)">
            <summary>
            This method will create a new authorization for the specified OAuth application, only if an authorization 
            for that application doesn’t already exist for the user. It returns the user’s token for the application
            if one exists. Otherwise, it creates one.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API
            documentation</a> for more details.
            </remarks>
            <param name="clientId">Client Id for the OAuth application that is requesting the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Defines the scopes and metadata for the token</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown when the user does not have permission to make 
            this request. Check </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">Thrown when the current account has two-factor
            authentication enabled.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.GetOrCreateApplicationAuthentication(System.String,System.String,Octokit.NewAuthorization,System.String)">
            <summary>
            This method will create a new authorization for the specified OAuth application, only if an authorization 
            for that application doesn’t already exist for the user. It returns the user’s token for the application
            if one exists. Otherwise, it creates one.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API 
            documentation</a> for more details.
            </remarks>
            <param name="clientId">Client Id for the OAuth application that is requesting the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Defines the scopes and metadata for the token</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code provided by the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown when the user does not have permission to make 
            this request. Check </exception>
            <exception cref="T:Octokit.TwoFactorChallengeFailedException">Thrown when the two-factor code is not
            valid.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.CheckApplicationAuthentication(System.String,System.String)">
            <summary>
            Checks the validity of an OAuth token without running afoul of normal rate limits for failed login attempts.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#check-an-authorization">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to check</param>
            <returns>The valid <see cref="T:Octokit.ApplicationAuthorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.ResetApplicationAuthentication(System.String,System.String)">
            <summary>
            Resets a valid OAuth token for an OAuth application without end user involvement.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#reset-an-authorization">API documentation</a> for more information.
            </remarks>
            <param name="clientId">ClientID of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to reset</param>
            <returns>The valid <see cref="T:Octokit.ApplicationAuthorization"/> with a new OAuth token</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.RevokeApplicationAuthentication(System.String,System.String)">
            <summary>
            Revokes a single OAuth token for an OAuth application.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#revoke-an-authorization-for-an-application">API documentation for more information.</a>
            </remarks>
            <param name="clientId">ClientID of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to revoke</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.Update(System.Int32,Octokit.AuthorizationUpdate)">
            <summary>
            Update the <see cref="T:Octokit.Authorization"/> specified by the id.
            </summary>
            <param name="id">The id of the <see cref="T:Octokit.Authorization"/></param>
            <param name="authorizationUpdate">The changes to make to the authorization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.Delete(System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#delete-an-authorization">API 
            documentation</a> for more details.
            </remarks>
            <param name="id">The system-wide Id of the authorization to delete</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableAuthorizationsClient.Delete(System.Int32,System.String)">
            <summary>
            Deletes the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#delete-an-authorization">API 
            documentation</a> for more details.
            </remarks>
            <param name="id">The system-wide Id of the authorization to delete</param>
            <param name="twoFactorAuthenticationCode">Two factor authorization code</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.Reactive.IObservableBlobsClient">
            <summary>
            A client for GitHub's Git Blobs API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/blobs/">Git Blobs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableBlobsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single Blob by SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#get-a-blob
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA of the blob</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableBlobsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single Blob by SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#get-a-blob
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA of the blob</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableBlobsClient.Create(System.String,System.String,Octokit.NewBlob)">
            <summary>
            Creates a new Blob
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#create-a-blob
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newBlob">The new Blob</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableBlobsClient.Create(System.Int64,Octokit.NewBlob)">
            <summary>
            Creates a new Blob
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#create-a-blob
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newBlob">The new Blob</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableCheckRunsClient">
            <summary>
            A client for GitHub's Check Runs API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/">Check Runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.Create(System.String,System.String,Octokit.NewCheckRun)">
            <summary>
            Creates a new check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#create-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newCheckRun">Details of the Check Run to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.Create(System.Int64,Octokit.NewCheckRun)">
            <summary>
            Creates a new check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#create-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newCheckRun">Details of the Check Run to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.Update(System.String,System.String,System.Int64,Octokit.CheckRunUpdate)">
            <summary>
            Updates a check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#update-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="checkRunUpdate">The updates to the check run</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.Update(System.Int64,System.Int64,Octokit.CheckRunUpdate)">
            <summary>
            Updates a check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#update-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="checkRunUpdate">The updates to the check run</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForReference(System.String,System.String,System.String)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForReference(System.Int64,System.String)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForReference(System.Int64,System.String,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForReference(System.Int64,System.String,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single check run using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#get-a-single-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single check run using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#get-a-single-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllAnnotations(System.String,System.String,System.Int64)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllAnnotations(System.Int64,System.Int64)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllAnnotations(System.String,System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckRunsClient.GetAllAnnotations(System.Int64,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableChecksClient">
            <summary>
            A client for GitHub's Checks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/">Checks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableChecksClient.Run">
            <summary>
            A client for GitHub's Check Runs API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/">Check Runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableChecksClient.Suite">
            <summary>
            A client for GitHub's Check Suites API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/">Check Suites API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.IObservableCheckSuitesClient">
            <summary>
            A client for GitHub's Check Suites API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/">Check Suites API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single Check Suite by Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#get-a-single-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single Check Suite by Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#get-a-single-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.GetAllForReference(System.String,System.String,System.String)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.GetAllForReference(System.Int64,System.String)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckSuiteRequest)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.GetAllForReference(System.Int64,System.String,Octokit.CheckSuiteRequest)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckSuiteRequest,Octokit.ApiOptions)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.GetAllForReference(System.Int64,System.String,Octokit.CheckSuiteRequest,Octokit.ApiOptions)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.UpdatePreferences(System.String,System.String,Octokit.CheckSuitePreferences)">
            <summary>
            Updates Check Suites prefrences on a repository, such as disabling automatic creation when code is pushed
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="preferences">The check suite preferences</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.UpdatePreferences(System.Int64,Octokit.CheckSuitePreferences)">
            <summary>
            Updates Check Suites prefrences on a repository, such as disabling automatic creation when code is pushed
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="preferences">The check suite preferences</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.Create(System.String,System.String,Octokit.NewCheckSuite)">
            <summary>
            Creates a new Check Suite
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#create-a-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newCheckSuite">Details of the Check Suite to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.Create(System.Int64,Octokit.NewCheckSuite)">
            <summary>
            Creates a new Check Suite
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#create-a-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newCheckSuite">Details of the Check Suite to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.Request(System.String,System.String,Octokit.CheckSuiteTriggerRequest)">
            <summary>
            Triggers GitHub to create a new check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Details of the Check Suite request</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.Request(System.Int64,Octokit.CheckSuiteTriggerRequest)">
            <summary>
            Triggers GitHub to create a new check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Details of the Check Suite request</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.Rerequest(System.String,System.String,System.Int64)">
            <summary>
            Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCheckSuitesClient.Rerequest(System.Int64,System.Int64)">
            <summary>
            Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableCommitCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            List reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>        
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            List reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>        
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableCommitsClient">
            <summary>
            A client for GitHub's Git Commits API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/commits/">Git Commits API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a commit for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#get-a-commit
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">Tha sha reference of the commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a commit for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#get-a-commit
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">Tha sha reference of the commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitsClient.Create(System.String,System.String,Octokit.NewCommit)">
            <summary>
            Create a commit for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commit">The commit to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitsClient.Create(System.Int64,Octokit.NewCommit)">
            <summary>
            Create a commit for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="commit">The commit to create</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableCommitStatusClient">
            <summary>
            A client for GitHub's Git Repository Status API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/statuses/">Repository Statuses API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitStatusClient.GetAll(System.String,System.String,System.String)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitStatusClient.GetAll(System.Int64,System.String)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitStatusClient.GetAll(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>        
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitStatusClient.GetAll(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitStatusClient.GetCombined(System.String,System.String,System.String)">
            <summary>
            Retrieves a combined view of statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitStatusClient.GetCombined(System.Int64,System.String)">
            <summary>
            Retrieves a combined view of statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitStatusClient.Create(System.String,System.String,System.String,Octokit.NewCommitStatus)">
            <summary>
            Creates a commit status for the specified ref.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="newCommitStatus">The commit status to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableCommitStatusClient.Create(System.Int64,System.String,Octokit.NewCommitStatus)">
            <summary>
            Creates a commit status for the specified ref.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="newCommitStatus">The commit status to create</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableDeploymentsClient">
            <summary>
            A client for GitHub's Repository Deployments API.
            Gets and creates Deployments.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployments/">Repository Deployments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentsClient.GetAll(System.Int64)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentsClient.Create(System.String,System.String,Octokit.NewDeployment)">
            <summary>
            Creates a new deployment for the specified repository.
            Users with push access can create a deployment for a given ref.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newDeployment">A <see cref="T:Octokit.NewDeployment"/> instance describing the new deployment to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentsClient.Create(System.Int64,Octokit.NewDeployment)">
            <summary>
            Creates a new deployment for the specified repository.
            Users with push access can create a deployment for a given ref.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newDeployment">A <see cref="T:Octokit.NewDeployment"/> instance describing the new deployment to create</param>
        </member>
        <member name="P:Octokit.Reactive.IObservableDeploymentsClient.Status">
            <summary>
            Client for managing deployment status.
            </summary>
        </member>
        <member name="T:Octokit.Reactive.IObservableDeploymentStatusClient">
            <summary>
            A client for GitHub's Repository Deployment Statuses API.
            Gets and creates Deployment Statuses.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployments/">Repository Deployment Statuses API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentStatusClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentStatusClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentStatusClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentStatusClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentStatusClient.Create(System.String,System.String,System.Int32,Octokit.NewDeploymentStatus)">
            <summary>
            Creates a new status for the given deployment. Users with push access can create deployment
            statuses for a given deployment.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment-status
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="newDeploymentStatus">The new deployment status to create.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableDeploymentStatusClient.Create(System.Int64,System.Int32,Octokit.NewDeploymentStatus)">
            <summary>
            Creates a new status for the given deployment. Users with push access can create deployment
            statuses for a given deployment.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment-status
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="newDeploymentStatus">The new deployment status to create.</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableEventsClient">
            <summary>
            A client for GitHub's Activity Events API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/events/">Activity Events API documentation</a> for more information
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAll">
            <summary>
            Gets all the public events
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all the public events
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllIssuesForRepository(System.String,System.String)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllIssuesForRepository(System.Int64)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllIssuesForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllIssuesForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForRepositoryNetwork(System.String,System.String)">
            <summary>
            Gets all the events for a given repository network
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForRepositoryNetwork(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository network
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForOrganization(System.String)">
            <summary>
            Gets all the events for a given organization
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-an-organization
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given organization
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-an-organization
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllUserReceived(System.String)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllUserReceived(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllUserReceivedPublic(System.String)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllUserReceivedPublic(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllUserPerformed(System.String)">
            <summary>
            Gets all the events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllUserPerformed(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllUserPerformedPublic(System.String)">
            <summary>
            Gets all the public events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllUserPerformedPublic(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the public events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForAnOrganization(System.String,System.String)">
            <summary>
            Gets all the events that are associated with an organization.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-for-an-organization
            </remarks>
            <param name="user">The login of the user</param>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableEventsClient.GetAllForAnOrganization(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that are associated with an organization.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-for-an-organization
            </remarks>
            <param name="user">The login of the user</param>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableFeedsClient">
            <summary>
            A client for GitHub's Feeds API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/feeds/">Feeds API documentation</a> for more information
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableFeedsClient.GetFeeds">
            <summary>
            Gets all the feeds available to the authenticating user
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/feeds/#list-feeds
            </remarks>
            <returns>All the public <see cref="T:Octokit.Feed"/>s for the particular user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.GetAllForCurrent">
            <summary>
            List the authenticated user’s followers
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that follow the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s followers
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that follow the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.GetAll(System.String)">
            <summary>
            List a user’s followers
            </summary>
            <param name="login">The login name for the user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that follow the passed user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            List a user’s followers
            </summary>
            <param name="options">Options for changing the API response</param>
            <param name="login">The login name for the user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that follow the passed user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.GetAllFollowingForCurrent">
            <summary>
            List who the authenticated user is following
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that the authenticated user follows.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.GetAllFollowingForCurrent(Octokit.ApiOptions)">
            <summary>
            List who the authenticated user is following
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that the authenticated user follows.</returns>        
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.GetAllFollowing(System.String)">
            <summary>
            List who a user is following
            </summary>
            <param name="login">The login name of the user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that the passed user follows.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.GetAllFollowing(System.String,Octokit.ApiOptions)">
            <summary>
            List who a user is following
            </summary>
            <param name="login">The login name of the user</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that the passed user follows.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.IsFollowingForCurrent(System.String)">
            <summary>
            Check if the authenticated user follows another user
            </summary>
            <param name="following">The login name of the other user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.IsFollowing(System.String,System.String)">
            <summary>
            Check if one user follows another user
            </summary>
            <param name="login">The login name of the user</param>
            <param name="following">The login name of the other user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#check-if-one-user-follows-another">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.Follow(System.String)">
            <summary>
            Follow a user
            </summary>
            <param name="login">The login name of the user to follow</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#follow-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableFollowersClient.Unfollow(System.String)">
            <summary>
            Unfollow a user
            </summary>
            <param name="login">The login name of the user to unfollow</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#unfollow-a-user">API documentation</a> for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistCommentsClient.Get(System.String,System.Int32)">
            <summary>
            Gets a single comment by gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#get-a-single-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistCommentsClient.GetAllForGist(System.String)">
            <summary>
            Gets all comments for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#list-comments-on-a-gist</remarks>
            <param name="gistId">The id of the gist</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistCommentsClient.GetAllForGist(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all comments for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#list-comments-on-a-gist</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistCommentsClient.Create(System.String,System.String)">
            <summary>
            Creates a comment for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#create-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="comment">The body of the comment</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistCommentsClient.Update(System.String,System.Int32,System.String)">
            <summary>
            Updates the comment with the specified gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#edit-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <param name="comment">The updated body of the comment</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistCommentsClient.Delete(System.String,System.Int32)">
            <summary>
            Deletes the comment with the specified gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#delete-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <returns>IObservable{Unit}.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.Get(System.String)">
            <summary>
            Gets a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#get-a-single-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAll">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAll(System.DateTimeOffset)">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAll(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllPublic">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllPublic(Octokit.ApiOptions)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllPublic(System.DateTimeOffset)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllPublic(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllStarred">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllStarred(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllStarred(System.DateTimeOffset)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllStarred(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllForUser(System.String)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllForUser(System.String,System.DateTimeOffset)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllForUser(System.String,System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllCommits(System.String)">
            <summary>
            List gist commits
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-commits
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllCommits(System.String,Octokit.ApiOptions)">
            <summary>
            List gist commits
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-commits
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllForks(System.String)">
            <summary>
            List gist forks
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-forks
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.GetAllForks(System.String,Octokit.ApiOptions)">
            <summary>
            List gist forks
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-forks
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.Create(Octokit.NewGist)">
            <summary>
            Creates a new gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#create-a-gist
            </remarks>
            <param name="newGist">The new gist to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.Fork(System.String)">
            <summary>
            Creates a fork of a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#fork-a-gist
            </remarks>
            <param name="id">The id of the gist to fork</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.Edit(System.String,Octokit.GistUpdate)">
            <summary>
            Edits a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#delete-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="gistUpdate">The update to the gist</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.Delete(System.String)">
            <summary>
            Deletes a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#delete-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.Star(System.String)">
            <summary>
            Stars a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#star-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.Unstar(System.String)">
            <summary>
            Unstars a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#unstar-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGistsClient.IsStarred(System.String)">
            <summary>
            Checks if the gist is starred
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#check-if-a-gist-is-starred
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableGitDatabaseClient">
            <summary>
            Used to maintain api structure therefore contains no methods
            </summary>
        </member>
        <member name="T:Octokit.Reactive.IObservableGitHubAppInstallationsClient">
            <summary>
            A client for GitHub Applications Installations API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/apps/installations/">GitHub Apps Installations API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppInstallationsClient.GetAllRepositoriesForCurrent">
            <summary>
            List repositories of the authenticated GitHub App Installation (requires GitHubApp Installation-Token auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppInstallationsClient.GetAllRepositoriesForCurrent(Octokit.ApiOptions)">
            <summary>
            List repositories of the authenticated GitHub App Installation (requires GitHubApp Installation-Token auth).
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppInstallationsClient.GetAllRepositoriesForCurrentUser(System.Int64)">
            <summary>
            List repositories accessible to the user for an installation (requires GitHubApp User-To-Server Auth).
            </summary>
            <param name="installationId">The Id of the installation</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppInstallationsClient.GetAllRepositoriesForCurrentUser(System.Int64,Octokit.ApiOptions)">
            <summary>
            List repositories accessible to the user for an installation (requires GitHubApp User-To-Server Auth).
            </summary>
            <param name="installationId">The Id of the installation</param>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation</remarks>
        </member>
        <member name="T:Octokit.Reactive.IObservableGitHubAppsClient">
            <summary>
            A client for GitHub Applications API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/apps/">GitHub Apps API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableGitHubAppsClient.Installation">
            <summary>
            Access GitHub's Apps Installations API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/apps/installations/
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.Get(System.String)">
            <summary>
            Get a single GitHub App (if private, requires Personal Access Token or GitHubApp auth)
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-github-app</remarks>
            <param name="slug">The URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetCurrent">
            <summary>
            Returns the GitHub App associated with the authentication credentials used (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-the-authenticated-github-app</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetAllInstallationsForCurrent">
            <summary>
            List installations of the authenticated GitHub App (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-installations</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetAllInstallationsForCurrent(Octokit.ApiOptions)">
            <summary>
            List installations of the authenticated GitHub App (requires GitHubApp auth).
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/#find-installations</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetInstallation(System.Int64)">
            <summary>
            Get a single GitHub App Installation (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-installation</remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetInstallationForCurrent(System.Int64)">
            <summary>
            Get a single GitHub App Installation (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-installation</remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetAllInstallationsForCurrentUser">
            <summary>
            List installations for the currently authenticated user (requires GitHubApp User-To-Server Auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#list-installations-for-user</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetAllInstallationsForCurrentUser(Octokit.ApiOptions)">
            <summary>
            List installations for the currently authenticated user (requires GitHubApp User-To-Server Auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#list-installations-for-user</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.CreateInstallationToken(System.Int64)">
            <summary>
            Create a time bound access token for a GitHubApp Installation that can be used to access other API endpoints (requires GitHubApp auth).
            </summary>
            <remarks>
            https://developer.github.com/v3/apps/#create-a-new-installation-token
            https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/#authenticating-as-an-installation
            https://developer.github.com/v3/apps/available-endpoints/
            </remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetOrganizationInstallationForCurrent(System.String)">
            <summary>
            Enables an authenticated GitHub App to find the organization's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-organization-installation</remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetRepositoryInstallationForCurrent(System.String,System.String)">
            <summary>
            Enables an authenticated GitHub App to find the repository's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-repository-installation</remarks>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetRepositoryInstallationForCurrent(System.Int64)">
            <summary>
            Enables an authenticated GitHub App to find the repository's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-repository-installation</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubAppsClient.GetUserInstallationForCurrent(System.String)">
            <summary>
            Enables an authenticated GitHub App to find the users's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-user-installation</remarks>
            <param name="user">The name of the user</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableIssueCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create </param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create </param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            List reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            List reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="T:Octokit.Reactive.IObservableIssueCommentsClient">
            <summary>
            A client for GitHub's Issue Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/comments/">Issue Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Issue Comment by id.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#get-a-single-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The issue comment id</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Issue Comment by id.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#get-a-single-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The issue comment id</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForRepository(System.Int64,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForRepository(System.Int64,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.Create(System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a new Issue Comment for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="newComment">The text of the new comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.Create(System.Int64,System.Int32,System.String)">
            <summary>
            Creates a new Issue Comment for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="newComment">The text of the new comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.Update(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates a specified Issue Comment.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#edit-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The comment id</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.Update(System.Int64,System.Int32,System.String)">
            <summary>
            Updates a specified Issue Comment.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#edit-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The comment id</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified Issue Comment
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#delete-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The comment id</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes the specified Issue Comment
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#delete-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The comment id</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableIssueReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions/">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            List reactions for a specified Issue.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Issue.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            List reactions for a specified Issue.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Issue.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
            <param name="reaction">The reaction to create </param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
            <param name="reaction">The reaction to create </param>
        </member>
        <member name="T:Octokit.Reactive.IObservableIssuesClient">
            <summary>
            A client for GitHub's Issues API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/">Issues API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableIssuesClient.Assignee">
            <summary>
            Client for managing assignees.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.IObservableIssuesClient.Milestone">
            <summary>
            Client for managing milestones.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.IObservableIssuesClient.Events">
            <summary>
            Client for reading various event information associated with issues/pull requests.  
            This is useful both for display on issue/pull request information pages and also to 
            determine who should be notified of comments.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.IObservableIssuesClient.Labels">
            <summary>
            Client for managing labels.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.IObservableIssuesClient.Comment">
            <summary>
            Client for managing comments.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.IObservableIssuesClient.Timeline">
            <summary>
            Client for reading the timeline of events for an issue
            </summary>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Issue by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#get-a-single-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Issue by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#get-a-single-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForCurrent">
            <summary>
            Gets all open issues assigned to the authenticated user across all the authenticated user’s visible
            repositories including owned repositories, member repositories, and organization repositories.
            </summary>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user across all the authenticated user’s visible
            repositories including owned repositories, member repositories, and organization repositories.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForCurrent(Octokit.IssueRequest)">
            <summary>
            Gets all issues across all the authenticated user’s visible repositories including owned repositories, 
            member repositories, and organization repositories.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForCurrent(Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues across all the authenticated user’s visible repositories including owned repositories, 
            member repositories, and organization repositories.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForOwnedAndMemberRepositories">
            <summary>
            Gets all open issues assigned to the authenticated user across owned and member repositories for the
            authenticated user.
            </summary>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user across owned and member repositories for the
            authenticated user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.IssueRequest)">
            <summary>
            Gets all issues across owned and member repositories for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues across owned and member repositories for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForOrganization(System.String)">
            <summary>
            Gets all open issues assigned to the authenticated user for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForOrganization(System.String,Octokit.IssueRequest)">
            <summary>
            Gets all issues for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForOrganization(System.String,Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForRepository(System.String,System.String,Octokit.RepositoryIssueRequest)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForRepository(System.Int64,Octokit.RepositoryIssueRequest)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForRepository(System.String,System.String,Octokit.RepositoryIssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.GetAllForRepository(System.Int64,Octokit.RepositoryIssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Create(System.String,System.String,Octokit.NewIssue)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newIssue">A <see cref="T:Octokit.NewIssue"/> instance describing the new issue to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Create(System.Int64,Octokit.NewIssue)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newIssue">A <see cref="T:Octokit.NewIssue"/> instance describing the new issue to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Update(System.String,System.String,System.Int32,Octokit.IssueUpdate)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="issueUpdate">An <see cref="T:Octokit.IssueUpdate"/> instance describing the changes to make to the issue
            </param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Update(System.Int64,System.Int32,Octokit.IssueUpdate)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="issueUpdate">An <see cref="T:Octokit.IssueUpdate"/> instance describing the changes to make to the issue
            </param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Lock(System.String,System.String,System.Int32)">
            <summary>
            Locks an issue for the specified repository. Issue owners and users with push access can lock an issue.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#lock-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Lock(System.Int64,System.Int32)">
            <summary>
            Locks an issue for the specified repository. Issue owners and users with push access can lock an issue.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#lock-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Unlock(System.String,System.String,System.Int32)">
            <summary>
            Unlocks an issue for the specified repository. Issue owners and users with push access can unlock an issue.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#unlock-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesClient.Unlock(System.Int64,System.Int32)">
            <summary>
            Unlocks an issue for the specified repository. Issue owners and users with push access can unlock an issue.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#unlock-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableIssuesEventsClient">
            <summary>
            A client for GitHub's Issue Events API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/events/">Issue Events API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single event
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#get-a-single-event
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The event id</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesEventsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single event
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#get-a-single-event
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The event id</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableIssuesLabelsClient">
            <summary>
            A client for GitHub's Issue Labels API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/">Issue Labels API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForMilestone(System.String,System.String,System.Int32)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the milestone</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForMilestone(System.Int64,System.Int32)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the milestone</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForMilestone(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the milestone</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.GetAllForMilestone(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the milestone</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single Label by name.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-a-single-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single Label by name.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-a-single-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#delete-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#delete-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.Create(System.String,System.String,Octokit.NewLabel)">
            <summary>
            Creates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#create-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newLabel">The data for the label to be created</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.Create(System.Int64,Octokit.NewLabel)">
            <summary>
            Creates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#create-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newLabel">The data for the label to be created</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.Update(System.String,System.String,System.String,Octokit.LabelUpdate)">
            <summary>
            Updates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#update-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
            <param name="labelUpdate">The data for the label to be updated</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.Update(System.Int64,System.String,Octokit.LabelUpdate)">
            <summary>
            Updates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#update-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
            <param name="labelUpdate">The data for the label to be updated</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.AddToIssue(System.String,System.String,System.Int32,System.String[])">
            <summary>
            Adds a label to an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#add-labels-to-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to add</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.AddToIssue(System.Int64,System.Int32,System.String[])">
            <summary>
            Adds a label to an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#add-labels-to-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to add</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.RemoveFromIssue(System.String,System.String,System.Int32,System.String)">
            <summary>
            Removes a label from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labelName">The name of the label to remove</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.RemoveFromIssue(System.Int64,System.Int32,System.String)">
            <summary>
            Removes a label from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labelName">The name of the label to remove</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.ReplaceAllForIssue(System.String,System.String,System.Int32,System.String[])">
            <summary>
            Replaces all labels on the specified issues with the provided labels
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to set</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.ReplaceAllForIssue(System.Int64,System.Int32,System.String[])">
            <summary>
            Replaces all labels on the specified issues with the provided labels
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to set</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.RemoveAllFromIssue(System.String,System.String,System.Int32)">
            <summary>
            Removes all labels from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssuesLabelsClient.RemoveAllFromIssue(System.Int64,System.Int32)">
            <summary>
            Removes all labels from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableIssueTimelineClient">
            <summary>
            A client for GitHub's Issue Timeline API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/issues/timeline/">Issue Timeline API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueTimelineClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueTimelineClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueTimelineClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableIssueTimelineClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableMergingClient">
            <summary>
            A client for GitHub's Git Merging API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/merging/">Git Merging API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableMergingClient.Create(System.String,System.String,Octokit.NewMerge)">
            <summary>
            Create a merge for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/merging/#perform-a-merge
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="merge">The merge to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMergingClient.Create(System.Int64,Octokit.NewMerge)">
            <summary>
            Create a merge for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/merging/#perform-a-merge
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="merge">The merge to create</param>
            <returns></returns>
        </member>
        <member name="P:Octokit.Reactive.IObservableMigrationClient.Migrations">
            <summary>
            A client for GitHub's Migrations API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/migration/migrations/">Enterprise License API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.IObservableMigrationsClient">
            <summary>
            An interface for GitHub's Migrations API client.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/migration/migrations/">docs</a>
            for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableMigrationsClient.Start(System.String,Octokit.StartMigrationRequest)">
            <summary>
            Starts a new migration specified for the given organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#start-a-migration
            </remarks>
            <param name="org">The organization for which to start a migration.</param>
            <param name="migration">Sprcifies parameters for the migration in a 
            <see cref="T:Octokit.StartMigrationRequest"/> object.</param>
            <returns>The started migration.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMigrationsClient.GetAll(System.String)">
            <summary>
            Gets the list of the most recent migrations of the the organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations
            </remarks>
            <param name="org">The organization of which to list migrations.</param>
            <returns>List of most recent <see cref="T:Octokit.Migration"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMigrationsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of the most recent migrations of the the organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations
            </remarks>
            <param name="org">The organization of which to list migrations.</param>
            <param name="options">Options for changing the API response</param>
            <returns>List of most recent <see cref="T:Octokit.Migration"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMigrationsClient.Get(System.String,System.Int32)">
            <summary>
            Get the status of a migration.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-the-status-of-a-migration
            </remarks>
            <param name="org">The organization which is migrating.</param>
            <param name="id">Migration Id of the organization.</param>
            <returns>A <see cref="T:Octokit.Migration"/> object representing the state of migration.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMigrationsClient.GetArchive(System.String,System.Int32)">
            <summary>
            Get the migration archive.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#download-a-migration-archive
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <returns>The binary contents of the archive as a byte array.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMigrationsClient.DeleteArchive(System.String,System.Int32)">
            <summary>
            Deletes a previous migration archive.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#delete-a-migration-archive
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMigrationsClient.UnlockRepository(System.String,System.Int32,System.String)">
            <summary>
            Unlocks a repository that was locked for migration.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#unlock-a-repository
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <param name="repo">The repo to unlock.</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableMilestonesClient">
            <summary>
            A client for GitHub's Issue Milestones API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/milestones/">Issue Milestones API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Milestone by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#get-a-single-milestone
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Milestone by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#get-a-single-milestone
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.GetAllForRepository(System.String,System.String,Octokit.MilestoneRequest)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.GetAllForRepository(System.Int64,Octokit.MilestoneRequest)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.GetAllForRepository(System.String,System.String,Octokit.MilestoneRequest,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.GetAllForRepository(System.Int64,Octokit.MilestoneRequest,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.Create(System.String,System.String,Octokit.NewMilestone)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create a
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#create-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newMilestone">A <see cref="T:Octokit.NewMilestone"/> instance describing the new Milestone to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.Create(System.Int64,Octokit.NewMilestone)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create a
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#create-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newMilestone">A <see cref="T:Octokit.NewMilestone"/> instance describing the new Milestone to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.Update(System.String,System.String,System.Int32,Octokit.MilestoneUpdate)">
            <summary>
            Updates a milestone for the specified repository. Any user with pull access to a repository can create a
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#update-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Milestone number</param>
            <param name="milestoneUpdate">An <see cref="T:Octokit.MilestoneUpdate"/> instance describing the changes to make to the Milestone
            </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.Update(System.Int64,System.Int32,Octokit.MilestoneUpdate)">
            <summary>
            Updates a milestone for the specified repository. Any user with pull access to a repository can create a
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#update-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Milestone number</param>
            <param name="milestoneUpdate">An <see cref="T:Octokit.MilestoneUpdate"/> instance describing the changes to make to the Milestone
            </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#delete-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMilestonesClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#delete-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMiscellaneousClient.GetAllEmojis">
            <summary>
            Gets all the emojis available to use on GitHub.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:System.IObservable`1"/> of emoji and their URI.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMiscellaneousClient.RenderArbitraryMarkdown(Octokit.NewArbitraryMarkdown)">
            <summary>
            Gets the rendered Markdown for an arbitrary markdown document.
            </summary>
            <param name="markdown">An arbitrary Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMiscellaneousClient.RenderRawMarkdown(System.String)">
            <summary>
            Gets the rendered Markdown for the specified plain-text Markdown document.
            </summary>
            <param name="markdown">A plain-text Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMiscellaneousClient.GetAllGitIgnoreTemplates">
            <summary>
            List all templates available to pass as an option when creating a repository.
            </summary>
            <returns>An observable list of gitignore template names.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMiscellaneousClient.GetGitIgnoreTemplate(System.String)">
            <summary>
            Retrieves the source for a single GitIgnore template
            </summary>
            <param name="templateName">Returns the template source for the given template</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableMiscellaneousClient.GetAllLicenses">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <remarks>This is a PREVIEW API! Use it at your own risk.</remarks>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMiscellaneousClient.GetLicense(System.String)">
            <summary>
            Retrieves a license based on the license key such as "mit"
            </summary>
            <param name="key"></param>
            <returns>A <see cref="T:Octokit.License" /> that includes the license key, text, and attributes of the license.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMiscellaneousClient.GetRateLimits">
            <summary>
            Gets API Rate Limits (API service rather than header info).
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.MiscellaneousRateLimit"/> of Rate Limits.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableMiscellaneousClient.GetMetadata">
            <summary>
            Retrieves information about GitHub.com, the service or a GitHub Enterprise installation.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.Meta"/> containing metadata about the GitHub instance.</returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableNotificationsClient">
            <summary>
            A client for GitHub's Activity Notifications API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/notifications/">Activity Notifications API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForCurrent">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForRepository(System.Int64)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForCurrent(Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForCurrent(Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForRepository(System.String,System.String,Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForRepository(System.Int64,Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForRepository(System.String,System.String,Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetAllForRepository(System.Int64,Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.MarkAsRead">
            <summary>
            Marks all notifications as read.
            </summary>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-as-read</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.MarkAsRead(Octokit.MarkAsReadRequest)">
            <summary>
            Marks all notifications as read.
            </summary>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-as-read</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.MarkAsReadForRepository(System.String,System.String)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.MarkAsReadForRepository(System.Int64)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.MarkAsReadForRepository(System.String,System.String,Octokit.MarkAsReadRequest)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.MarkAsReadForRepository(System.Int64,Octokit.MarkAsReadRequest)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.Get(System.Int32)">
            <summary>
            Retrives a single <see cref="T:Octokit.Notification"/> by Id.
            </summary>
            <param name="id">The Id of the notification to retrieve.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#view-a-single-thread</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.MarkAsRead(System.Int32)">
            <summary>
            Marks a single notification as read.
            </summary>
            <param name="id">The id of the notification.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.GetThreadSubscription(System.Int32)">
            <summary>
            Retrives a <see cref="T:Octokit.ThreadSubscription"/> for the provided thread id.
            </summary>
            <param name="id">The Id of the thread to retrieve subscription status.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#get-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.SetThreadSubscription(System.Int32,Octokit.NewThreadSubscription)">
            <summary>
            Sets the authenticated user's subscription settings for a given thread.
            </summary>
            <param name="id">The Id of the thread to update.</param>
            <param name="threadSubscription">The subscription parameters to set.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#set-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableNotificationsClient.DeleteThreadSubscription(System.Int32)">
            <summary>
            Deletes the authenticated user's subscription to a given thread.
            </summary>
            <param name="id">The Id of the thread to delete subscription from.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableOauthClient.GetGitHubLoginUrl(Octokit.OauthLoginRequest)">
            <summary>
            Gets the URL used in the first step of the web flow. The Web application should redirect to this URL.
            </summary>
            <param name="request">Parameters to the Oauth web flow login url</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOauthClient.CreateAccessToken(Octokit.OauthTokenRequest)">
            <summary>
            Makes a request to get an access token using the code returned when GitHub.com redirects back from the URL
            <see cref="M:Octokit.Reactive.IObservableOauthClient.GetGitHubLoginUrl(Octokit.OauthLoginRequest)">GitHub login url</see> to the application.
            </summary>
            <remarks>
            If the user accepts your request, GitHub redirects back to your site with a temporary code in a code
            parameter as well as the state you provided in the previous step in a state parameter. If the states don’t
            match, the request has been created by a third party and the process should be aborted. Exchange this for
            an access token using this method.
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAll(System.String)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The members filter, <see cref="T:Octokit.OrganizationMembersFilter"/> </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The members filter, <see cref="T:Octokit.OrganizationMembersFilter"/> </param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersRole)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersRole,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.OrganizationMembersRole)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The members filter, <see cref="T:Octokit.OrganizationMembersFilter"/> </param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.OrganizationMembersRole,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The members filter, <see cref="T:Octokit.OrganizationMembersFilter"/> </param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAllPublic(System.String)">
            <summary>
            List all users who have publicized their membership of the organization.
            </summary>
            <remarks>http://developer.github.com/v3/orgs/members/#public-members-list</remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAllPublic(System.String,Octokit.ApiOptions)">
            <summary>
            List all users who have publicized their membership of the organization.
            </summary>
            <remarks>http://developer.github.com/v3/orgs/members/#public-members-list</remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.CheckMember(System.String,System.String)">
            <summary>
            Check if a user is, publicly or privately, a member of the organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#check-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.CheckMemberPublic(System.String,System.String)">
            <summary>
            Check is a user is publicly a member of the organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#check-public-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.Delete(System.String,System.String)">
            <summary>
            Removes a user from the organization, this will also remove them from all teams
            within the organization and they will no longer have any access to the organization's
            repositories.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#remove-a-member">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.Publicize(System.String,System.String)">
            <summary>
            Make the authenticated user's organization membership public.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/orgs/members/#publicize-a-users-membership">API documentation</a> 
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.Conceal(System.String,System.String)">
            <summary>
            Make the authenticated user's organization membership private.
            </summary>
            <remarks>
            This method requries authentication.
            See the <a href="http://developer.github.com/v3/orgs/members/#conceal-a-users-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAllPendingInvitations(System.String)">
            <summary>
            List all pending invitations for the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationMembersClient.GetAllPendingInvitations(System.String,Octokit.ApiOptions)">
            <summary>
            List all pending invitations for the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options to change API behaviour</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationOutsideCollaboratorsClient.GetAll(System.String)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.ApiOptions)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationOutsideCollaboratorsClient.Delete(System.String,System.String)">
            <summary>
            Removes a user as an outside collaborator from the organization, this will remove them from all repositories
            within the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login of the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationOutsideCollaboratorsClient.ConvertFromMember(System.String,System.String)">
            <summary>
            Converts an organization member to an outside collaborator, 
            when an organization member is converted to an outside collaborator, 
            they'll only have access to the repositories that their current team membership allows. 
            The user will no longer be a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator"> API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="P:Octokit.Reactive.IObservableOrganizationsClient.Member">
            <summary>
            Returns a client to manage members of an organization.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.IObservableOrganizationsClient.Team">
            <summary>
            Returns a client to manage teams for an organization.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.IObservableOrganizationsClient.OutsideCollaborator">
            <summary>
            Returns a client to manage outside collaborators of an organization.
            </summary>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationsClient.Get(System.String)">
            <summary>
            Returns the specified organization.
            </summary>
            <param name="org">The login of the specified organization,</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationsClient.GetAllForCurrent">
            <summary>
            Returns all the organizations for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all the organizations for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationsClient.GetAllForUser(System.String)">
            <summary>
            Returns all the organizations for the specified user
            </summary>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationsClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Returns all the organizations for the specified user
            </summary>
            <param name="user">The login for the user</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationsClient.GetAll">
            <summary>
            Returns all the organizations
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationsClient.GetAll(Octokit.OrganizationRequest)">
            <summary>
            Returns all the organizations
            </summary>
            <param name="request">Search parameters of the last organization seen</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableOrganizationsClient.Update(System.String,Octokit.OrganizationUpdate)">
            <summary>
            Update the specified organization with data from <see cref="T:Octokit.OrganizationUpdate"/>.
            </summary>
            <param name="organizationName">The name of the organization to update.</param>
            <param name="updateRequest"></param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.Organization"/></returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableProjectCardsClient">
            <summary>
            A client for GitHub's Project Cards API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/cards/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectCardsClient.GetAll(System.Int32)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectCardsClient.GetAll(System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectCardsClient.GetAll(System.Int32,Octokit.ProjectCardRequest)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="request">Used to filter the list of project cards returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectCardsClient.GetAll(System.Int32,Octokit.ProjectCardRequest,Octokit.ApiOptions)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="request">Used to filter the list of project cards returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectCardsClient.Get(System.Int32)">
            <summary>
            Gets a single card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#get-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectCardsClient.Create(System.Int32,Octokit.NewProjectCard)">
            <summary>
            Creates a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#create-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="newProjectCard">The card to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectCardsClient.Update(System.Int32,Octokit.ProjectCardUpdate)">
            <summary>
            Updates a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#update-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
            <param name="projectCardUpdate">New values to update the card with</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectCardsClient.Delete(System.Int32)">
            <summary>
            Deletes a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#delete-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectCardsClient.Move(System.Int32,Octokit.ProjectCardMove)">
            <summary>
            Moves a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#move-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
            <param name="position">The position to move the card</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableProjectColumnsClient">
            <summary>
            A client for GitHub's Project Columns API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/columns/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectColumnsClient.GetAll(System.Int32)">
            <summary>
            Gets all columns.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#list-project-columns">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectColumnsClient.GetAll(System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all columns.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#list-project-columns">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectColumnsClient.Get(System.Int32)">
            <summary>
            Gets a single column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#get-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectColumnsClient.Create(System.Int32,Octokit.NewProjectColumn)">
            <summary>
            Creates a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#create-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
            <param name="newProjectColumn">The column to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectColumnsClient.Update(System.Int32,Octokit.ProjectColumnUpdate)">
            <summary>
            Updates a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#update-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
            <param name="projectColumnUpdate">New values to update the column with</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectColumnsClient.Delete(System.Int32)">
            <summary>
            Deletes a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#delete-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectColumnsClient.Move(System.Int32,Octokit.ProjectColumnMove)">
            <summary>
            Moves a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#move-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
            <param name="position">The position to move the column</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableProjectsClient">
            <summary>
            A client for GitHub's Repository Projects API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ProjectRequest)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForRepository(System.Int64)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForRepository(System.Int64,Octokit.ProjectRequest)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForRepository(System.Int64,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForOrganization(System.String)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organziation</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForOrganization(System.String,Octokit.ProjectRequest)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organziation</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organziation</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.GetAllForOrganization(System.String,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organziation</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.Get(System.Int32)">
            <summary>
            Gets a single project for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#get-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.CreateForRepository(System.Int64,Octokit.NewProject)">
            <summary>
            Creates a project for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#create-a-repository-project">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newProject">The new project to create for the specified repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.CreateForOrganization(System.String,Octokit.NewProject)">
            <summary>
            Creates a project for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#create-an-organization-project">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="newProject">The new project to create for the specified repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.Update(System.Int32,Octokit.ProjectUpdate)">
            <summary>
            Updates a project for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#update-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
            <param name="projectUpdate">The modified project</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableProjectsClient.Delete(System.Int32)">
            <summary>
            Deletes a project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#delete-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
        </member>
        <member name="P:Octokit.Reactive.IObservableProjectsClient.Card">
            <summary>
            A client for GitHub's Project Cards API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/cards/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableProjectsClient.Column">
            <summary>
            A client for GitHub's Project Columns API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/columns/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.IObservablePullRequestReviewCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions/">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="T:Octokit.Reactive.IObservablePullRequestReviewCommentsClient">
            <summary>
            A client for GitHub's Pull Request Review Comments API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/comments/">Review Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestReviewCommentRequest)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.PullRequestReviewCommentRequest)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestReviewCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.PullRequestReviewCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetComment(System.String,System.String,System.Int32)">
            <summary>
            Gets a single pull request review comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#get-a-single-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.GetComment(System.Int64,System.Int32)">
            <summary>
            Gets a single pull request review comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#get-a-single-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentCreate)">
            <summary>
            Creates a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewCommentCreate)">
            <summary>
            Creates a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.CreateReply(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentReplyCreate)">
            <summary>
            Creates a comment on a pull request review as a reply to another comment.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.CreateReply(System.Int64,System.Int32,Octokit.PullRequestReviewCommentReplyCreate)">
            <summary>
            Creates a comment on a pull request review as a reply to another comment.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.Edit(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentEdit)">
            <summary>
            Edits a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#edit-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="comment">The edited comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.Edit(System.Int64,System.Int32,Octokit.PullRequestReviewCommentEdit)">
            <summary>
            Edits a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#edit-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="comment">The edited comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#delete-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#delete-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="T:Octokit.Reactive.IObservablePullRequestReviewRequestsClient">
            <summary>
            A client for GitHub's Pull Request Review Requests API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/review_requests/">Review Requests API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewRequestsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewRequestsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewRequestsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewRequestsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewRequestsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Creates review requests on a pull request for specified users.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#create-a-review-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="users">List of logins of user will be requested for review</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewRequestsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Creates review requests on a pull request for specified users.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#create-a-review-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="users">List of logins of user will be requested for review</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewRequestsClient.Delete(System.String,System.String,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Deletes review request for given users on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="users">List of logins of users that will be not longer requested for review</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewRequestsClient.Delete(System.Int64,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Deletes review request for given users on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="users">List of logins of users that will be not longer requested for review</param>
        </member>
        <member name="T:Octokit.Reactive.IObservablePullRequestReviewsClient">
            <summary>
            A client for GitHub's Pull Request Review API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/reviews/">Review API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Get(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Gets a single pull request review by ID.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Get(System.Int64,System.Int32,System.Int64)">
            <summary>
            Gets a single pull request review by ID.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewCreate)">
            <summary>
            Creates a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="review">The review</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewCreate)">
            <summary>
            Creates a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="review">The review</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Delete(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Deletes a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Delete(System.Int64,System.Int32,System.Int64)">
            <summary>
            Deletes a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Submit(System.String,System.String,System.Int32,System.Int64,Octokit.PullRequestReviewSubmit)">
            <summary>
            Submits a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="submitMessage">The message and event being submitted for the review</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Submit(System.Int64,System.Int32,System.Int64,Octokit.PullRequestReviewSubmit)">
            <summary>
            Submits a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="submitMessage">The message and event being submitted for the review</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Dismiss(System.String,System.String,System.Int32,System.Int64,Octokit.PullRequestReviewDismiss)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="dismissMessage">The message indicating why the review was dismissed</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.Dismiss(System.Int64,System.Int32,System.Int64,Octokit.PullRequestReviewDismiss)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="dismissMessage">The message indicating why the review was dismissed</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.GetAllComments(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.GetAllComments(System.Int64,System.Int32,System.Int64)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.GetAllComments(System.String,System.String,System.Int32,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestReviewsClient.GetAllComments(System.Int64,System.Int32,System.Int64,Octokit.ApiOptions)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.Reactive.IObservablePullRequestsClient">
            <summary>
            A client for GitHub's Pull Requests API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/notifications/">Pull Requests API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservablePullRequestsClient.Review">
            <summary>
            Client for managing reviews.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.IObservablePullRequestsClient.ReviewComment">
            <summary>
            Client for managing review comments.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.IObservablePullRequestsClient.ReviewRequest">
            <summary>
            Client for managing review requests.
            </summary>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Pull Request by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#get-a-single-pull-request
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the pull request</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Pull Request by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#get-a-single-pull-request
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the pull request</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestRequest)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.GetAllForRepository(System.Int64,Octokit.PullRequestRequest)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestRequest,Octokit.ApiOptions)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.GetAllForRepository(System.Int64,Octokit.PullRequestRequest,Octokit.ApiOptions)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Create(System.String,System.String,Octokit.NewPullRequest)">
            <summary>
            Creates a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#create-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newPullRequest">A <see cref="T:Octokit.NewPullRequest"/> instance describing the new PullRequest to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Create(System.Int64,Octokit.NewPullRequest)">
            <summary>
            Creates a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#create-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newPullRequest">A <see cref="T:Octokit.NewPullRequest"/> instance describing the new PullRequest to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Update(System.String,System.String,System.Int32,Octokit.PullRequestUpdate)">
            <summary>
            Update a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#update-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The PullRequest number</param>
            <param name="pullRequestUpdate">An <see cref="T:Octokit.PullRequestUpdate"/> instance describing the changes to make to the PullRequest
            </param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Update(System.Int64,System.Int32,Octokit.PullRequestUpdate)">
            <summary>
            Update a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#update-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The PullRequest number</param>
            <param name="pullRequestUpdate">An <see cref="T:Octokit.PullRequestUpdate"/> instance describing the changes to make to the PullRequest
            </param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Merge(System.String,System.String,System.Int32,Octokit.MergePullRequest)">
            <summary>
            Merge a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#merge-a-pull-request-merge-buttontrade</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="mergePullRequest">A <see cref="T:Octokit.MergePullRequest"/> instance describing a pull request merge</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Merge(System.Int64,System.Int32,Octokit.MergePullRequest)">
            <summary>
            Merge a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#merge-a-pull-request-merge-buttontrade</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="mergePullRequest">A <see cref="T:Octokit.MergePullRequest"/> instance describing a pull request merge</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Merged(System.String,System.String,System.Int32)">
            <summary>
            Gets the pull request merge status.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Merged(System.Int64,System.Int32)">
            <summary>
            Gets the pull request merge status.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Commits(System.String,System.String,System.Int32)">
            <summary>
            Gets the list of commits on a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#list-commits-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Commits(System.Int64,System.Int32)">
            <summary>
            Gets the list of commits on a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#list-commits-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Files(System.String,System.String,System.Int32)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.IObservablePullRequestsClient.Files(System.Int64,System.Int32)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="P:Octokit.Reactive.IObservableReactionsClient.CommitComment">
            <summary>
            Access GitHub's Reactions API for Commit Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableReactionsClient.Issue">
            <summary>
            Access GitHub's Reactions API for Issues.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableReactionsClient.IssueComment">
            <summary>
            Access GitHub's Reactions API for Issue Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableReactionsClient.PullRequestReviewComment">
            <summary>
            Access GitHub's Reactions API for Pull Request Review Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableReactionsClient.Delete(System.Int32)">
            <summary>
            Delete a reaction.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#delete-a-reaction</remarks>        
            <param name="number">The reaction id</param>        
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableReferencesClient">
            <summary>
            A client for GitHub's References API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/refs/">References API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.GetAll(System.Int64)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.GetAllForSubNamespace(System.String,System.String,System.String)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.GetAllForSubNamespace(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.GetAllForSubNamespace(System.Int64,System.String)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.GetAllForSubNamespace(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.Create(System.String,System.String,Octokit.NewReference)">
            <summary>
            Creates a reference for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#create-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.Create(System.Int64,Octokit.NewReference)">
            <summary>
            Creates a reference for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#create-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.Update(System.String,System.String,System.String,Octokit.ReferenceUpdate)">
            <summary>
            Updates a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#update-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <param name="referenceUpdate">The updated reference data</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.Update(System.Int64,System.String,Octokit.ReferenceUpdate)">
            <summary>
            Updates a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#update-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <param name="referenceUpdate">The updated reference data</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#delete-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableReferencesClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#delete-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableReleasesClient">
            <summary>
            A client for GitHub's Releases API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/">Releases API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAll(System.Int64)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="tag">The tag of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="tag">The tag of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetLatest(System.String,System.String)">
            <summary>
            Gets the latest <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-the-latest-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetLatest(System.Int64)">
            <summary>
            Gets the latest <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-the-latest-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Create(System.String,System.String,Octokit.NewRelease)">
            <summary>
            Creates a new <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#create-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="data">A description of the release to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Create(System.Int64,Octokit.NewRelease)">
            <summary>
            Creates a new <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#create-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="data">A description of the release to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Edit(System.String,System.String,System.Int32,Octokit.ReleaseUpdate)">
            <summary>
            Edits an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release</param>
            <param name="data">A description of the release to edit</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Edit(System.Int64,System.Int32,Octokit.ReleaseUpdate)">
            <summary>
            Edits an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <param name="data">A description of the release to edit</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release to delete</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release to delete</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAllAssets(System.String,System.String,System.Int32)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAllAssets(System.Int64,System.Int32)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAllAssets(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAllAssets(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.UploadAsset(Octokit.Release,Octokit.ReleaseAssetUpload)">
            <summary>
            Uploads a <see cref="T:Octokit.ReleaseAsset"/> for the specified release.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#upload-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="release">The <see cref="T:Octokit.Release"/> to attach the uploaded asset to</param>
            <param name="data">Description of the asset with its data</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAsset(System.String,System.String,System.Int32)">
            <summary>
            Gets the specified <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.GetAsset(System.Int64,System.Int32)">
            <summary>
            Gets the specified <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.EditAsset(System.String,System.String,System.Int32,Octokit.ReleaseAssetUpdate)">
            <summary>
            Edits the <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
            <param name="data">Description of the asset with its amended data</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.EditAsset(System.Int64,System.Int32,Octokit.ReleaseAssetUpdate)">
            <summary>
            Edits the <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
            <param name="data">Description of the asset with its amended data</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.DeleteAsset(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.ReleaseAsset"/> from the specified repository
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.ReleaseAsset"/>.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableReleasesClient.DeleteAsset(System.Int64,System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.ReleaseAsset"/> from the specified repository
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.ReleaseAsset"/>.</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepoCollaboratorsClient">
            <summary>
            A client for GitHub's Collaborators on a Repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/">Collaborators API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.GetAll(System.Int64)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.IsCollaborator(System.String,System.String,System.String)">
            <summary>
            Checks if a user is a collaborator on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the prospective collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.IsCollaborator(System.Int64,System.String)">
            <summary>
            Checks if a user is a collaborator on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#get">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the prospective collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.ReviewPermission(System.String,System.String,System.String)">
            <summary>
            Review a user's permission level in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the collaborator to check permission for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.ReviewPermission(System.Int64,System.String)">
            <summary>
            Review a user's permission level in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the collaborator to check permission for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Add(System.String,System.String,System.String)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Add(System.String,System.String,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Add(System.Int64,System.String)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Add(System.Int64,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Invite(System.String,System.String,System.String)">
            <summary>
            Invites a user as a collaborator to a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">The username of the prospective collaborator</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Invite(System.String,System.String,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Invites a user as a collaborator to a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">The username of the prospective collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Invite(System.Int64,System.String)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>        
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Invite(System.Int64,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Invites a user as a collaborator to a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a collaborator from the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the removed collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepoCollaboratorsClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a collaborator from the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#remove-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the removed collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Create(Octokit.NewRepository)">
            <summary>
            Creates a new repository for the current user.
            </summary>
            <param name="newRepository">A <see cref="T:Octokit.NewRepository"/> instance describing the new repository to create</param>
            <returns>An <see cref="T:System.IObservable`1"/> instance for the created repository</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Create(System.String,Octokit.NewRepository)">
            <summary>
            Creates a new repository in the specified organization.
            </summary>
            <param name="organizationLogin">The login of the organization in which to create the repository</param>
            <param name="newRepository">A <see cref="T:Octokit.NewRepository"/> instance describing the new repository to create</param>
            <returns>An <see cref="T:System.IObservable`1"/> instance for the created repository</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Delete(System.String,System.String)">
            <summary>
            Deletes a repository for the specified owner and name.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.</remarks>
            <returns>An <see cref="T:System.IObservable`1"/> for the operation</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Delete(System.Int64)">
            <summary>
            Deletes a repository for the specified owner and name.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.</remarks>
            <returns>An <see cref="T:System.IObservable`1"/> for the operation</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Transfer(System.String,System.String,Octokit.RepositoryTransfer)">
            <summary>
            Transfers the ownership of the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#transfer-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The current owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="repositoryTransfer">Repository transfer information</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Transfer(System.Int64,Octokit.RepositoryTransfer)">
            <summary>
            Transfers the ownership of the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#transfer-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="repositoryTransfer">Repository transfer information</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Get(System.String,System.String)">
            <summary>
            Retrieves the <see cref="T:Octokit.Repository"/> for the specified owner and name.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Get(System.Int64)">
            <summary>
            Retrieves the <see cref="T:Octokit.Repository"/> for the specified owner and name.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllPublic">
            <summary>
            Retrieves every public <see cref="T:Octokit.Repository"/>.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllPublic(Octokit.PublicRepositoryRequest)">
            <summary>
            Retrieves every public <see cref="T:Octokit.Repository"/> since the last repository seen.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="request">Search parameters of the last repository seen</param>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllForCurrent">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the current user.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllForCurrent(Octokit.RepositoryRequest)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the current user.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="request">Search parameters to filter results on</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllForCurrent(Octokit.RepositoryRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the current user.
            </summary>
            <param name="request">Search parameters to filter results on</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllForUser(System.String)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the specified user.
            </summary>
            <param name="login">The account name to search for</param>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the specified user.
            </summary>
            <param name="login">The account name to search for</param>
            <param name="options">Options for changing the API response</param>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllForOrg(System.String)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the specified organization.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllForOrg(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the specified organization.
            </summary>
            <param name="organization">The organization name to search for</param>
            <param name="options">Options for changing the API response</param>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Branch">
            <summary>
            Client for managing branches in a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/">Branches API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Status">
            <summary>
            A client for GitHub's Commit Status API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/statuses/">Commit Status API documentation</a> for more
            details. Also check out the <a href="https://github.com/blog/1227-commit-status-api">blog post</a> 
            that announced this feature.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Deployment">
            <summary>
            Client for GitHub's Repository Deployments API
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployment/">Collaborators API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Statistics">
             <summary>
             Client for GitHub's Repository Statistics API.
             Note that the GitHub API uses caching on these endpoints,
             see <a href="https://developer.github.com/v3/repos/statistics/#a-word-about-caching">a word about caching</a> for more details.
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/repos/statistics/">Statistics API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Comment">
            <summary>
            Client for GitHub's Repository Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/comments/">Repository Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Hooks">
            <summary>
            A client for GitHub's Repository Hooks API.
            </summary>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/">Hooks API documentation</a> for more information.</remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Forks">
            <summary>
            A client for GitHub's Repository Forks API.
            </summary>
            <remarks>See <a href="http://developer.github.com/v3/repos/forks/">Forks API documentation</a> for more information.</remarks>        
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Content">
            <summary>
            Client for GitHub's Repository Contents API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/">Repository Contents API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Merging">
             <summary>
             Client for GitHub's Repository Merging API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/repos/merging/">Merging API documentation</a> for more details
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllContributors(System.String,System.String)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllContributors(System.Int64)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllContributors(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllContributors(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllContributors(System.String,System.String,System.Boolean)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllContributors(System.Int64,System.Boolean)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllContributors(System.String,System.String,System.Boolean,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllContributors(System.Int64,System.Boolean,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllLanguages(System.String,System.String)">
            <summary>
            Gets all languages for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-languages">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All languages used in the repository and the number of bytes of each language.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllLanguages(System.Int64)">
            <summary>
            Gets all languages for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-languages">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All languages used in the repository and the number of bytes of each language.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllTeams(System.String,System.String)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllTeams(System.Int64)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllTeams(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllTeams(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllTags(System.String,System.String)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllTags(System.Int64)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllTags(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetAllTags(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetLicenseContents(System.String,System.String)">
            <summary>
            Get the contents of a repository's license
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>Returns the contents of the repository's license file, if one is detected.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.GetLicenseContents(System.Int64)">
            <summary>
            Get the contents of a repository's license
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>Returns the contents of the repository's license file, if one is detected.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Edit(System.String,System.String,Octokit.RepositoryUpdate)">
            <summary>
            Updates the specified repository with the values given in <paramref name="update"/>
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="update">New values to update the repository with</param>
            <returns>The updated <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoriesClient.Edit(System.Int64,Octokit.RepositoryUpdate)">
            <summary>
            Updates the specified repository with the values given in <paramref name="update"/>
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="update">New values to update the repository with</param>
            <returns>The updated <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Collaborator">
            <summary>
            A client for GitHub's Repo Collaborators.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/">Collaborators API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Commit">
             <summary>
             Client for GitHub's Repository Commits API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/repos/commits/">Commits API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Release">
            <summary>
            Access GitHub's Releases API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/releases/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.PullRequest">
            <summary>
            Client for managing pull requests.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/pulls/">Pull Requests API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.DeployKeys">
            <summary>
            Client for managing deploy keys
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/">Repository Deploy Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Page">
            <summary>
            A client for GitHub's Repository Pages API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/">Repository Pages API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Invitation">
            <summary>
            A client for GitHub's Repository Invitations API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/">Repository Invitations API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Traffic">
            <summary>
            Access GitHub's Repository Traffic API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/traffic/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableRepositoriesClient.Project">
            <summary>
            Access GitHub's Repository Projects API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/projects/
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepositoryBranchesClient">
            <summary>
            A client for GitHub's Repository Branches API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches">Repository Branches API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAll(System.Int64)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets the specified branch.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.Get(System.Int64,System.String)">
            <summary>
            Gets the specified branch.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetBranchProtection(System.String,System.String,System.String)">
            <summary>
            Get the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetBranchProtection(System.Int64,System.String)">
            <summary>
            Get the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateBranchProtection(System.String,System.String,System.String,Octokit.BranchProtectionSettingsUpdate)">
            <summary>
            Update the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Branch protection settings</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateBranchProtection(System.Int64,System.String,Octokit.BranchProtectionSettingsUpdate)">
            <summary>
            Update the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Branch protection settings</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteBranchProtection(System.String,System.String,System.String)">
            <summary>
            Remove the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteBranchProtection(System.Int64,System.String)">
            <summary>
            Remove the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetRequiredStatusChecks(System.String,System.String,System.String)">
            <summary>
            Get the required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetRequiredStatusChecks(System.Int64,System.String)">
            <summary>
            Get the required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateRequiredStatusChecks(System.String,System.String,System.String,Octokit.BranchProtectionRequiredStatusChecksUpdate)">
            <summary>
            Replace required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Required status checks</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateRequiredStatusChecks(System.Int64,System.String,Octokit.BranchProtectionRequiredStatusChecksUpdate)">
            <summary>
            Replace required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Required status checks</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteRequiredStatusChecks(System.String,System.String,System.String)">
            <summary>
            Remove required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteRequiredStatusChecks(System.Int64,System.String)">
            <summary>
            Remove required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAllRequiredStatusChecksContexts(System.String,System.String,System.String)">
            <summary>
            Get the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAllRequiredStatusChecksContexts(System.Int64,System.String)">
            <summary>
            Get the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Replace the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to replace</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Replace the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to replace</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.AddRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Add the required status checks context for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to add</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.AddRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Add the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to add</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Remove the required status checks context for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to remove</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Remove the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to remove</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetReviewEnforcement(System.String,System.String,System.String)">
            <summary>
            Get required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetReviewEnforcement(System.Int64,System.String)">
            <summary>
            Get required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateReviewEnforcement(System.String,System.String,System.String,Octokit.BranchProtectionRequiredReviewsUpdate)">
            <summary>
            Update required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">The required pull request review settings</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateReviewEnforcement(System.Int64,System.String,Octokit.BranchProtectionRequiredReviewsUpdate)">
            <summary>
            Update required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">The required pull request review settings</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.RemoveReviewEnforcement(System.String,System.String,System.String)">
            <summary>
            Remove required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.RemoveReviewEnforcement(System.Int64,System.String)">
            <summary>
            Remove required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Get admin enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAdminEnforcement(System.Int64,System.String)">
            <summary>
            Get admin enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.AddAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Add admin enforcement to protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.AddAdminEnforcement(System.Int64,System.String)">
            <summary>
            Add admin enforcement to protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.RemoveAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Remove admin enforcement on protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.RemoveAdminEnforcement(System.Int64,System.String)">
            <summary>
            Remove admin enforcement on protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetProtectedBranchRestrictions(System.String,System.String,System.String)">
            <summary>
            Get the restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetProtectedBranchRestrictions(System.Int64,System.String)">
            <summary>
            Get the restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteProtectedBranchRestrictions(System.String,System.String,System.String)">
            <summary>
            Remove restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteProtectedBranchRestrictions(System.Int64,System.String)">
            <summary>
            Remove restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAllProtectedBranchTeamRestrictions(System.String,System.String,System.String)">
            <summary>
            Get team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAllProtectedBranchTeamRestrictions(System.Int64,System.String)">
            <summary>
            Get team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Replace team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Replace team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.AddProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Add team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.AddProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Add team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Remove team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams to remove</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Remove team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams to remove</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAllProtectedBranchUserRestrictions(System.String,System.String,System.String)">
            <summary>
            Get user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.GetAllProtectedBranchUserRestrictions(System.Int64,System.String)">
            <summary>
            Get user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Replace user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.UpdateProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Replace user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.AddProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Add user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to add</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.AddProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Add user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to add</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Remove user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to remove</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryBranchesClient.DeleteProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Remove user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to remove</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepositoryCommentsClient">
            <summary>
            A client for GitHub's Repository Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/comments/">Repository Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Repository Comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#get-a-single-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Repository Comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#get-a-single-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.GetAllForCommit(System.String,System.String,System.String)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha of the commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.GetAllForCommit(System.Int64,System.String)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha of the commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.GetAllForCommit(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha of the commit</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.GetAllForCommit(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha of the commit</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.Create(System.String,System.String,System.String,Octokit.NewCommitComment)">
            <summary>
            Creates a new Commit Comment for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#create-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha reference of commit</param>
            <param name="newCommitComment">The new comment to add to the commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.Create(System.Int64,System.String,Octokit.NewCommitComment)">
            <summary>
            Creates a new Commit Comment for a specified Commit.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#create-a-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha reference of commit</param>
            <param name="newCommitComment">The new comment to add to the commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.Update(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates a specified Commit Comment.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#update-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.Update(System.Int64,System.Int32,System.String)">
            <summary>
            Updates a specified Commit Comment.
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#update-a-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified Commit Comment
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#delete-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes the specified Commit Comment
            </summary>
            <remarks>http://developer.github.com/v3/repos/comments/#delete-a-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepositoryCommitsClient">
            <summary>
            A client for GitHub's Repository Commits API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/commits/">Repository Commits API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.Compare(System.String,System.String,System.String,System.String)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.Compare(System.Int64,System.String,System.String)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference for the commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.Get(System.Int64,System.String)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference for the commit</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetAll(System.Int64)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetAll(System.String,System.String,Octokit.CommitRequest)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetAll(System.Int64,Octokit.CommitRequest)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetAll(System.String,System.String,Octokit.CommitRequest,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetAll(System.Int64,Octokit.CommitRequest,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetSha1(System.String,System.String,System.String)">
            <summary>
            Get the SHA-1 of a commit reference
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The repository reference</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryCommitsClient.GetSha1(System.Int64,System.String)">
            <summary>
            Get the SHA-1 of a commit reference
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The repository reference</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepositoryContentsClient">
            <summary>
            Client for accessing contents of files within a repository as base64 encoded content.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/">Repository Contents API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetReadme(System.String,System.String)">
            <summary>
            Returns the HTML rendered README.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetReadme(System.Int64)">
            <summary>
            Returns the HTML rendered README.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetReadmeHtml(System.String,System.String)">
            <summary>
            Returns just the HTML portion of the README without the surrounding HTML document. 
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetReadmeHtml(System.Int64)">
            <summary>
            Returns just the HTML portion of the README without the surrounding HTML document. 
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetArchive(System.String,System.String)">
            <summary>
            Get an archive of a given repository's contents
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetArchive(System.Int64)">
            <summary>
            Get an archive of a given repository's contents
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat,System.String)">
            <summary>
            Get an archive of a given repository's contents, using a specific format and reference
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat,System.String)">
            <summary>
            Get an archive of a given repository's contents, using a specific format and reference
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat,System.String,System.TimeSpan)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <param name="timeout"> Time span until timeout </param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat,System.String,System.TimeSpan)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <param name="timeout"> Time span until timeout </param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetAllContents(System.String,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetAllContents(System.Int64,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetAllContents(System.String,System.String)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetAllContents(System.Int64)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetAllContentsByRef(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetAllContentsByRef(System.Int64,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetAllContentsByRef(System.String,System.String,System.String)">
            <summary>
            Returns the contents of the home directory in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.GetAllContentsByRef(System.Int64,System.String)">
            <summary>
            Returns the contents of the home directory in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.CreateFile(System.String,System.String,System.String,Octokit.CreateFileRequest)">
            <summary>
            Creates a commit that creates a new file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.CreateFile(System.Int64,System.String,Octokit.CreateFileRequest)">
            <summary>
            Creates a commit that creates a new file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.UpdateFile(System.String,System.String,System.String,Octokit.UpdateFileRequest)">
            <summary>
            Creates a commit that updates the contents of a file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to update</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.UpdateFile(System.Int64,System.String,Octokit.UpdateFileRequest)">
            <summary>
            Creates a commit that updates the contents of a file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to update</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.DeleteFile(System.String,System.String,System.String,Octokit.DeleteFileRequest)">
            <summary>
            Creates a commit that deletes a file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to delete</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryContentsClient.DeleteFile(System.Int64,System.String,Octokit.DeleteFileRequest)">
            <summary>
            Creates a commit that deletes a file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to delete</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepositoryDeployKeysClient">
            <summary>
            A client for GitHub's Repository Deploy Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/">Deploy Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Get a single deploy key by number for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#get"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="number">The id of the deploy key.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.Get(System.Int64,System.Int32)">
            <summary>
            Get a single deploy key by number for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#get"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="number">The id of the deploy key.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.GetAll(System.String,System.String)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.GetAll(System.Int64)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.Create(System.String,System.String,Octokit.NewDeployKey)">
            <summary>
            Creates a new deploy key for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#create"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="newDeployKey">The deploy key to create for the repository.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.Create(System.Int64,Octokit.NewDeployKey)">
            <summary>
            Creates a new deploy key for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#create"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="newDeployKey">The deploy key to create for the repository.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a deploy key from a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#delete"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="number">The id of the deploy key to delete.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryDeployKeysClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a deploy key from a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#delete"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="number">The id of the deploy key to delete.</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepositoryForksClient">
            <summary>
            A client for GitHub's Repository Forks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/forks/">Forks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.GetAll(System.String,System.String)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.GetAll(System.Int64)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.GetAll(System.String,System.String,Octokit.RepositoryForksListRequest)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.GetAll(System.Int64,Octokit.RepositoryForksListRequest)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.GetAll(System.String,System.String,Octokit.RepositoryForksListRequest,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.GetAll(System.Int64,Octokit.RepositoryForksListRequest,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.Create(System.String,System.String,Octokit.NewRepositoryFork)">
            <summary>
            Creates a fork for a repository. Specify organization in the fork parameter to create for an organization.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#create-a-fork">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="fork">Used to fork a repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryForksClient.Create(System.Int64,Octokit.NewRepositoryFork)">
            <summary>
            Creates a fork for a repository. Specify organization in the fork parameter to create for an organization.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#create-a-fork">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="fork">Used to fork a repository</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepositoryHooksClient">
            <summary>
            A client for GitHub's Repository Webhooks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/hooks/">Webhooks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.GetAll(System.String,System.String)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.GetAll(System.Int64)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Create(System.String,System.String,Octokit.NewRepositoryHook)">
            <summary>
            Creates a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Create(System.Int64,Octokit.NewRepositoryHook)">
            <summary>
            Creates a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Edit(System.String,System.String,System.Int32,Octokit.EditRepositoryHook)">
            <summary>
            Edits a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <param name="hook">The requested changes to an edit repository hook</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Edit(System.Int64,System.Int32,Octokit.EditRepositoryHook)">
            <summary>
            Edits a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <param name="hook">The requested changes to an edit repository hook</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Test(System.String,System.String,System.Int32)">
            <summary>
            Tests a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#test-a-hook">API documentation</a> for more information. 
            This will trigger the hook with the latest push to the current repository if the hook is subscribed to push events. If the hook 
            is not subscribed to push events, the server will respond with 204 but no test POST will be generated.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Test(System.Int64,System.Int32)">
            <summary>
            Tests a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#test-a-hook">API documentation</a> for more information. 
            This will trigger the hook with the latest push to the current repository if the hook is subscribed to push events. If the hook 
            is not subscribed to push events, the server will respond with 204 but no test POST will be generated.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Ping(System.String,System.String,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Ping(System.Int64,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryHooksClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryInvitationsClient.Accept(System.Int32)">
            <summary>
            Accept a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation">API documentation</a> for more information.
            </remarks>        
            <param name="invitationId">The id of the invitation.</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryInvitationsClient.Decline(System.Int32)">
            <summary>
            Decline a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation">API documentation</a> for more information.
            </remarks>        
            <param name="invitationId">The id of the invitation.</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryInvitationsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository.</param>
            <param name="invitationId">The id of the invitation.</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryInvitationsClient.GetAllForCurrent">
            <summary>
            Gets all invitations for the current user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations">API documentation</a> for more information.
            </remarks>        
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryInvitationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all invitations for the current user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryInvitationsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the invitations on a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository">API documentation</a> for more information.
            </remarks>        
            <param name="repositoryId">The id of the repository</param>         
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryInvitationsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the invitations on a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository">API documentation</a> for more information.
            </remarks>        
            <param name="repositoryId">The id of the repository</param>
            /// <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryInvitationsClient.Edit(System.Int64,System.Int32,Octokit.InvitationUpdate)">
            <summary>
            Updates a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository.</param>
            <param name="invitationId">The id of the invitation.</param>   
            <param name="permissions">The permission to set.</param>
            <returns><see cref="T:Octokit.RepositoryInvitation"/></returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepositoryPagesClient">
            <summary>
            A client for GitHub's Repository Pages API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/">Repository Pages API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.Get(System.String,System.String)">
            <summary>
            Gets the page metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.Get(System.Int64)">
            <summary>
            Gets the page metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.GetAll(System.Int64)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.GetLatest(System.String,System.String)">
            <summary>
            Gets the build metadata for the last build for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-latest-pages-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.GetLatest(System.Int64)">
            <summary>
            Gets the build metadata for the last build for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-latest-pages-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.RequestPageBuild(System.String,System.String)">
            <summary>
            Requests your site be built from the latest revision on the default branch for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#request-a-page-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryPagesClient.RequestPageBuild(System.Int64)">
            <summary>
            Requests your site be built from the latest revision on the default branch for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#request-a-page-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.IObservableRepositoryTrafficClient">
            <summary>
            A client for GitHub's Repository Traffic API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/traffic/">Repository Traffic API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryTrafficClient.GetAllReferrers(System.String,System.String)">
            <summary>
            List the top 10 referrers over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-referrers</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryTrafficClient.GetAllReferrers(System.Int64)">
            <summary>
            List the top 10 referrers over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-referrers</remarks>
            <param name="repositoryId">The owner of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryTrafficClient.GetAllPaths(System.String,System.String)">
            <summary>
            List the top 10 popular contents over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-paths</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryTrafficClient.GetAllPaths(System.Int64)">
            <summary>
            List the top 10 popular contents over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-paths</remarks>
            <param name="repositoryId">The owner of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryTrafficClient.GetViews(System.String,System.String,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of views and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#views</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryTrafficClient.GetViews(System.Int64,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of views and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#views</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryTrafficClient.GetClones(System.String,System.String,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of clones and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#clones</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableRepositoryTrafficClient.GetClones(System.Int64,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of clones and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#clones</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableSearchClient">
            <summary>
            GitHub Search Api Client
            </summary>
        </member>
        <member name="M:Octokit.Reactive.IObservableSearchClient.SearchRepo(Octokit.SearchRepositoriesRequest)">
            <summary>
            search repos
            http://developer.github.com/v3/search/#search-repositories
            </summary>
            <param name="search"></param>
            <returns>List of repositories</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableSearchClient.SearchUsers(Octokit.SearchUsersRequest)">
            <summary>
            search users
            http://developer.github.com/v3/search/#search-users
            </summary>
            <param name="search"></param>
            <returns>List of users</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableSearchClient.SearchIssues(Octokit.SearchIssuesRequest)">
            <summary>
            search issues
            http://developer.github.com/v3/search/#search-issues
            </summary>
            <param name="search"></param>
            <returns>List of issues</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableSearchClient.SearchCode(Octokit.SearchCodeRequest)">
            <summary>
            search code
            http://developer.github.com/v3/search/#search-code
            </summary>
            <param name="search"></param>
            <returns>List of files</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableSearchClient.SearchLabels(Octokit.SearchLabelsRequest)">
            <summary>
            search labels
            https://developer.github.com/v3/search/#search-labels
            </summary>
            <param name="search"></param>
            <returns>List of labels</returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableStarredClient">
            <summary>
            A client for GitHub's Activity Starring API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/starring/">Activity Starring API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllStargazers(System.String,System.String)">
            <summary>
            Retrieves all of the stargazers for the passed repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllStargazers(System.Int64)">
            <summary>
            Retrieves all of the stargazers for the passed repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllStargazers(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllStargazers(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllStargazersWithTimestamps(System.String,System.String)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllStargazersWithTimestamps(System.Int64)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllStargazersWithTimestamps(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllStargazersWithTimestamps(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForCurrent">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForCurrentWithTimestamps">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForCurrentWithTimestamps(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForCurrent(Octokit.StarredRequest)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForCurrent(Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForCurrentWithTimestamps(Octokit.StarredRequest)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForCurrentWithTimestamps(Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForUser(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForUserWithTimestamps(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForUserWithTimestamps(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForUser(System.String,Octokit.StarredRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForUser(System.String,Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForUserWithTimestamps(System.String,Octokit.StarredRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.GetAllForUserWithTimestamps(System.String,Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.CheckStarred(System.String,System.String)">
            <summary>
            Check if a repository is starred by the current authenticated user
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.StarRepo(System.String,System.String)">
            <summary>
            Stars a repository for the authenticated user
            </summary>
            <param name="owner">The owner of the repository to star</param>
            <param name="name">The name of the repository to star</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStarredClient.RemoveStarFromRepo(System.String,System.String)">
            <summary>
            Unstars a repository for the authenticated user
            </summary>
            <param name="owner">The owner of the repository to unstar</param>
            <param name="name">The name of the repository to unstar</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableStatisticsClient">
            <summary>
            A client for GitHub's Repository Statistics API.
            Note that the GitHub API uses caching on these endpoints,
            see <a href="https://developer.github.com/v3/repos/statistics/#a-word-about-caching">a word about caching</a> for more details.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/statistics/">Repository Statistics API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetContributors(System.String,System.String)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetContributors(System.Int64)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetCommitActivity(System.String,System.String)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetCommitActivity(System.Int64)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetCodeFrequency(System.String,System.String)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetCodeFrequency(System.Int64)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetParticipation(System.String,System.String)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total. 
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetParticipation(System.Int64)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total. 
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetPunchCard(System.String,System.String)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableStatisticsClient.GetPunchCard(System.Int64)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableTagsClient">
            <summary>
            A client for GitHub's Git Tags API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/tags/">Git Tags API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableTagsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a tag for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#get-a-tag
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">Tha sha reference of the tag</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTagsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a tag for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#get-a-tag
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">Tha sha reference of the tag</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTagsClient.Create(System.String,System.String,Octokit.NewTag)">
            <summary>
            Create a tag for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#create-a-tag-object
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="tag">The tag to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTagsClient.Create(System.Int64,Octokit.NewTag)">
            <summary>
            Create a tag for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#create-a-tag-object
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="tag">The tag to create</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableTeamsClient">
            <summary>
            A client for GitHub's Org Teams API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/teams/">Orgs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.Get(System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Team"/> by identifier.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#get-team
            </remarks>
            <param name="id">The team identifier.</param>
            <returns>The <see cref="T:Octokit.Team"/> with the given identifier.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAll(System.String)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current org.
            </summary>
            <param name="org">Organization to list all teams of.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the orgs's teams <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current org.
            </summary>
            <param name="org">Organization to list all teams of.</param>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the orgs's teams <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllForCurrent">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current user.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the user's <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current user.
            </summary>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the user's <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllChildTeams(System.Int32)">
            <summary>
            Returns all child teams of the given team.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-child-teams
            </remarks>
            <param name="id">The team identifier</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllChildTeams(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all child teams of the given team.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-child-teams
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllMembers(System.Int32)">
            <summary>
            Returns all members of the given team. 
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllMembers(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all members of the given team. 
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllMembers(System.Int32,Octokit.TeamMembersRequest)">
            <summary>
            Returns all members with the specified role in the given team of the given role.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="request">The request filter</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllMembers(System.Int32,Octokit.TeamMembersRequest,Octokit.ApiOptions)">
            <summary>
            Returns all members with the specified role in the given team of the given role.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="request">The request filter</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.Create(System.String,Octokit.NewTeam)">
            <summary>
            Returns newly created <see cref="T:Octokit.Team" /> for the current org.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>Newly created <see cref="T:Octokit.Team"/></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.Update(System.Int32,Octokit.UpdateTeam)">
            <summary>
            Returns updated <see cref="T:Octokit.Team" /> for the current org.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>Updated <see cref="T:Octokit.Team"/></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.Delete(System.Int32)">
            <summary>
            Delete a team - must have owner permissions to this
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.AddOrEditMembership(System.Int32,System.String,Octokit.UpdateTeamMembership)">
            <summary>
            Adds a <see cref="T:Octokit.User"/> to a <see cref="T:Octokit.Team"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#add-or-update-team-membership">API documentation</a> for more information.
            </remarks>
            <param name="id">The team identifier.</param>
            <param name="login">The user to add to the team.</param>
            <param name="request">Additional parameters for the request</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.RemoveMembership(System.Int32,System.String)">
            <summary>
            Removes a <see cref="T:Octokit.User"/> from a <see cref="T:Octokit.Team"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#remove-team-member">API documentation</a> for more information.
            </remarks>
            <param name="id">The team identifier.</param>
            <param name="login">The user to remove from the team.</param>
            <returns><see langword="true"/> if the user was removed from the team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetMembershipDetails(System.Int32,System.String)">
            <summary>
            Gets whether the user with the given <paramref name="login"/> 
            is a member of the team with the given <paramref name="id"/>.
            A <see cref="T:Octokit.NotFoundException"/> is thrown if the user is not a member.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#get-team-membership">API documentation</a> for more information.
            </remarks>
            <param name="id">The team to check.</param>
            <param name="login">The user to check.</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllRepositories(System.Int32)">
            <summary>
            Returns all team's repositories.
            </summary>
            <param name="id">Team Id.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The team's repositories</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllRepositories(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all team's repositories.
            </summary>
            <param name="id">Team Id.</param>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The team's repositories</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.RemoveRepository(System.Int32,System.String,System.String)">
            <summary>
            Remove a repository from the team
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.AddRepository(System.Int32,System.String,System.String)">
            <summary>
            Adds a <see cref="T:Octokit.Repository"/> to a <see cref="T:Octokit.Team"/>.
            </summary>
            <param name="id">The team identifier.</param>
            <param name="organization">Org to associate the repo with.</param>
            <param name="repoName">Name of the repo.</param>
            <exception cref="T:Octokit.ApiValidationException">Thrown if you attempt to add a repository to a team that is not owned by the organization.</exception>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#add-team-repo">API documentation</a> for more information.
            </remarks>
            <returns><see langword="true"/> if the repository was added to the team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.AddRepository(System.Int32,System.String,System.String,Octokit.RepositoryPermissionRequest)">
            <summary>
            Adds a <see cref="T:Octokit.Repository"/> to a <see cref="T:Octokit.Team"/>.
            </summary>
            <param name="id">The team identifier.</param>
            <param name="organization">Org to associate the repo with.</param>
            <param name="repoName">Name of the repo.</param>
            <param name="permission">The permission to grant the team on this repository.</param>
            <exception cref="T:Octokit.ApiValidationException">Thrown if you attempt to add a repository to a team that is not owned by the organization.</exception>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#add-team-repo">API documentation</a> for more information.
            </remarks>
            <returns><see langword="true"/> if the repository was added to the team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.IsRepositoryManagedByTeam(System.Int32,System.String,System.String)">
            <summary>
            Gets whether or not the given repository is managed by the given team.
            </summary>
            <param name="id">The team identifier</param>
            <param name="owner">Owner of the org the team is associated with.</param>
            <param name="repo">Name of the repo.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#get-team-repo">API documentation</a> for more information.
            </remarks>
            <returns><see langword="true"/> if the repository is managed by the given team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllPendingInvitations(System.Int32)">
            <summary>
            List all pending invitations for the given team.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#list-pending-team-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="id">The team identifier</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableTeamsClient.GetAllPendingInvitations(System.Int32,Octokit.ApiOptions)">
            <summary>
            List all pending invitations for the given team.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#list-pending-team-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour.</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableTreesClient">
            <summary>
            A client for GitHub's Git Trees API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/trees/">Git Trees API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableTreesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#get-a-tree
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTreesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#get-a-tree
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTreesClient.GetRecursive(System.String,System.String,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            https://developer.github.com/v3/git/trees/#get-a-tree-recursively
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTreesClient.GetRecursive(System.Int64,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            https://developer.github.com/v3/git/trees/#get-a-tree-recursively
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTreesClient.Create(System.String,System.String,Octokit.NewTree)">
            <summary>
            Creates a new Tree in the specified repo
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#create-a-tree
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newTree">The value of the new tree</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableTreesClient.Create(System.Int64,Octokit.NewTree)">
            <summary>
            Creates a new Tree in the specified repo
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#create-a-tree
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newTree">The value of the new tree</param>
        </member>
        <member name="T:Octokit.Reactive.IObservableUserAdministrationClient">
            <summary>
            A client for GitHub's User Administration API (GitHub Enterprise)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/">Administration API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.Create(Octokit.NewUser)">
            <summary>
            Create a new user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#create-a-new-user">API documentation</a>
            for more information.
            </remarks>
            <param name="newUser">The <see cref="T:Octokit.NewUser"/> object describing the user to create</param>
            <returns>The created <see cref="T:Octokit.User"/> object</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.Rename(System.String,Octokit.UserRename)">
            <summary>
            Rename an existing user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#rename-an-existing-user">API documentation</a>
            for more information.
            Note that this queues a request to rename a user, rather than execute it straight away
            </remarks>
            <param name="login">The username to rename</param>
            <param name="userRename">The <see cref="T:Octokit.UserRename"/> request, specifying the new login</param>
            <returns>A <see cref="T:Octokit.UserRenameResponse"/> object indicating the queued task message and Url to the user</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.CreateImpersonationToken(System.String,Octokit.NewImpersonationToken)">
            <summary>
            Create an impersonation OAuth token (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#create-an-impersonation-oauth-token">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to impersonate</param>
            <param name="newImpersonationToken">The <see cref="T:Octokit.NewImpersonationToken"/> request specifying the required scopes</param>
            <returns>An <see cref="T:Octokit.Authorization"/> object containing the impersonation token</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.DeleteImpersonationToken(System.String)">
            <summary>
            Deletes an impersonation OAuth token (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-an-impersonation-oauth-token">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to remove impersonation token from</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.Promote(System.String)">
            <summary>
            Promotes ordinary user to a site administrator (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#promote-an-ordinary-user-to-a-site-administrator">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to promote to administrator.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.Demote(System.String)">
            <summary>
            Demotes a site administrator to an ordinary user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#demote-a-site-administrator-to-an-ordinary-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to demote from administrator.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.Suspend(System.String)">
            <summary>
            Suspends a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#suspend-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to suspend.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.Unsuspend(System.String)">
            <summary>
            Unsuspends a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#unsuspend-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to unsuspend.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.ListAllPublicKeys">
            <summary>
            List all public keys (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#list-all-public-keys">API documentation</a>
            for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.Delete(System.String)">
            <summary>
            Delete a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to delete</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserAdministrationClient.DeletePublicKey(System.Int32)">
            <summary>
            Delete a public key (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-a-public-key">API documentation</a>
            for more information.
            </remarks>
            <param name="keyId">The key to delete</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableUserEmailsClient">
            <summary>
            A client for GitHub's User Emails API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/emails/">User Emails API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserEmailsClient.GetAll">
            <summary>
            Gets all email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user
            </remarks>
            <returns>The <see cref="T:Octokit.EmailAddress"/>es for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserEmailsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user
            </remarks>
            <param name="options">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.EmailAddress"/>es for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserEmailsClient.Add(System.String[])">
            <summary>
            Adds email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#add-email-addresses
            </remarks>
            <param name="emailAddresses">The email addresses to add.</param>
            <returns>Returns the added <see cref="T:Octokit.EmailAddress"/>es.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserEmailsClient.Delete(System.String[])">
            <summary>
            Deletes email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#delete-email-addresses
            </remarks>
            <param name="emailAddresses">The email addresses to delete.</param>
            <returns>Returns the added <see cref="T:Octokit.EmailAddress"/>es.</returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableUserGpgKeysClient">
            <summary>
            A client for GitHub's UserUser GPG Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/">User GPG Keys documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserGpgKeysClient.GetAllForCurrent">
            <summary>
            Gets all GPG keys for the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.GpgKey"/>s for the current user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserGpgKeysClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all GPG keys for the authenticated user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.GpgKey"/>s for the current user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserGpgKeysClient.Get(System.Int32)">
            <summary>
            View extended details of the <see cref="T:Octokit.GpgKey"/> for the specified id.
            </summary>
            <param name="id">The Id of the GPG key</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns>The <see cref="T:Octokit.GpgKey"/> for the specified Id.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserGpgKeysClient.Create(Octokit.NewGpgKey)">
            <summary>
            Creates a new <see cref="T:Octokit.GpgKey"/> for the authenticated user.
            </summary>
            <param name="newGpgKey">The new GPG key to add.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns>The newly created <see cref="T:Octokit.GpgKey"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserGpgKeysClient.Delete(System.Int32)">
            <summary>
            Deletes the GPG key for the specified Id.
            </summary>
            <param name="id">The Id of the GPG key to delete.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.IObservableUserKeysClient">
            <summary>
            A client for GitHub's User Keys API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/keys/">User Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserKeysClient.GetAll(System.String)">
            <summary>
            Gets all verified public keys for a user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user
            </remarks>
            <param name="userName">The @ handle of the user.</param>
            <returns>Lists the verified public keys for a user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserKeysClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all verified public keys for a user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user
            </remarks>
            <param name="userName">The @ handle of the user.</param>
            <param name="options">Options to change API's behavior.</param>
            <returns>Lists the verified public keys for a user.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserKeysClient.GetAllForCurrent">
            <summary>
            Gets all public keys for the authenticated user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-your-public-keys
            </remarks>
            <returns>Lists the current user's keys.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserKeysClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all public keys for the authenticated user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-your-public-keys
            </remarks>
            <param name="options">Options to change API's behavior.</param>
            <returns>Lists the current user's keys.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserKeysClient.Get(System.Int32)">
            <summary>
            Retrieves the <see cref="T:Octokit.PublicKey"/> for the specified id.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#get-a-single-public-key
            </remarks>
            <param name="id">The Id of the SSH key</param>
            <returns>View extended details for a single public key.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserKeysClient.Create(Octokit.NewPublicKey)">
            <summary>
            Create a public key <see cref="T:Octokit.NewPublicKey"/>.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#create-a-public-key
            </remarks>
            <param name="newKey">The SSH Key contents</param>
            <returns>Creates a public key.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUserKeysClient.Delete(System.Int32)">
            <summary>
            Delete a public key.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#delete-a-public-key
            </remarks>
            <param name="id">The id of the key to delete</param>
            <returns>Removes a public key.</returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUsersClient.Get(System.String)">
            <summary>
            Returns the user specified by the login.
            </summary>
            <param name="login">The login name for the user</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableUsersClient.Current">
            <summary>
            Returns a <see cref="T:Octokit.User"/> for the current authenticated user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.User"/></returns>
        </member>
        <member name="M:Octokit.Reactive.IObservableUsersClient.Update(Octokit.UserUpdate)">
            <summary>
            Update the specified <see cref="T:Octokit.UserUpdate"/>.
            </summary>
            <param name="user">The login for the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.User"/></returns>
        </member>
        <member name="P:Octokit.Reactive.IObservableUsersClient.Followers">
             <summary>
             A client for GitHub's User Followers API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/followers/">Followers API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableUsersClient.Email">
             <summary>
             A client for GitHub's User Emails API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/emails/">Emails API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableUsersClient.GitSshKey">
             <summary>
             A client for GitHub's User Keys API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/keys/">Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableUsersClient.GpgKey">
            <summary>
            A client for GitHub's UserUser GPG Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/">User GPG Keys documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.IObservableUsersClient.Administration">
             <summary>
             A client for GitHub's User Administration API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/users/administration/">User Administrator API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.IObservableWatchedClient">
            <summary>
            A client for GitHub's Watching API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/activity/watching/">Watching API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.GetAllWatchers(System.String,System.String)">
            <summary>
            Retrieves all of the watchers for the passed repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.GetAllWatchers(System.Int64)">
            <summary>
            Retrieves all of the watchers for the passed repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.GetAllWatchers(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watchers for the passed repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.GetAllWatchers(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watchers for the passed repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.GetAllForCurrent">
            <summary>
            Retrieves all of the watched <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watched <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <param name="options">Options for changing the API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.GetAllForUser(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) watched by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) watched by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.CheckWatched(System.String,System.String)">
            <summary>
            Check if a repository is watched by the current authenticated user
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.CheckWatched(System.Int64)">
            <summary>
            Check if a repository is watched by the current authenticated user
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.WatchRepo(System.String,System.String,Octokit.NewSubscription)">
            <summary>
            Stars a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to star</param>
            <param name="name">The name of the repository to star</param>
            <param name="newSubscription">A <see cref="T:Octokit.NewSubscription"/> instance describing the new subscription to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.WatchRepo(System.Int64,Octokit.NewSubscription)">
            <summary>
            Stars a repository for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newSubscription">A <see cref="T:Octokit.NewSubscription"/> instance describing the new subscription to create</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.UnwatchRepo(System.String,System.String)">
            <summary>
            Unstars a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to unstar</param>
            <param name="name">The name of the repository to unstar</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableWatchedClient.UnwatchRepo(System.Int64)">
            <summary>
            Unstars a repository for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableAssigneesClient">
            <summary>
            A client for GitHub's Issue Assignees API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/assignees/">Issue Assignees API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableAssigneesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableAssigneesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableAssigneesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">The options to change API's behaviour.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableAssigneesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the available assignees (owner + collaborators) to which issues may be assigned.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">The options to change API's behaviour.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableAssigneesClient.CheckAssignee(System.String,System.String,System.String)">
            <summary>
            Checks to see if a user is an assignee for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="assignee">Username of the prospective assignee</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableAssigneesClient.AddAssignees(System.String,System.String,System.Int32,Octokit.AssigneesUpdate)">
            <summary>
            Add assignees to a specified Issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="assignees">List of names of assignees to add</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableAssigneesClient.RemoveAssignees(System.String,System.String,System.Int32,Octokit.AssigneesUpdate)">
            <summary>
            Remove assignees from a specified Issue.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="assignees">List of assignees to remove </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAssigneesClient.CheckAssignee(System.Int64,System.String)">
            <summary>
            Checks to see if a user is an assignee for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assignee">Username of the prospective assignee</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.GetAll">
            <summary>
            Get all <see cref="T:Octokit.Authorization"/>s for the authenticated user. This method requires basic auth.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> for more
            details.
            </remarks>
            <returns>A list of <see cref="T:Octokit.Authorization"/>s for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Get all <see cref="T:Octokit.Authorization"/>s for the authenticated user. This method requires basic auth.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> for more
            details.
            </remarks>
            <param name="options">Options for changing the API response</param>
            <returns>A list of <see cref="T:Octokit.Authorization"/>s for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.Get(System.Int32)">
            <summary>
            Get a specific <see cref="T:Octokit.Authorization"/> for the authenticated user. This method requires basic auth.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#get-a-single-authorization">API documentation</a> for
            more details.
            </remarks>
            <param name="id">The id of the <see cref="T:Octokit.Authorization"/></param>
            <returns>An <see cref="T:Octokit.Authorization"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.Create(Octokit.NewAuthorization)">
            <summary>
            Creates a new personal token for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization">API documentation</a> for more information.
            </remarks>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.Create(Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new personal token for the authenticated user.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization">API documentation</a> for more information.
            </remarks>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.Create(System.String,System.String,Octokit.NewAuthorization)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application
            doesn’t already exist for the user; otherwise, it fails.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.Create(System.String,System.String,Octokit.NewAuthorization,System.String)">
            <summary>
            Creates a new authorization for the specified OAuth application if an authorization for that application
            doesn’t already exist for the user; otherwise, it fails.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code in response to the current user's previous challenge</param>
            <param name="newAuthorization">Describes the new authorization to create</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make this request.
            </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">
            Thrown when the current account has two-factor authentication enabled and an authentication code is required.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The created <see cref="T:Octokit.Authorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.GetOrCreateApplicationAuthentication(System.String,System.String,Octokit.NewAuthorization)">
            <summary>
            This method will create a new authorization for the specified OAuth application, only if an authorization 
            for that application doesn’t already exist for the user. It returns the user’s token for the application
            if one exists. Otherwise, it creates one.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API
            documentation</a> for more details.
            </remarks>
            <param name="clientId">Client Id for the OAuth application that is requesting the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Defines the scopes and metadata for the token</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown when the user does not have permission to make 
            this request. Check </exception>
            <exception cref="T:Octokit.TwoFactorRequiredException">Thrown when the current account has two-factor
            authentication enabled.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.GetOrCreateApplicationAuthentication(System.String,System.String,Octokit.NewAuthorization,System.String)">
            <summary>
            This method will create a new authorization for the specified OAuth application, only if an authorization 
            for that application doesn’t already exist for the user. It returns the user’s token for the application
            if one exists. Otherwise, it creates one.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/oauth/#get-or-create-an-authorization-for-a-specific-app">API 
            documentation</a> for more details.
            </remarks>
            <param name="clientId">Client Id for the OAuth application that is requesting the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Defines the scopes and metadata for the token</param>
            <param name="twoFactorAuthenticationCode">The two-factor authentication code provided by the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown when the user does not have permission to make 
            this request. Check </exception>
            <exception cref="T:Octokit.TwoFactorChallengeFailedException">Thrown when the two-factor code is not
            valid.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.CheckApplicationAuthentication(System.String,System.String)">
            <summary>
            Checks the validity of an OAuth token without running afoul of normal rate limits for failed login attempts.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#check-an-authorization">API documentation</a> for more information.
            </remarks>
            <param name="clientId">Client Id of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to check</param>
            <returns>The valid <see cref="T:Octokit.ApplicationAuthorization"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.ResetApplicationAuthentication(System.String,System.String)">
            <summary>
            Resets a valid OAuth token for an OAuth application without end user involvement.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#reset-an-authorization">API documentation</a> for more information.
            </remarks>
            <param name="clientId">ClientID of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to reset</param>
            <returns>The valid <see cref="T:Octokit.ApplicationAuthorization"/> with a new OAuth token</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.RevokeApplicationAuthentication(System.String,System.String)">
            <summary>
            Revokes a single OAuth token for an OAuth application.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="https://developer.github.com/v3/oauth_authorizations/#revoke-an-authorization-for-an-application">API documentation for more information.</a>
            </remarks>
            <param name="clientId">ClientID of the OAuth application for the token</param>
            <param name="accessToken">The OAuth token to revoke</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.Update(System.Int32,Octokit.AuthorizationUpdate)">
            <summary>
            Update the <see cref="T:Octokit.Authorization"/> specified by the id.
            </summary>
            <param name="id">The id of the <see cref="T:Octokit.Authorization"/></param>
            <param name="authorizationUpdate">The changes to make to the authorization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.Delete(System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#delete-an-authorization">API 
            documentation</a> for more details.
            </remarks>
            <param name="id">The system-wide Id of the authorization to delete</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableAuthorizationsClient.Delete(System.Int32,System.String)">
            <summary>
            Deletes the specified <see cref="T:Octokit.Authorization"/>.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/oauth/#delete-an-authorization">API 
            documentation</a> for more details.
            </remarks>
            <param name="id">The system-wide Id of the authorization to delete</param>
            <param name="twoFactorAuthenticationCode">Two factor authorization code</param>
            <exception cref="T:Octokit.AuthorizationException">
            Thrown when the current user does not have permission to make the request.
            </exception>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="T:Octokit.Reactive.ObservableBlobClient">
            <summary>
            A client for GitHub's Git Blobs API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/blobs/">Git Blobs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableBlobClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single Blob by SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#get-a-blob
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA of the blob</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableBlobClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single Blob by SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#get-a-blob
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA of the blob</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableBlobClient.Create(System.String,System.String,Octokit.NewBlob)">
            <summary>
            Creates a new Blob
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#create-a-blob
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newBlob">The new Blob</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableBlobClient.Create(System.Int64,Octokit.NewBlob)">
            <summary>
            Creates a new Blob
            </summary>
            <remarks>
            http://developer.github.com/v3/git/blobs/#create-a-blob
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newBlob">The new Blob</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableCheckRunsClient">
            <summary>
            A client for GitHub's Check Runs API
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/">Check Runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new GitHub Check Runs API client
            </summary>
            <param name="client">An <see cref="T:Octokit.IGitHubClient" /> used to make the requests</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.Create(System.String,System.String,Octokit.NewCheckRun)">
            <summary>
            Creates a new check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#create-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newCheckRun">Details of the Check Run to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.Create(System.Int64,Octokit.NewCheckRun)">
            <summary>
            Creates a new check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#create-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newCheckRun">Details of the Check Run to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.Update(System.String,System.String,System.Int64,Octokit.CheckRunUpdate)">
            <summary>
            Updates a check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#update-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="checkRunUpdate">The updates to the check run</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.Update(System.Int64,System.Int64,Octokit.CheckRunUpdate)">
            <summary>
            Updates a check run for a specific commit in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#update-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="checkRunUpdate">The updates to the check run</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForReference(System.String,System.String,System.String)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForReference(System.Int64,System.String)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForReference(System.Int64,System.String,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForReference(System.Int64,System.String,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a commit ref. The ref can be a SHA, branch name, or a tag name
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The commit reference (can be a SHA, branch name, or a tag name)</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64,Octokit.CheckRunRequest)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForCheckSuite(System.String,System.String,System.Int64,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllForCheckSuite(System.Int64,System.Int64,Octokit.CheckRunRequest,Octokit.ApiOptions)">
            <summary>
            Lists check runs for a check suite using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
            <param name="checkRunRequest">Details to filter the request, such as by check name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single check run using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#get-a-single-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single check run using its Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#get-a-single-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllAnnotations(System.String,System.String,System.Int64)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllAnnotations(System.Int64,System.Int64)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllAnnotations(System.String,System.String,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckRunsClient.GetAllAnnotations(System.Int64,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists annotations for a check run using the check run Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run">Check Runs API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkRunId">The Id of the check run</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableChecksClient">
            <summary>
            A client for GitHub's Checks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/">Checks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableChecksClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new GitHub Checks API client.
            </summary>
            <param name="client">An <see cref="T:Octokit.IGitHubClient" /> used to make the requests</param>
        </member>
        <member name="P:Octokit.Reactive.ObservableChecksClient.Run">
            <summary>
            A client for GitHub's Check Runs API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/runs/">Check Runs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableChecksClient.Suite">
            <summary>
            A client for GitHub's Check Suites API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/">Check Suites API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.ObservableCheckSuitesClient">
            <summary>
            A client for GitHub's Check Suites API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/">Check Suites API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new GitHub Check Suites API client.
            </summary>
            <param name="client">An <see cref="T:Octokit.IGitHubClient" /> used to make the requests</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.Get(System.String,System.String,System.Int64)">
            <summary>
            Gets a single Check Suite by Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#get-a-single-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.Get(System.Int64,System.Int64)">
            <summary>
            Gets a single Check Suite by Id
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#get-a-single-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.GetAllForReference(System.String,System.String,System.String)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.GetAllForReference(System.Int64,System.String)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckSuiteRequest)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.GetAllForReference(System.Int64,System.String,Octokit.CheckSuiteRequest)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.GetAllForReference(System.String,System.String,System.String,Octokit.CheckSuiteRequest,Octokit.ApiOptions)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.GetAllForReference(System.Int64,System.String,Octokit.CheckSuiteRequest,Octokit.ApiOptions)">
            <summary>
            Lists Check Suites for a commit reference (SHA, branch name or tag name)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name or tag name) to list check suites for</param>
            <param name="request">Details to filter the request, such as by App Id or Check Name</param>
            <param name="options">Options to change the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.UpdatePreferences(System.String,System.String,Octokit.CheckSuitePreferences)">
            <summary>
            Updates Check Suites prefrences on a repository, such as disabling automatic creation when code is pushed
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="preferences">The check suite preferences</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.UpdatePreferences(System.Int64,Octokit.CheckSuitePreferences)">
            <summary>
            Updates Check Suites prefrences on a repository, such as disabling automatic creation when code is pushed
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="preferences">The check suite preferences</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.Create(System.String,System.String,Octokit.NewCheckSuite)">
            <summary>
            Creates a new Check Suite
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#create-a-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newCheckSuite">Details of the Check Suite to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.Create(System.Int64,Octokit.NewCheckSuite)">
            <summary>
            Creates a new Check Suite
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#create-a-check-suite">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newCheckSuite">Details of the Check Suite to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.Request(System.String,System.String,Octokit.CheckSuiteTriggerRequest)">
            <summary>
            Triggers GitHub to create a new check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Details of the Check Suite request</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.Request(System.Int64,Octokit.CheckSuiteTriggerRequest)">
            <summary>
            Triggers GitHub to create a new check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Details of the Check Suite request</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.Rerequest(System.String,System.String,System.Int64)">
            <summary>
            Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCheckSuitesClient.Rerequest(System.Int64,System.Int64)">
            <summary>
            Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/checks/suites/#request-check-suites">Check Suites API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="checkSuiteId">The Id of the check suite</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableCommitCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            List reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>        
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param> 
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            List reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>        
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Commit Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableCommitsClient">
            <summary>
            A client for GitHub's Git Commits API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/commits/">Git Commits API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a commit for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#get-a-commit
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">Tha sha reference of the commit</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a commit for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#get-a-commit
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">Tha sha reference of the commit</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitsClient.Create(System.String,System.String,Octokit.NewCommit)">
            <summary>
            Create a commit for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="commit">The commit to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitsClient.Create(System.Int64,Octokit.NewCommit)">
            <summary>
            Create a commit for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/commits/#create-a-commit
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="commit">The commit to create</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableCommitStatusClient">
            <summary>
            A client for GitHub's Git Repository Status API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/statuses/">Repository Statuses API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitStatusClient.GetAll(System.String,System.String,System.String)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitStatusClient.GetAll(System.Int64,System.String)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitStatusClient.GetAll(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>        
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitStatusClient.GetAll(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves commit statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitStatusClient.GetCombined(System.String,System.String,System.String)">
            <summary>
            Retrieves a combined view of statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitStatusClient.GetCombined(System.Int64,System.String)">
            <summary>
            Retrieves a combined view of statuses for the specified reference. A reference can be a commit SHA, a branch name, or
            a tag name.
            </summary>
            <remarks>Only users with pull access can see this.</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitStatusClient.Create(System.String,System.String,System.String,Octokit.NewCommitStatus)">
            <summary>
            Creates a commit status for the specified ref.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="newCommitStatus">The commit status to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableCommitStatusClient.Create(System.Int64,System.String,Octokit.NewCommitStatus)">
            <summary>
            Creates a commit status for the specified ref.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference (SHA, branch name, or tag name) to list commits for</param>
            <param name="newCommitStatus">The commit status to create</param>
        </member>
        <member name="T:Octokit.Reactive.Clients.ObservableDeploymentsClient">
            <summary>
            A client for GitHub's Repository Deployments API.
            Gets and creates Deployments.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployments/">Repository Deployments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentsClient.GetAll(System.Int64)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the deployments for the specified repository. Any user with pull access
            to a repository can view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployments
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentsClient.Create(System.String,System.String,Octokit.NewDeployment)">
            <summary>
            Creates a new deployment for the specified repository.
            Users with push access can create a deployment for a given ref.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newDeployment">A <see cref="T:Octokit.NewDeployment"/> instance describing the new deployment to create</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentsClient.Create(System.Int64,Octokit.NewDeployment)">
            <summary>
            Creates a new deployment for the specified repository.
            Users with push access can create a deployment for a given ref.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newDeployment">A <see cref="T:Octokit.NewDeployment"/> instance describing the new deployment to create</param>
        </member>
        <member name="P:Octokit.Reactive.Clients.ObservableDeploymentsClient.Status">
            <summary>
            Client for managing deployment status.
            </summary>
        </member>
        <member name="T:Octokit.Reactive.Clients.ObservableDeploymentStatusClient">
            <summary>
            A client for GitHub's Repository Deployment Statuses API.
            Gets and creates Deployment Statuses.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployments/">Repository Deployment Statuses API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentStatusClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentStatusClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentStatusClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentStatusClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the statuses for the given deployment. Any user with pull access to a repository can
            view deployments.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#list-deployment-statuses
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentStatusClient.Create(System.String,System.String,System.Int32,Octokit.NewDeploymentStatus)">
            <summary>
            Creates a new status for the given deployment. Users with push access can create deployment
            statuses for a given deployment.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment-status
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="newDeploymentStatus">The new deployment status to create.</param>
        </member>
        <member name="M:Octokit.Reactive.Clients.ObservableDeploymentStatusClient.Create(System.Int64,System.Int32,Octokit.NewDeploymentStatus)">
            <summary>
            Creates a new status for the given deployment. Users with push access can create deployment
            statuses for a given deployment.
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/deployments/#create-a-deployment-status
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="deploymentId">The id of the deployment.</param>
            <param name="newDeploymentStatus">The new deployment status to create.</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableEventsClient">
            <summary>
            A client for GitHub's Activity Events API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/events/">Activity Events API documentation</a> for more information
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAll">
            <summary>
            Gets all the public events
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all the public events
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllIssuesForRepository(System.String,System.String)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllIssuesForRepository(System.Int64)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllIssuesForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllIssuesForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the issue events for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-issue-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForRepositoryNetwork(System.String,System.String)">
            <summary>
            Gets all the events for a given repository network
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForRepositoryNetwork(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given repository network
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForOrganization(System.String)">
            <summary>
            Gets all the events for a given organization
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-an-organization
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events for a given organization
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-for-an-organization
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllUserReceived(System.String)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllUserReceived(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllUserReceivedPublic(System.String)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllUserReceivedPublic(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been received by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllUserPerformed(System.String)">
            <summary>
            Gets all the events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllUserPerformed(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllUserPerformedPublic(System.String)">
            <summary>
            Gets all the public events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllUserPerformedPublic(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the public events that have been performed by a given user.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user
            </remarks>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForAnOrganization(System.String,System.String)">
            <summary>
            Gets all the events that are associated with an organization.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-for-an-organization
            </remarks>
            <param name="user">The login of the user</param>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableEventsClient.GetAllForAnOrganization(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the events that are associated with an organization.
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/events/#list-events-for-an-organization
            </remarks>
            <param name="user">The login of the user</param>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableFeedsClient">
            <summary>
            A client for GitHub's Feeds API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/feeds/">Feeds API documentation</a> for more information
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableFeedsClient.GetFeeds">
            <summary>
            Gets all the feeds available to the authenticating user
            </summary>
            <remarks>
            http://developer.github.com/v3/activity/feeds/#list-feeds
            </remarks>
            <returns>All the public <see cref="T:Octokit.Feed"/>s for the particular user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new User Followers API client.
            </summary>
            <param name="client">An <see cref="T:Octokit.IGitHubClient" /> used to make the requests</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.GetAllForCurrent">
            <summary>
            List the authenticated user’s followers
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that follow the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s followers
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that follow the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.GetAll(System.String)">
            <summary>
            List a user’s followers
            </summary>
            <param name="login">The login name for the user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that follow the passed user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            List a user’s followers
            </summary>
            <param name="login">The login name for the user</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-followers-of-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that follow the passed user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.GetAllFollowingForCurrent">
            <summary>
            List who the authenticated user is following
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that the authenticated user follows.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.GetAllFollowingForCurrent(Octokit.ApiOptions)">
            <summary>
            List who the authenticated user is following
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that the authenticated user follows.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.GetAllFollowing(System.String)">
            <summary>
            List who a user is following
            </summary>
            <param name="login">The login name of the user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that the passed user follows.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.GetAllFollowing(System.String,Octokit.ApiOptions)">
            <summary>
            List who a user is following
            </summary>
            <param name="login">The login name of the user</param>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#list-users-followed-by-another-user">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.IObservable`1"/> of <see cref="T:Octokit.User"/>s that the passed user follows.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.IsFollowingForCurrent(System.String)">
            <summary>
            Check if the authenticated user follows another user
            </summary>
            <param name="following">The login name of the other user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.IsFollowing(System.String,System.String)">
            <summary>
            Check if one user follows another user
            </summary>
            <param name="login">The login name of the user</param>
            <param name="following">The login name of the other user</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#check-if-one-user-follows-another">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.Follow(System.String)">
            <summary>
            Follow a user
            </summary>
            <param name="login">The login name of the user to follow</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#follow-a-user">API documentation</a> for more information.
            </remarks>
            <returns>A <c>bool</c> representing the success of the operation.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableFollowersClient.Unfollow(System.String)">
            <summary>
            Unfollow a user
            </summary>
            <param name="login">The login name of the user to unfollow</param>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/followers/#unfollow-a-user">API documentation</a> for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistCommentsClient.Get(System.String,System.Int32)">
            <summary>
            Gets a single comment by gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#get-a-single-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistCommentsClient.GetAllForGist(System.String)">
            <summary>
            Gets all comments for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#list-comments-on-a-gist</remarks>
            <param name="gistId">The id of the gist</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistCommentsClient.GetAllForGist(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all comments for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#list-comments-on-a-gist</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistCommentsClient.Create(System.String,System.String)">
            <summary>
            Creates a comment for the gist with the specified id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#create-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="comment">The body of the comment</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistCommentsClient.Update(System.String,System.Int32,System.String)">
            <summary>
            Updates the comment with the specified gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#edit-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <param name="comment">The updated body of the comment</param>
            <returns>IObservable{GistComment}.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistCommentsClient.Delete(System.String,System.Int32)">
            <summary>
            Deletes the comment with the specified gist- and comment id.
            </summary>
            <remarks>http://developer.github.com/v3/gists/comments/#delete-a-comment</remarks>
            <param name="gistId">The id of the gist</param>
            <param name="commentId">The id of the comment</param>
            <returns>IObservable{Unit}.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.Get(System.String)">
            <summary>
            Gets a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#get-a-single-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.Create(Octokit.NewGist)">
            <summary>
            Creates a new gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#create-a-gist
            </remarks>
            <param name="newGist">The new gist to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.Fork(System.String)">
            <summary>
            Creates a fork of a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#fork-a-gist
            </remarks>
            <param name="id">The id of the gist to fork</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.Delete(System.String)">
            <summary>
            Deletes a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#delete-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAll">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAll(System.DateTimeOffset)">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAll(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s gists or if called anonymously, 
            this will return all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllPublic">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllPublic(Octokit.ApiOptions)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllPublic(System.DateTimeOffset)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllPublic(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            Lists all public gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllStarred">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllStarred(Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllStarred(System.DateTimeOffset)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllStarred(System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List the authenticated user’s starred gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllForUser(System.String)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllForUser(System.String,System.DateTimeOffset)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="since">Only gists updated at or after this time are returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllForUser(System.String,System.DateTimeOffset,Octokit.ApiOptions)">
            <summary>
            List a user's gists
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists
            </remarks>
            <param name="user">The user</param>
            <param name="since">Only gists updated at or after this time are returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllCommits(System.String)">
            <summary>
            List gist commits
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-commits
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllCommits(System.String,Octokit.ApiOptions)">
            <summary>
            List gist commits
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-commits
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllForks(System.String)">
            <summary>
            List gist forks
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-forks
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.GetAllForks(System.String,Octokit.ApiOptions)">
            <summary>
            List gist forks
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#list-gists-forks
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.Edit(System.String,Octokit.GistUpdate)">
            <summary>
            Edits a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#delete-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
            <param name="gistUpdate">The update to the gist</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.Star(System.String)">
            <summary>
            Stars a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#star-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.Unstar(System.String)">
            <summary>
            Unstars a gist
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#unstar-a-gist
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGistsClient.IsStarred(System.String)">
            <summary>
            Checks if the gist is starred
            </summary>
            <remarks>
            http://developer.github.com/v3/gists/#check-if-a-gist-is-starred
            </remarks>
            <param name="id">The id of the gist</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableGitDatabaseClient">
            <summary>
            Used to maintain api structure therefore contains no methods
            </summary>
        </member>
        <member name="T:Octokit.Reactive.ObservableGitHubAppInstallationsClient">
            <summary>
            A client for GitHub Applications Installations API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/apps/installations/">GitHub Apps Installations API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppInstallationsClient.GetAllRepositoriesForCurrent">
            <summary>
            List repositories of the authenticated GitHub App Installation (requires GitHubApp Installation-Token auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppInstallationsClient.GetAllRepositoriesForCurrent(Octokit.ApiOptions)">
            <summary>
            List repositories of the authenticated GitHub App Installation (requires GitHubApp Installation-Token auth).
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppInstallationsClient.GetAllRepositoriesForCurrentUser(System.Int64)">
            <summary>
            List repositories accessible to the user for an installation (requires GitHubApp User-To-Server Auth).
            </summary>
            <param name="installationId">The Id of the installation</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppInstallationsClient.GetAllRepositoriesForCurrentUser(System.Int64,Octokit.ApiOptions)">
            <summary>
            List repositories accessible to the user for an installation (requires GitHubApp User-To-Server Auth).
            </summary>
            <param name="installationId">The Id of the installation</param>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation</remarks>
        </member>
        <member name="T:Octokit.Reactive.ObservableGitHubAppsClient">
            <summary>
            A client for GitHub Applications API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/apps/">GitHub Apps API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableGitHubAppsClient.Installation">
            <summary>
            Access GitHub's Apps Installations API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/apps/installations/
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.Get(System.String)">
            <summary>
            Get a single GitHub App (if private, requires Personal Access Token or GitHubApp auth)
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-github-app</remarks>
            <param name="slug">The URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetCurrent">
            <summary>
            Returns the GitHub App associated with the authentication credentials used (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-the-authenticated-github-app</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetAllInstallationsForCurrent">
            <summary>
            List installations of the authenticated GitHub App (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-installations</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetAllInstallationsForCurrent(Octokit.ApiOptions)">
            <summary>
            List installations of the authenticated GitHub App (requires GitHubApp auth).
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>https://developer.github.com/v3/apps/#find-installations</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetInstallation(System.Int64)">
            <summary>
            Get a single GitHub App Installation (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-installation</remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetInstallationForCurrent(System.Int64)">
            <summary>
            Get a single GitHub App Installation (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#get-a-single-installation</remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetAllInstallationsForCurrentUser">
            <summary>
            List installations for the currently authenticated user (requires GitHubApp User-To-Server Auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#list-installations-for-user</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetAllInstallationsForCurrentUser(Octokit.ApiOptions)">
            <summary>
            List installations for the currently authenticated user (requires GitHubApp User-To-Server Auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#list-installations-for-user</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.CreateInstallationToken(System.Int64)">
            <summary>
            Create a time bound access token for a GitHubApp Installation that can be used to access other API endpoints (requires GitHubApp auth).
            </summary>
            <remarks>
            https://developer.github.com/v3/apps/#create-a-new-installation-token
            https://developer.github.com/apps/building-github-apps/authentication-options-for-github-apps/#authenticating-as-an-installation
            https://developer.github.com/v3/apps/available-endpoints/
            </remarks>
            <param name="installationId">The Id of the GitHub App Installation</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetOrganizationInstallationForCurrent(System.String)">
            <summary>
            Enables an authenticated GitHub App to find the organization's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-organization-installation</remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetRepositoryInstallationForCurrent(System.String,System.String)">
            <summary>
            Enables an authenticated GitHub App to find the repository's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-repository-installation</remarks>
            <param name="owner">The owner of the repo</param>
            <param name="repo">The name of the repo</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetRepositoryInstallationForCurrent(System.Int64)">
            <summary>
            Enables an authenticated GitHub App to find the repository's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-repository-installation</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubAppsClient.GetUserInstallationForCurrent(System.String)">
            <summary>
            Enables an authenticated GitHub App to find the users's installation information (requires GitHubApp auth).
            </summary>
            <remarks>https://developer.github.com/v3/apps/#find-user-installation</remarks>
            <param name="user">The name of the user</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableIssueCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create </param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create </param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            List reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            List reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Issue Comment
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="T:Octokit.Reactive.ObservableIssueCommentsClient">
            <summary>
            A client for GitHub's Issue Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/comments/">Issue Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Issue Comment by id.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#get-a-single-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The issue comment id</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Issue Comment by id.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#get-a-single-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The issue comment id</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForRepository(System.Int64,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForRepository(System.String,System.String,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForRepository(System.Int64,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a repository.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.IssueCommentRequest)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.IssueCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets Issue Comments for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#list-comments-on-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="request">The sorting <see cref="T:Octokit.IssueCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.Create(System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a new Issue Comment for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="newComment">The text of the new comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.Create(System.Int64,System.Int32,System.String)">
            <summary>
            Creates a new Issue Comment for a specified Issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="newComment">The text of the new comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.Update(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates a specified Issue Comment.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#edit-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The comment id</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.Update(System.Int64,System.Int32,System.String)">
            <summary>
            Updates a specified Issue Comment.
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#edit-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The comment id</param>
            <param name="commentUpdate">The modified comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified Issue Comment
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#delete-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="id">The comment id</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes the specified Issue Comment
            </summary>
            <remarks>http://developer.github.com/v3/issues/comments/#delete-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The comment id</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableIssueReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions/">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            List reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueReactionsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            List reactions for a specified Issue.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            List reactions for a specified Issue.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Issue.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue id</param>
            <param name="reaction">The reaction to create </param>
        </member>
        <member name="T:Octokit.Reactive.ObservableIssuesClient">
            <summary>
            A client for GitHub's Issues API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/">Issues API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableIssuesClient.Assignee">
            <summary>
            Client for managing assignees.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.ObservableIssuesClient.Comment">
            <summary>
            Client for managing comments.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.ObservableIssuesClient.Events">
            <summary>
            Client for reading various event information associated with issues/pull requests.  
            This is useful both for display on issue/pull request information pages and also to 
            determine who should be notified of comments.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.ObservableIssuesClient.Labels">
            <summary>
            Client for managing labels.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.ObservableIssuesClient.Milestone">
            <summary>
            Client for managing milestones.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.ObservableIssuesClient.Timeline">
            <summary>
            Client for reading the timeline of events for an issue
            </summary>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Issue by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#get-a-single-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Issue by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#get-a-single-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForCurrent">
            <summary>
            Gets all open issues assigned to the authenticated user across all the authenticated user’s visible
            repositories including owned repositories, member repositories, and organization repositories.
            </summary>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user across all the authenticated user’s visible
            repositories including owned repositories, member repositories, and organization repositories.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForCurrent(Octokit.IssueRequest)">
            <summary>
            Gets all issues across all the authenticated user’s visible repositories including owned repositories, 
            member repositories, and organization repositories.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForCurrent(Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues across all the authenticated user’s visible repositories including owned repositories, 
            member repositories, and organization repositories.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForOwnedAndMemberRepositories">
            <summary>
            Gets all open issues assigned to the authenticated user across owned and member repositories for the
            authenticated user.
            </summary>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user across owned and member repositories for the
            authenticated user.
            </summary>
            <remarks>
            Issues are sorted by the create date descending.
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.IssueRequest)">
            <summary>
            Gets all issues across owned and member repositories for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForOwnedAndMemberRepositories(Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues across owned and member repositories for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForOrganization(System.String)">
            <summary>
            Gets all open issues assigned to the authenticated user for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForOrganization(System.String,Octokit.IssueRequest)">
            <summary>
            Gets all issues for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForOrganization(System.String,Octokit.IssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets all issues for a given organization for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open issues assigned to the authenticated user for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForRepository(System.String,System.String,Octokit.RepositoryIssueRequest)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForRepository(System.Int64,Octokit.RepositoryIssueRequest)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForRepository(System.String,System.String,Octokit.RepositoryIssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.GetAllForRepository(System.Int64,Octokit.RepositoryIssueRequest,Octokit.ApiOptions)">
            <summary>
            Gets issues for a repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/#list-issues-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of issues returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Create(System.String,System.String,Octokit.NewIssue)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newIssue">A <see cref="T:Octokit.NewIssue"/> instance describing the new issue to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Create(System.Int64,Octokit.NewIssue)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newIssue">A <see cref="T:Octokit.NewIssue"/> instance describing the new issue to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Update(System.String,System.String,System.Int32,Octokit.IssueUpdate)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="issueUpdate">An <see cref="T:Octokit.IssueUpdate"/> instance describing the changes to make to the issue
            </param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Update(System.Int64,System.Int32,Octokit.IssueUpdate)">
            <summary>
            Creates an issue for the specified repository. Any user with pull access to a repository can create an
            issue.
            </summary>
            <remarks>http://developer.github.com/v3/issues/#create-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="issueUpdate">An <see cref="T:Octokit.IssueUpdate"/> instance describing the changes to make to the issue
            </param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Lock(System.String,System.String,System.Int32)">
            <summary>
            Locks an issue for the specified repository. Issue owners and users with push access can lock an issue.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#lock-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Lock(System.Int64,System.Int32)">
            <summary>
            Locks an issue for the specified repository. Issue owners and users with push access can lock an issue.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#lock-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Unlock(System.String,System.String,System.Int32)">
            <summary>
            Unlocks an issue for the specified repository. Issue owners and users with push access can unlock an issue.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#unlock-an-issue</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesClient.Unlock(System.Int64,System.Int32)">
            <summary>
            Unlocks an issue for the specified repository. Issue owners and users with push access can unlock an issue.
            </summary>
            <remarks>https://developer.github.com/v3/issues/#unlock-an-issue</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableIssuesEventsClient">
            <summary>
            A client for GitHub's Issue Events API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/events/">Issue Events API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all events for the issue.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all events for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#list-events-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single event
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#get-a-single-event
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The event id</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesEventsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single event
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/events/#get-a-single-event
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The event id</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableIssuesLabelsClient">
            <summary>
            A client for GitHub's Issue Labels API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/">Issue Labels API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the issue.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-labels-on-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all  labels for the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForMilestone(System.String,System.String,System.Int32)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the milestone</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForMilestone(System.Int64,System.Int32)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the milestone</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForMilestone(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the milestone</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.GetAllForMilestone(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets labels for every issue in a milestone
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the milestone</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single Label by name.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-a-single-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single Label by name.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#get-a-single-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#delete-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#delete-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.Create(System.String,System.String,Octokit.NewLabel)">
            <summary>
            Creates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#create-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newLabel">The data for the label to be created</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.Create(System.Int64,Octokit.NewLabel)">
            <summary>
            Creates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#create-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newLabel">The data for the label to be created</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.Update(System.String,System.String,System.String,Octokit.LabelUpdate)">
            <summary>
            Updates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#update-a-label">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="labelName">The name of the label</param>
            <param name="labelUpdate">The data for the label to be updated</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.Update(System.Int64,System.String,Octokit.LabelUpdate)">
            <summary>
            Updates a label.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#update-a-label">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="labelName">The name of the label</param>
            <param name="labelUpdate">The data for the label to be updated</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.AddToIssue(System.String,System.String,System.Int32,System.String[])">
            <summary>
            Adds a label to an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#add-labels-to-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to add</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.AddToIssue(System.Int64,System.Int32,System.String[])">
            <summary>
            Adds a label to an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#add-labels-to-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to add</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.RemoveFromIssue(System.String,System.String,System.Int32,System.String)">
            <summary>
            Removes a label from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labelName">The name of the label to remove</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.RemoveFromIssue(System.Int64,System.Int32,System.String)">
            <summary>
            Removes a label from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labelName">The name of the label to remove</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.ReplaceAllForIssue(System.String,System.String,System.Int32,System.String[])">
            <summary>
            Replaces all labels on the specified issues with the provided labels
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to set</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.ReplaceAllForIssue(System.Int64,System.Int32,System.String[])">
            <summary>
            Replaces all labels on the specified issues with the provided labels
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
            <param name="labels">The names of the labels to set</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.RemoveAllFromIssue(System.String,System.String,System.Int32)">
            <summary>
            Removes all labels from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssuesLabelsClient.RemoveAllFromIssue(System.Int64,System.Int32)">
            <summary>
            Removes all labels from an issue
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the issue</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableIssueTimelineClient">
            <summary>
            A client for GitHub's Issue Timeline API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/issues/timeline/">Issue Timeline API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueTimelineClient.GetAllForIssue(System.String,System.String,System.Int32)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueTimelineClient.GetAllForIssue(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="repo">The name of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueTimelineClient.GetAllForIssue(System.Int64,System.Int32)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableIssueTimelineClient.GetAllForIssue(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all the various events that have occurred around an issue or pull request.
            </summary>
            <remarks>
            https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The issue number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableMergingClient.Create(System.String,System.String,Octokit.NewMerge)">
            <summary>
            Create a merge for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/merging/#perform-a-merge
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="merge">The merge to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMergingClient.Create(System.Int64,Octokit.NewMerge)">
            <summary>
            Create a merge for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/repos/merging/#perform-a-merge
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="merge">The merge to create</param>
            <returns></returns>
        </member>
        <member name="P:Octokit.Reactive.ObservableMigrationClient.Migrations">
            <summary>
            A client for GitHub's Enterprise Migrations API.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/#enterprise-migrations
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.ObservableMigrationsClient">
            <summary>
            An interface for GitHub's Migrations API client.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/migration/migrations/">docs</a>
            for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableMigrationsClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Instantiates a GitHub Migrations API client.
            </summary>
            <param name="client">An <see cref="T:Octokit.IGitHubClient"/> for making requests.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableMigrationsClient.Start(System.String,Octokit.StartMigrationRequest)">
            <summary>
            Starts a new migration specified for the given organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#start-a-migration
            </remarks>
            <param name="org">The organization for which to start a migration.</param>
            <param name="migration">Sprcifies parameters for the migration in a 
            <see cref="T:Octokit.StartMigrationRequest"/> object.</param>
            <returns>The started migration.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMigrationsClient.GetAll(System.String)">
            <summary>
            Gets the list of the most recent migrations of the the organization.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-a-list-of-migrations
            </remarks>
            <param name="org">The organization of which to list migrations.</param>
            <returns>List of most recent <see cref="T:Octokit.Migration"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMigrationsClient.Get(System.String,System.Int32)">
            <summary>
            Get the status of a migration
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#get-the-status-of-a-migration
            </remarks>
            <param name="org">The organization which is migrating.</param>
            <param name="id">Migrations Id of the organization.</param>
            <returns>A <see cref="T:Octokit.Migration"/> object representing the state of migration.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMigrationsClient.GetArchive(System.String,System.Int32)">
            <summary>
            Get the migration archive.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#download-a-migration-archive
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <returns>The binary contents of the archive as a byte array.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMigrationsClient.DeleteArchive(System.String,System.Int32)">
            <summary>
            Deletes a previous migration archive.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#delete-a-migration-archive
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMigrationsClient.UnlockRepository(System.String,System.Int32,System.String)">
            <summary>
            Unlocks a repository that was locked for migration.
            </summary>
            <remarks>
            https://developer.github.com/v3/migration/migrations/#unlock-a-repository
            </remarks>
            <param name="org">The organization of which the migration was.</param>
            <param name="id">The Id of the migration.</param>
            <param name="repo">The repo to unlock.</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableMilestonesClient">
            <summary>
            A client for GitHub's Issue Milestones API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/issues/milestones/">Issue Milestones API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Milestone by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#get-a-single-milestone
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Milestone by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#get-a-single-milestone
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.GetAllForRepository(System.String,System.String,Octokit.MilestoneRequest)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.GetAllForRepository(System.Int64,Octokit.MilestoneRequest)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.GetAllForRepository(System.String,System.String,Octokit.MilestoneRequest,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.GetAllForRepository(System.Int64,Octokit.MilestoneRequest,Octokit.ApiOptions)">
            <summary>
            Gets all open milestones for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of Milestones returned</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.Create(System.String,System.String,Octokit.NewMilestone)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create a
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#create-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newMilestone">A <see cref="T:Octokit.NewMilestone"/> instance describing the new Milestone to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.Create(System.Int64,Octokit.NewMilestone)">
            <summary>
            Creates a milestone for the specified repository. Any user with pull access to a repository can create a
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#create-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newMilestone">A <see cref="T:Octokit.NewMilestone"/> instance describing the new Milestone to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.Update(System.String,System.String,System.Int32,Octokit.MilestoneUpdate)">
            <summary>
            Updates a milestone for the specified repository. Any user with pull access to a repository can create a
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#update-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Milestone number</param>
            <param name="milestoneUpdate">An <see cref="T:Octokit.MilestoneUpdate"/> instance describing the changes to make to the Milestone
            </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.Update(System.Int64,System.Int32,Octokit.MilestoneUpdate)">
            <summary>
            Updates a milestone for the specified repository. Any user with pull access to a repository can create a
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#update-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Milestone number</param>
            <param name="milestoneUpdate">An <see cref="T:Octokit.MilestoneUpdate"/> instance describing the changes to make to the Milestone
            </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#delete-a-milestone</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMilestonesClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a milestone for the specified repository. Any user with pull access to a repository can create an
            Milestone.
            </summary>
            <remarks>http://developer.github.com/v3/issues/milestones/#delete-a-milestone</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The milestone number</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMiscellaneousClient.GetAllEmojis">
            <summary>
            Gets all the emojis available to use on GitHub.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:System.IObservable`1"/> of emoji and their URI.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMiscellaneousClient.RenderArbitraryMarkdown(Octokit.NewArbitraryMarkdown)">
            <summary>
            Gets the rendered Markdown for an arbitrary markdown document.
            </summary>
            <param name="markdown">An arbitrary Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMiscellaneousClient.RenderRawMarkdown(System.String)">
            <summary>
            Gets the rendered Markdown for the specified plain-text Markdown document.
            </summary>
            <param name="markdown">A plain-text Markdown document</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The rendered Markdown.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMiscellaneousClient.GetAllGitIgnoreTemplates">
            <summary>
            List all templates available to pass as an option when creating a repository.
            </summary>
            <returns>An observable list of gitignore template names.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMiscellaneousClient.GetGitIgnoreTemplate(System.String)">
            <summary>
            Retrieves the source for a single GitIgnore template
            </summary>
            <param name="templateName">Returns the template source for the given template</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableMiscellaneousClient.GetAllLicenses">
            <summary>
            Returns a list of the licenses shown in the license picker on GitHub.com. This is not a comprehensive
            list of all possible OSS licenses.
            </summary>
            <remarks>This is a PREVIEW API! Use it at your own risk.</remarks>
            <returns>A list of licenses available on the site</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMiscellaneousClient.GetLicense(System.String)">
            <summary>
            Retrieves a license based on the license key such as "mit"
            </summary>
            <param name="key"></param>
            <returns>A <see cref="T:Octokit.License" /> that includes the license key, text, and attributes of the license.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMiscellaneousClient.GetRateLimits">
            <summary>
            Gets API Rate Limits (API service rather than header info).
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.MiscellaneousRateLimit"/> of Rate Limits.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableMiscellaneousClient.GetMetadata">
            <summary>
            Retrieves information about GitHub.com, the service or a GitHub Enterprise installation.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>An <see cref="T:Octokit.Meta"/> containing metadata about the GitHub instance.</returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableNotificationsClient">
            <summary>
            A client for GitHub's Activity Notifications API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/notifications/">Activity Notifications API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForCurrent">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForRepository(System.Int64)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForCurrent(Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForCurrent(Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user.
            </summary>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForRepository(System.String,System.String,Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForRepository(System.Int64,Octokit.NotificationsRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForRepository(System.String,System.String,Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetAllForRepository(System.Int64,Octokit.NotificationsRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Notification"/>s for the current user specific to the specified repository.
            </summary>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="request">Specifies the parameters to filter notifications by</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.MarkAsRead">
            <summary>
            Marks all notifications as read.
            </summary>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-as-read</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.MarkAsRead(Octokit.MarkAsReadRequest)">
            <summary>
            Marks all notifications as read.
            </summary>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-as-read</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.MarkAsReadForRepository(System.String,System.String)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.MarkAsReadForRepository(System.Int64)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.MarkAsReadForRepository(System.String,System.String,Octokit.MarkAsReadRequest)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.MarkAsReadForRepository(System.Int64,Octokit.MarkAsReadRequest)">
            <summary>
            Marks the notifications for a given repository as read.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="markAsReadRequest">The <see cref="T:Octokit.MarkAsReadRequest"/> parameter which specifies which notifications to mark.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.Get(System.Int32)">
            <summary>
            Retrives a single <see cref="T:Octokit.Notification"/> by Id.
            </summary>
            <param name="id">The Id of the notification to retrieve.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#view-a-single-thread</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.MarkAsRead(System.Int32)">
            <summary>
            Marks a single notification as read.
            </summary>
            <param name="id">The id of the notification.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.GetThreadSubscription(System.Int32)">
            <summary>
            Retrives a <see cref="T:Octokit.ThreadSubscription"/> for the provided thread id.
            </summary>
            <param name="id">The Id of the thread to retrieve subscription status.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#get-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.SetThreadSubscription(System.Int32,Octokit.NewThreadSubscription)">
            <summary>
            Sets the authenticated user's subscription settings for a given thread.
            </summary>
            <param name="id">The Id of the thread to update.</param>
            <param name="threadSubscription">The subscription parameters to set.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#set-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableNotificationsClient.DeleteThreadSubscription(System.Int32)">
            <summary>
            Deletes the authenticated user's subscription to a given thread.
            </summary>
            <param name="id">The Id of the thread to delete subscription from.</param>
            <remarks>http://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableOauthClient.GetGitHubLoginUrl(Octokit.OauthLoginRequest)">
            <summary>
            Gets the URL used in the first step of the web flow. The Web application should redirect to this URL.
            </summary>
            <param name="request">Parameters to the Oauth web flow login url</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOauthClient.CreateAccessToken(Octokit.OauthTokenRequest)">
            <summary>
            Makes a request to get an access token using the code returned when GitHub.com redirects back from the URL
            <see cref="M:Octokit.Reactive.ObservableOauthClient.GetGitHubLoginUrl(Octokit.OauthLoginRequest)">GitHub login url</see> to the application.
            </summary>
            <remarks>
            If the user accepts your request, GitHub redirects back to your site with a temporary code in a code
            parameter as well as the state you provided in the previous step in a state parameter. If the states don’t
            match, the request has been created by a third party and the process should be aborted. Exchange this for
            an access token using this method.
            </remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new Organization Members API client.
            </summary>
            <param name="client">An <see cref="T:Octokit.IGitHubClient" /> used to make the requests</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAll(System.String)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The members filter, <see cref="T:Octokit.OrganizationMembersFilter"/> </param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The members filter, <see cref="T:Octokit.OrganizationMembersFilter"/> </param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersRole)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersRole,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.OrganizationMembersRole)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The members filter, <see cref="T:Octokit.OrganizationMembersFilter"/> </param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.OrganizationMembersRole,Octokit.ApiOptions)">
            <summary>
            <para>
            List all users who are members of an organization. A member is a user that
            belongs to at least 1 team in the organization.
            </para>
            <para>
            If the authenticated user is also an owner of this organization then both
            concealed and public member will be returned.
            </para>
            <para>
            If the requester is not an owner of the organization the query will be redirected
            to the public members list.
            </para>
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#members-list">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The members filter, <see cref="T:Octokit.OrganizationMembersFilter"/> </param>
            <param name="role">The role filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersRole"/></param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAllPublic(System.String)">
            <summary>
            List all users who have publicized their membership of the organization.
            </summary>
            <remarks>http://developer.github.com/v3/orgs/members/#public-members-list</remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAllPublic(System.String,Octokit.ApiOptions)">
            <summary>
            List all users who have publicized their membership of the organization.
            </summary>
            <remarks>http://developer.github.com/v3/orgs/members/#public-members-list</remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.CheckMember(System.String,System.String)">
            <summary>
            Check if a user is, publicly or privately, a member of the organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#check-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.CheckMemberPublic(System.String,System.String)">
            <summary>
            Check is a user is publicly a member of the organization.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#check-public-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.Delete(System.String,System.String)">
            <summary>
            Removes a user from the organization, this will also remove them from all teams
            within the organization and they will no longer have any access to the organization's
            repositories.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/members/#remove-a-member">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.Publicize(System.String,System.String)">
            <summary>
            Make the authenticated user's organization membership public.
            </summary>
            <remarks>
            This method requires authentication.
            See the <a href="http://developer.github.com/v3/orgs/members/#publicize-a-users-membership">API documentation</a> 
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.Conceal(System.String,System.String)">
            <summary>
            Make the authenticated user's organization membership private.
            </summary>
            <remarks>
            This method requries authentication.
            See the <a href="http://developer.github.com/v3/orgs/members/#conceal-a-users-membership">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAllPendingInvitations(System.String)">
            <summary>
            List all pending invitations for the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationMembersClient.GetAllPendingInvitations(System.String,Octokit.ApiOptions)">
            <summary>
            List all pending invitations for the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options to change API behaviour</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationOutsideCollaboratorsClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new Organization Outside Collaborators API client.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationOutsideCollaboratorsClient.GetAll(System.String)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.OrganizationMembersFilter)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationOutsideCollaboratorsClient.GetAll(System.String,Octokit.OrganizationMembersFilter,Octokit.ApiOptions)">
            <summary>
            List all users who are outside collaborators of an organization. An outside collaborator is a user that
            is not a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="filter">The filter to use when getting the users, <see cref="T:Octokit.OrganizationMembersFilter"/></param>
            <param name="options">Options for changing the API response</param>
            <returns>The users</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationOutsideCollaboratorsClient.Delete(System.String,System.String)">
            <summary>
            Removes a user as an outside collaborator from the organization, this will remove them from all repositories
            within the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator">API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login of the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationOutsideCollaboratorsClient.ConvertFromMember(System.String,System.String)">
            <summary>
            Converts an organization member to an outside collaborator, 
            when an organization member is converted to an outside collaborator, 
            they'll only have access to the repositories that their current team membership allows. 
            The user will no longer be a member of the organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator"> API documentation</a>
            for more information.
            </remarks>
            <param name="org">The login for the organization</param>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationsClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new Organization API client.
            </summary>
            <param name="client">An <see cref="T:Octokit.IGitHubClient" /> used to make the requests</param>
        </member>
        <member name="P:Octokit.Reactive.ObservableOrganizationsClient.Member">
            <summary>
            Returns a client to manage members of an organization.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.ObservableOrganizationsClient.Team">
            <summary>
            Returns a client to manage teams for an organization.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.ObservableOrganizationsClient.OutsideCollaborator">
            <summary>
            Returns a client to manage outside collaborators of an organization.
            </summary>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationsClient.Get(System.String)">
            <summary>
            Returns the specified organization.
            </summary>
            <param name="org">The login of the specified organization,</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationsClient.GetAllForCurrent">
            <summary>
            Returns all the organizations for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all the organizations for the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationsClient.GetAllForUser(System.String)">
            <summary>
            Returns all the organizations for the specified user
            </summary>
            <param name="user">The login for the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationsClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Returns all the organizations for the specified user
            </summary>
            <param name="user">The login for the user</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationsClient.GetAll">
            <summary>
            Returns all the organizations
            </summary>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationsClient.GetAll(Octokit.OrganizationRequest)">
            <summary>
            Returns all the organizations
            </summary>
            <param name="request">Search parameters of the last organization seen</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableOrganizationsClient.Update(System.String,Octokit.OrganizationUpdate)">
            <summary>
            Update the specified organization with data from <see cref="T:Octokit.OrganizationUpdate"/>.
            </summary>
            <param name="organizationName">The name of the organization to update.</param>
            <param name="updateRequest"></param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.Organization"/></returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableProjectCardsClient">
            <summary>
            A client for GitHub's Project Cards API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/cards/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectCardsClient.GetAll(System.Int32)">
            <summary>
            Gets all cards for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectCardsClient.GetAll(System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all cards for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectCardsClient.GetAll(System.Int32,Octokit.ProjectCardRequest)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="request">Used to filter the list of project cards returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectCardsClient.GetAll(System.Int32,Octokit.ProjectCardRequest,Octokit.ApiOptions)">
            <summary>
            Gets all cards.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#list-projects-cards">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="request">Used to filter the list of project cards returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectCardsClient.Get(System.Int32)">
            <summary>
            Gets a single card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#get-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectCardsClient.Create(System.Int32,Octokit.NewProjectCard)">
            <summary>
            Creates a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#create-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="columnId">The id of the column</param>
            <param name="newProjectCard">The card to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectCardsClient.Update(System.Int32,Octokit.ProjectCardUpdate)">
            <summary>
            Updates a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#update-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
            <param name="projectCardUpdate">New values to update the card with</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectCardsClient.Delete(System.Int32)">
            <summary>
            Deletes a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#delete-a-project-card">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the card</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectCardsClient.Move(System.Int32,Octokit.ProjectCardMove)">
            <summary>
            Moves a card.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#move-a-project-card">API documentation</a> for more information.
            </remarks>        
            <param name="id">The id of the card</param>
            <param name="position">The position to move the card</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectColumnsClient.GetAll(System.Int32)">
            <summary>
            Gets all columns for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#list-project-columns">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectColumnsClient.GetAll(System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all columns for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#list-project-columns">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The Id of the project</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectColumnsClient.Get(System.Int32)">
            <summary>
            Gets a single column for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#get-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectColumnsClient.Create(System.Int32,Octokit.NewProjectColumn)">
            <summary>
            Creates a column for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#create-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="projectId">The id of the project</param>
            <param name="newProjectColumn">The column to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectColumnsClient.Update(System.Int32,Octokit.ProjectColumnUpdate)">
            <summary>
            Updates a column for this project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#update-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
            <param name="projectColumnUpdate">New values to update the column with</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectColumnsClient.Delete(System.Int32)">
            <summary>
            Deletes a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/columns/#delete-a-project-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectColumnsClient.Move(System.Int32,Octokit.ProjectColumnMove)">
            <summary>
            Moves a column.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#move-a-column">API documentation</a> for more information.
            </remarks>
            <param name="id">The id of the column</param>
            <param name="position">The position to move the column</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableProjectsClient">
            <summary>
            A client for GitHub's Repository Projects API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ProjectRequest)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForRepository(System.String,System.String,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForRepository(System.Int64)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForRepository(System.Int64,Octokit.ProjectRequest)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForRepository(System.Int64,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-repository-projects">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForOrganization(System.String)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForOrganization(System.String,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organziation</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForOrganization(System.String,Octokit.ProjectRequest)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organziation</param>
            <param name="request">Used to filter the list of projects returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.GetAllForOrganization(System.String,Octokit.ProjectRequest,Octokit.ApiOptions)">
            <summary>
            Get all projects for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#list-organization-projects">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organziation</param>
            <param name="request">Used to filter the list of projects returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.Get(System.Int32)">
            <summary>
            Gets a single project for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#get-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.CreateForRepository(System.Int64,Octokit.NewProject)">
            <summary>
            Creates a project for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#create-a-repository-project">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newProject">The new project to create for the specified repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.CreateForOrganization(System.String,Octokit.NewProject)">
            <summary>
            Creates a project for the specified organization.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/projects/#create-an-organization-project">API documentation</a> for more information.
            </remarks>
            <param name="organization">The name of the organization</param>
            <param name="newProject">The new project to create for the specified repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.Update(System.Int32,Octokit.ProjectUpdate)">
            <summary>
            Updates a project for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#update-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
            <param name="projectUpdate">The modified project</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableProjectsClient.Delete(System.Int32)">
            <summary>
            Deletes a project.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/#delete-a-project">API documentation</a> for more information.
            </remarks>
            <param name="id">The Id of the project</param>
        </member>
        <member name="P:Octokit.Reactive.ObservableProjectsClient.Card">
            <summary>
            A client for GitHub's Project Cards API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/cards/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableProjectsClient.Column">
            <summary>
            A client for GitHub's Project Columns API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/projects/columns/">Repository Projects API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.ObservablePullRequestReviewCommentReactionsClient">
            <summary>
            A client for GitHub's Reactions API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/reactions/">Reactions API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentReactionsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentReactionsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentReactionsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Get all reactions for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentReactionsClient.Create(System.String,System.String,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentReactionsClient.Create(System.Int64,System.Int32,Octokit.NewReaction)">
            <summary>
            Creates a reaction for a specified Pull Request Review Comment.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="number">The comment id</param>
            <param name="reaction">The reaction to create</param>
        </member>
        <member name="T:Octokit.Reactive.ObservablePullRequestReviewCommentsClient">
            <summary>
            A client for GitHub's Pull Request Review Comments API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/comments/">Review Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review comments for a specified pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestReviewCommentRequest)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.PullRequestReviewCommentRequest)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestReviewCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetAllForRepository(System.Int64,Octokit.PullRequestReviewCommentRequest,Octokit.ApiOptions)">
            <summary>
            Gets a list of the pull request review comments in a specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">The sorting <see cref="T:Octokit.PullRequestReviewCommentRequest">parameters</see></param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetComment(System.String,System.String,System.Int32)">
            <summary>
            Gets a single pull request review comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#get-a-single-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.GetComment(System.Int64,System.Int32)">
            <summary>
            Gets a single pull request review comment by number.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#get-a-single-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentCreate)">
            <summary>
            Creates a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewCommentCreate)">
            <summary>
            Creates a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.CreateReply(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentReplyCreate)">
            <summary>
            Creates a comment on a pull request review as a reply to another comment.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.CreateReply(System.Int64,System.Int32,Octokit.PullRequestReviewCommentReplyCreate)">
            <summary>
            Creates a comment on a pull request review as a reply to another comment.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#create-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="comment">The comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.Edit(System.String,System.String,System.Int32,Octokit.PullRequestReviewCommentEdit)">
            <summary>
            Edits a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#edit-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="comment">The edited comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.Edit(System.Int64,System.Int32,Octokit.PullRequestReviewCommentEdit)">
            <summary>
            Edits a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#edit-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="comment">The edited comment</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#delete-a-comment</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a comment on a pull request review.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/comments/#delete-a-comment</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewRequestsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewRequestsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewRequestsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewRequestsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets review requests for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#list-review-requests</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewRequestsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Creates review requests on a pull request for specified users.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#create-a-review-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="users">List of logins of user will be requested for review</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewRequestsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Creates review requests on a pull request for specified users.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#create-a-review-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="users">List of logins of user will be requested for review</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewRequestsClient.Delete(System.String,System.String,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Deletes review request for given users on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="users">List of logins of users that will be not longer requested for review</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewRequestsClient.Delete(System.Int64,System.Int32,Octokit.PullRequestReviewRequest)">
            <summary>
            Deletes review request for given users on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request review comment number</param>
            <param name="users">List of logins of users that will be not longer requested for review</param>
        </member>
        <member name="T:Octokit.Reactive.ObservablePullRequestReviewsClient">
            <summary>
            A client for GitHub's Pull Request Review API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/reviews/">Review API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Create(System.String,System.String,System.Int32,Octokit.PullRequestReviewCreate)">
            <summary>
            Creates a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="review">The review</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Create(System.Int64,System.Int32,Octokit.PullRequestReviewCreate)">
            <summary>
            Creates a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The Pull Request number</param>
            <param name="review">The review</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Delete(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Deletes a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Delete(System.Int64,System.Int32,System.Int64)">
            <summary>
            Deletes a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Dismiss(System.String,System.String,System.Int32,System.Int64,Octokit.PullRequestReviewDismiss)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="dismissMessage">The message indicating why the review was dismissed</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Dismiss(System.Int64,System.Int32,System.Int64,Octokit.PullRequestReviewDismiss)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="dismissMessage">The message indicating why the review was dismissed</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.GetAll(System.String,System.String,System.Int32)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.GetAll(System.Int64,System.Int32)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.GetAll(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.GetAll(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets reviews for a specified pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Get(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Gets a single pull request review by ID.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Get(System.Int64,System.Int32,System.Int64)">
            <summary>
            Gets a single pull request review by ID.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Submit(System.String,System.String,System.Int32,System.Int64,Octokit.PullRequestReviewSubmit)">
            <summary>
            Submits a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="submitMessage">The message and event being submitted for the review</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.Submit(System.Int64,System.Int32,System.Int64,Octokit.PullRequestReviewSubmit)">
            <summary>
            Submits a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="submitMessage">The message and event being submitted for the review</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.GetAllComments(System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.GetAllComments(System.Int64,System.Int32,System.Int64)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.GetAllComments(System.String,System.String,System.Int32,System.Int64,Octokit.ApiOptions)">
            <summary>
            Lists comments for a single review
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestReviewsClient.GetAllComments(System.Int64,System.Int32,System.Int64,Octokit.ApiOptions)">
            <summary>
            Dismisses a pull request review.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="reviewId">The pull request review number</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.Reactive.ObservablePullRequestsClient">
            <summary>
            A client for GitHub's Pull Requests API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/pulls/">Pull Requests API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservablePullRequestsClient.Review">
            <summary>
            Client for managing reviews.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.ObservablePullRequestsClient.ReviewComment">
            <summary>
            Client for managing review comments.
            </summary>
        </member>
        <member name="P:Octokit.Reactive.ObservablePullRequestsClient.ReviewRequest">
            <summary>
            Client for managing review requests.
            </summary>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Pull Request by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#get-a-single-pull-request
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Pull Request by number.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#get-a-single-pull-request
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The number of the pull request</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all open pull requests for the repository.
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestRequest)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.GetAllForRepository(System.Int64,Octokit.PullRequestRequest)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.GetAllForRepository(System.String,System.String,Octokit.PullRequestRequest,Octokit.ApiOptions)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.GetAllForRepository(System.Int64,Octokit.PullRequestRequest,Octokit.ApiOptions)">
            <summary>
            Query pull requests for the repository based on criteria
            </summary>
            <remarks>
            http://developer.github.com/v3/pulls/#list-pull-requests
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter and sort the list of pull requests returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Create(System.String,System.String,Octokit.NewPullRequest)">
            <summary>
            Creates a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#create-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newPullRequest">A <see cref="T:Octokit.NewPullRequest"/> instance describing the new PullRequest to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Create(System.Int64,Octokit.NewPullRequest)">
            <summary>
            Creates a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#create-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newPullRequest">A <see cref="T:Octokit.NewPullRequest"/> instance describing the new PullRequest to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Update(System.String,System.String,System.Int32,Octokit.PullRequestUpdate)">
            <summary>
            Update a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#update-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The PullRequest number</param>
            <param name="pullRequestUpdate">An <see cref="T:Octokit.PullRequestUpdate"/> instance describing the changes to make to the PullRequest
            </param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Update(System.Int64,System.Int32,Octokit.PullRequestUpdate)">
            <summary>
            Update a pull request for the specified repository.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#update-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The PullRequest number</param>
            <param name="pullRequestUpdate">An <see cref="T:Octokit.PullRequestUpdate"/> instance describing the changes to make to the PullRequest
            </param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Merge(System.String,System.String,System.Int32,Octokit.MergePullRequest)">
            <summary>
            Merge a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#merge-a-pull-request-merge-buttontrade</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
            <param name="mergePullRequest">A <see cref="T:Octokit.MergePullRequest"/> instance describing a pull request merge</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Merge(System.Int64,System.Int32,Octokit.MergePullRequest)">
            <summary>
            Merge a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#merge-a-pull-request-merge-buttontrade</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
            <param name="mergePullRequest">A <see cref="T:Octokit.MergePullRequest"/> instance describing a pull request merge</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Merged(System.String,System.String,System.Int32)">
            <summary>
            Gets the pull request merge status.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Merged(System.Int64,System.Int32)">
            <summary>
            Gets the pull request merge status.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Commits(System.String,System.String,System.Int32)">
            <summary>
            Gets the list of commits on a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#list-commits-on-a-pull-request</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Commits(System.Int64,System.Int32)">
            <summary>
            Gets the list of commits on a pull request.
            </summary>
            <remarks>http://developer.github.com/v3/pulls/#list-commits-on-a-pull-request</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Files(System.String,System.String,System.Int32)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="M:Octokit.Reactive.ObservablePullRequestsClient.Files(System.Int64,System.Int32)">
            <summary>
            Get the list of files on a pull request.
            </summary>
            <remarks>https://developer.github.com/v3/pulls/#list-pull-requests-files</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The pull request number</param>
        </member>
        <member name="P:Octokit.Reactive.ObservableReactionsClient.CommitComment">
            <summary>
            Access GitHub's Reactions API for Commit Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableReactionsClient.Issue">
            <summary>
            Access GitHub's Reactions API for Issues.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableReactionsClient.IssueComment">
            <summary>
            Access GitHub's Reactions API for Issue Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableReactionsClient.PullRequestReviewComment">
            <summary>
            Access GitHub's Reactions API for Pull Request Review Comments.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/reactions/
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableReactionsClient.Delete(System.Int32)">
            <summary>
            Delete a reaction.
            </summary>
            <remarks>https://developer.github.com/v3/reactions/#delete-a-reaction</remarks>        
            <param name="number">The reaction id</param>        
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableReferencesClient">
            <summary>
            A client for GitHub's References API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/refs/">References API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.GetAll(System.Int64)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all references for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.GetAllForSubNamespace(System.String,System.String,System.String)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.GetAllForSubNamespace(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.GetAllForSubNamespace(System.Int64,System.String)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.GetAllForSubNamespace(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets references for a given repository by sub-namespace, i.e. "tags" or "heads"
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#get-all-references
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="subNamespace">The sub-namespace to get references for</param>
            <param name="options">Options for changing the API response</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.Create(System.String,System.String,Octokit.NewReference)">
            <summary>
            Creates a reference for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#create-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.Create(System.Int64,Octokit.NewReference)">
            <summary>
            Creates a reference for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#create-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference to create</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.Update(System.String,System.String,System.String,Octokit.ReferenceUpdate)">
            <summary>
            Updates a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#update-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <param name="referenceUpdate">The updated reference data</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.Update(System.Int64,System.String,Octokit.ReferenceUpdate)">
            <summary>
            Updates a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#update-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <param name="referenceUpdate">The updated reference data</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#delete-a-reference
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableReferencesClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a reference for a given repository by reference name
            </summary>
            <remarks>
            http://developer.github.com/v3/git/refs/#delete-a-reference
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The canonical name of the reference without the 'refs/' prefix. e.g. "heads/master" or "tags/release-1"</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableReleasesClient">
            <summary>
            A client for GitHub's Releases API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/">Releases API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAll(System.Int64)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.Release"/>s for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="tag">The tag of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a single <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="tag">The tag of the release</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetLatest(System.String,System.String)">
            <summary>
            Gets the latest <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-the-latest-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetLatest(System.Int64)">
            <summary>
            Gets the latest <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/releases/#get-the-latest-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Create(System.String,System.String,Octokit.NewRelease)">
            <summary>
            Creates a new <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#create-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="data">A description of the release to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Create(System.Int64,Octokit.NewRelease)">
            <summary>
            Creates a new <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#create-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="data">A description of the release to create</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Edit(System.String,System.String,System.Int32,Octokit.ReleaseUpdate)">
            <summary>
            Edits an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release</param>
            <param name="data">A description of the release to edit</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Edit(System.Int64,System.Int32,Octokit.ReleaseUpdate)">
            <summary>
            Edits an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release</param>
            <param name="data">A description of the release to edit</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the release to delete</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes an existing <see cref="T:Octokit.Release"/> for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the release to delete</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAllAssets(System.String,System.String,System.Int32)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAllAssets(System.Int64,System.Int32)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAllAssets(System.String,System.String,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAllAssets(System.Int64,System.Int32,Octokit.ApiOptions)">
            <summary>
            Gets all <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#list-assets-for-a-release">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.Release"/>.</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAsset(System.String,System.String,System.Int32)">
            <summary>
            Gets the specified <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.GetAsset(System.Int64,System.Int32)">
            <summary>
            Gets the specified <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#get-a-single-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.UploadAsset(Octokit.Release,Octokit.ReleaseAssetUpload)">
            <summary>
            Uploads a <see cref="T:Octokit.ReleaseAsset"/> for the specified release.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#upload-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="release">The <see cref="T:Octokit.Release"/> to attach the uploaded asset to</param>
            <param name="data">Description of the asset with its data</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.EditAsset(System.String,System.String,System.Int32,Octokit.ReleaseAssetUpdate)">
            <summary>
            Edits the <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
            <param name="data">Description of the asset with its amended data</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.EditAsset(System.Int64,System.Int32,Octokit.ReleaseAssetUpdate)">
            <summary>
            Edits the <see cref="T:Octokit.ReleaseAsset"/> for the specified release of the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#edit-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="assetId">The id of the <see cref="T:Octokit.ReleaseAsset"/></param>
            <param name="data">Description of the asset with its amended data</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.DeleteAsset(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.ReleaseAsset"/> from the specified repository
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="id">The id of the <see cref="T:Octokit.ReleaseAsset"/>.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableReleasesClient.DeleteAsset(System.Int64,System.Int32)">
            <summary>
            Deletes the specified <see cref="T:Octokit.ReleaseAsset"/> from the specified repository
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/releases/#delete-a-release-asset">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="id">The id of the <see cref="T:Octokit.ReleaseAsset"/>.</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableRepoCollaboratorsClient">
            <summary>
            A client for GitHub's Collaborators on a Repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/">Collaborators API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new GitHub Repo Collaborators API client.
            </summary>
            <param name="client">An IGitHubClient client.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.GetAll(System.Int64)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the collaborators on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.IsCollaborator(System.String,System.String,System.String)">
            <summary>
            Checks if a user is a collaborator on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the prospective collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.IsCollaborator(System.Int64,System.String)">
            <summary>
            Checks if a user is a collaborator on a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#get">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the prospective collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.ReviewPermission(System.String,System.String,System.String)">
            <summary>
            Review a user's permission level in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the collaborator to check permission for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.ReviewPermission(System.Int64,System.String)">
            <summary>
            Review a user's permission level in a repository
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the collaborator to check permission for</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Add(System.String,System.String,System.String)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Add(System.String,System.String,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Add(System.Int64,System.String)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#add-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Add(System.Int64,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Adds a new collaborator to the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the new collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Invite(System.String,System.String,System.String)">
            <summary>
            Invites a user as a collaborator to a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">The username of the prospective collaborator</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Invite(System.String,System.String,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Invites a user as a collaborator to a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">The username of the prospective collaborator</param>
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Invite(System.Int64,System.String)">
            <summary>
            Invites a user as a collaborator to a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">The username of the prospective collaborator</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Invite(System.Int64,System.String,Octokit.CollaboratorRequest)">
            <summary>
            Invites a user as a collaborator to a repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">The username of the prospective collaborator</param>   
            <param name="permission">The permission to set. Only valid on organization-owned repositories.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Delete(System.String,System.String,System.String)">
            <summary>
            Deletes a collaborator from the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#list">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="user">Username of the deleted collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepoCollaboratorsClient.Delete(System.Int64,System.String)">
            <summary>
            Deletes a collaborator from the repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/#remove-collaborator">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="user">Username of the deleted collaborator</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Create(Octokit.NewRepository)">
            <summary>
            Creates a new repository for the current user.
            </summary>
            <param name="newRepository">A <see cref="T:Octokit.NewRepository"/> instance describing the new repository to create</param>
            <returns>An <see cref="T:System.IObservable`1"/> instance for the created repository</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Create(System.String,Octokit.NewRepository)">
            <summary>
            Creates a new repository in the specified organization.
            </summary>
            <param name="organizationLogin">The login of the organization in which to create the repository</param>
            <param name="newRepository">A <see cref="T:Octokit.NewRepository"/> instance describing the new repository to create</param>
            <returns>An <see cref="T:System.IObservable`1"/> instance for the created repository</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Delete(System.String,System.String)">
            <summary>
            Deletes a repository for the specified owner and name.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.</remarks>
            <returns>An <see cref="T:System.IObservable`1"/> for the operation</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Delete(System.Int64)">
            <summary>
            Deletes a repository for the specified owner and name.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.</remarks>
            <returns>An <see cref="T:System.IObservable`1"/> for the operation</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Transfer(System.String,System.String,Octokit.RepositoryTransfer)">
            <summary>
            Transfers the ownership of the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#transfer-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="owner">The current owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="repositoryTransfer">Repository transfer information</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Transfer(System.Int64,Octokit.RepositoryTransfer)">
            <summary>
            Transfers the ownership of the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/#transfer-a-repository">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository</param>
            <param name="repositoryTransfer">Repository transfer information</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Get(System.String,System.String)">
            <summary>
            Retrieves the <see cref="T:Octokit.Repository"/> for the specified owner and name.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Get(System.Int64)">
            <summary>
            Retrieves the <see cref="T:Octokit.Repository"/> for the specified owner and name.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <returns>A <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllPublic">
            <summary>
            Retrieves every public <see cref="T:Octokit.Repository"/>.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllPublic(Octokit.PublicRepositoryRequest)">
            <summary>
            Retrieves every public <see cref="T:Octokit.Repository"/> since the last repository seen.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="request">Search parameters of the last repository seen</param>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllForCurrent">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the current user.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the current user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllForCurrent(Octokit.RepositoryRequest)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the current user.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <param name="request">Search parameters to filter results on</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllForCurrent(Octokit.RepositoryRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the current user.
            </summary>
            <param name="request">Search parameters to filter results on</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllForUser(System.String)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the specified user.
            </summary>
            <param name="login">The account name to search for</param>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the specified user.
            </summary>
            <param name="login">The account name to search for</param>
            <param name="options">Options for changing the API response</param>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllForOrg(System.String)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the specified organization.
            </summary>
            <remarks>
            The default page size on GitHub.com is 30.
            </remarks>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllForOrg(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves every <see cref="T:Octokit.Repository"/> that belongs to the specified organization.
            </summary>
            <param name="organization">The organization name to search for</param>
            <param name="options">Options for changing the API response</param>
            <returns>A <see cref="T:Octokit.IReadOnlyPagedCollection`1"/> of <see cref="T:Octokit.Repository"/>.</returns>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Status">
            <summary>
            A client for GitHub's Commit Status API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/statuses/">Commit Status API documentation</a> for more
            details. Also check out the <a href="https://github.com/blog/1227-commit-status-api">blog post</a>
            that announced this feature.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Deployment">
            <summary>
            Client for GitHub's Repository Deployments API
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/deployment/">Collaborators API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Statistics">
             <summary>
             Client for GitHub's Repository Statistics API
             Note that the GitHub API uses caching on these endpoints,
             see <a href="https://developer.github.com/v3/repos/statistics/#a-word-about-caching">a word about caching</a> for more details.
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/repos/statistics/">Statistics API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Comment">
            <summary>
            Client for GitHub's Repository Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/comments/">Repository Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Hooks">
            <summary>
            A client for GitHub's Repository Hooks API.
            </summary>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/">Hooks API documentation</a> for more information.</remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Forks">
            <summary>
            A client for GitHub's Repository Forks API.
            </summary>
            <remarks>See <a href="http://developer.github.com/v3/repos/forks/">Forks API documentation</a> for more information.</remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Content">
            <summary>
            Client for GitHub's Repository Contents API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/contents/">Repository Contents API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Merging">
             <summary>
             Client for GitHub's Repository Merging API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/repos/merging/">Merging API documentation</a> for more details
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllContributors(System.String,System.String)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllContributors(System.Int64)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllContributors(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllContributors(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. Does not include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllContributors(System.String,System.String,System.Boolean)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllContributors(System.Int64,System.Boolean)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllContributors(System.String,System.String,System.Boolean,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllContributors(System.Int64,System.Boolean,Octokit.ApiOptions)">
            <summary>
            Gets all contributors for the specified repository. With the option to include anonymous contributors.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-contributors">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="includeAnonymous">True if anonymous contributors should be included in result; Otherwise false</param>
            <param name="options">Options for changing the API response</param>
            <returns>All contributors of the repository.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllLanguages(System.String,System.String)">
            <summary>
            Gets all languages for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-languages">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All languages used in the repository and the number of bytes of each language.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllLanguages(System.Int64)">
            <summary>
            Gets all languages for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-languages">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All languages used in the repository and the number of bytes of each language.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllTeams(System.String,System.String)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllTeams(System.Int64)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllTeams(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllTeams(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all teams for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-teams">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All <see cref="T:Octokit.Team"/>s associated with the repository</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllTags(System.String,System.String)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllTags(System.Int64)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllTags(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetAllTags(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all tags for the specified repository.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/#list-tags">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <returns>All of the repositories tags.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Edit(System.String,System.String,Octokit.RepositoryUpdate)">
            <summary>
            Updates the specified repository with the values given in <paramref name="update"/>
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="update">New values to update the repository with</param>
            <returns>The updated <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetLicenseContents(System.String,System.String)">
            <summary>
            Get the contents of a repository's license
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <returns>Returns the contents of the repository's license file, if one is detected.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.GetLicenseContents(System.Int64)">
            <summary>
            Get the contents of a repository's license
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <returns>Returns the contents of the repository's license file, if one is detected.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Edit(System.Int64,Octokit.RepositoryUpdate)">
            <summary>
            Updates the specified repository with the values given in <paramref name="update"/>
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="update">New values to update the repository with</param>
            <returns>The updated <see cref="T:Octokit.Repository"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoriesClient.Compare(System.String,System.String,System.String,System.String)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
            <returns></returns>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Branch">
            <summary>
            A client for GitHub's Repository Branches API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/">Branches API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Collaborator">
            <summary>
            A client for GitHub's Repo Collaborators.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/collaborators/">Collaborators API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Commit">
             <summary>
             Client for GitHub's Repository Commits API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/repos/commits/">Commits API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Release">
            <summary>
            Access GitHub's Releases API.
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/releases/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.PullRequest">
            <summary>
            Client for managing pull requests.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/pulls/">Pull Requests API documentation</a> for more details
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.DeployKeys">
            <summary>
            Client for managing deploy keys
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/">Repository Deploy Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Page">
            <summary>
            A client for GitHub's Repository Pages API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/">Repository Pages API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Invitation">
            <summary>
            A client for GitHub's Repository Invitations API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/">Repository Invitations API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Traffic">
            <summary>
            Access GitHub's Repository Traffic API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/traffic/
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableRepositoriesClient.Project">
            <summary>
            Access GitHub's Repository Projects API
            </summary>
            <remarks>
            Refer to the API documentation for more information: https://developer.github.com/v3/repos/projects/
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAll(System.Int64)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the branches for the specified repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-branches">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets the specified branch.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.Get(System.Int64,System.String)">
            <summary>
            Gets the specified branch.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The ID of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetBranchProtection(System.String,System.String,System.String)">
            <summary>
            Get the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetBranchProtection(System.Int64,System.String)">
            <summary>
            Get the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateBranchProtection(System.String,System.String,System.String,Octokit.BranchProtectionSettingsUpdate)">
            <summary>
            Update the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Branch protection settings</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateBranchProtection(System.Int64,System.String,Octokit.BranchProtectionSettingsUpdate)">
            <summary>
            Update the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Branch protection settings</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteBranchProtection(System.String,System.String,System.String)">
            <summary>
            Remove the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteBranchProtection(System.Int64,System.String)">
            <summary>
            Remove the branch protection settings for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-branch-protection">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetRequiredStatusChecks(System.String,System.String,System.String)">
            <summary>
            Get the required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetRequiredStatusChecks(System.Int64,System.String)">
            <summary>
            Get the required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateRequiredStatusChecks(System.String,System.String,System.String,Octokit.BranchProtectionRequiredStatusChecksUpdate)">
            <summary>
            Replace required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Required status checks</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateRequiredStatusChecks(System.Int64,System.String,Octokit.BranchProtectionRequiredStatusChecksUpdate)">
            <summary>
            Replace required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">Required status checks</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteRequiredStatusChecks(System.String,System.String,System.String)">
            <summary>
            Remove required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>   
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteRequiredStatusChecks(System.Int64,System.String)">
            <summary>
            Remove required status checks for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param> 
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAllRequiredStatusChecksContexts(System.String,System.String,System.String)">
            <summary>
            Get the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAllRequiredStatusChecksContexts(System.Int64,System.String)">
            <summary>
            Get the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Replace the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to replace</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Replace the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to replace</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.AddRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Add the required status checks context for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to add</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.AddRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Add the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to add</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteRequiredStatusChecksContexts(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Remove the required status checks context for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to remove</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteRequiredStatusChecksContexts(System.Int64,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
            Remove the required status checks contexts for the specified branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="contexts">The contexts to remove</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetReviewEnforcement(System.String,System.String,System.String)">
            <summary>
            Get required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetReviewEnforcement(System.Int64,System.String)">
            <summary>
            Get required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateReviewEnforcement(System.String,System.String,System.String,Octokit.BranchProtectionRequiredReviewsUpdate)">
            <summary>
            Update required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">The required pull request review settings</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateReviewEnforcement(System.Int64,System.String,Octokit.BranchProtectionRequiredReviewsUpdate)">
            <summary>
            Update required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="update">The required pull request review settings</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.RemoveReviewEnforcement(System.String,System.String,System.String)">
            <summary>
            Remove required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.RemoveReviewEnforcement(System.Int64,System.String)">
            <summary>
            Remove required pull request review enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Get admin enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAdminEnforcement(System.Int64,System.String)">
            <summary>
            Get admin enforcement of protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.AddAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Add admin enforcement to protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.AddAdminEnforcement(System.Int64,System.String)">
            <summary>
            Add admin enforcement to protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.RemoveAdminEnforcement(System.String,System.String,System.String)">
            <summary>
            Remove admin enforcement on protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.RemoveAdminEnforcement(System.Int64,System.String)">
            <summary>
            Remove admin enforcement on protected branch
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetProtectedBranchRestrictions(System.String,System.String,System.String)">
            <summary>
            Get the restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetProtectedBranchRestrictions(System.Int64,System.String)">
            <summary>
            Get the restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteProtectedBranchRestrictions(System.String,System.String,System.String)">
            <summary>
            Remove restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteProtectedBranchRestrictions(System.Int64,System.String)">
            <summary>
            Remove restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAllProtectedBranchTeamRestrictions(System.String,System.String,System.String)">
            <summary>
            Get team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAllProtectedBranchTeamRestrictions(System.Int64,System.String)">
            <summary>
            Get team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Replace team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Replace team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.AddProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Add team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.AddProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Add team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams with push access</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteProtectedBranchTeamRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Remove team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams to remove</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteProtectedBranchTeamRestrictions(System.Int64,System.String,Octokit.BranchProtectionTeamCollection)">
            <summary>
            Remove team restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="teams">List of teams to remove</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAllProtectedBranchUserRestrictions(System.String,System.String,System.String)">
            <summary>
            Get user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.GetAllProtectedBranchUserRestrictions(System.Int64,System.String)">
            <summary>
            Get user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Replace user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.UpdateProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Replace user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.AddProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Add user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to add</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.AddProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Add user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to add</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteProtectedBranchUserRestrictions(System.String,System.String,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Remove user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to remove</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryBranchesClient.DeleteProtectedBranchUserRestrictions(System.Int64,System.String,Octokit.BranchProtectionUserCollection)">
            <summary>
            Remove user restrictions for the specified branch (applies only to Organization owned repositories)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch">API documentation</a> for more details
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="branch">The name of the branch</param>
            <param name="users">List of users with push access to remove</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableRepositoryCommentsClient">
            <summary>
            A client for GitHub's Repository Comments API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/comments/">Repository Comments API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single Repository Comment by number.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <remarks>http://developer.github.com/v3/repos/comments/#get-a-single-commit-comment</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single Repository Comment by number.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <remarks>http://developer.github.com/v3/repos/comments/#get-a-single-commit-comment</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.GetAllForRepository(System.String,System.String)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.GetAllForRepository(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.GetAllForCommit(System.String,System.String,System.String)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha of the commit</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.GetAllForCommit(System.Int64,System.String)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha of the commit</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.GetAllForCommit(System.String,System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha of the commit</param>
            <param name="options">Options to change the API response</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.GetAllForCommit(System.Int64,System.String,Octokit.ApiOptions)">
            <summary>
            Gets Commit Comments for a specified Commit.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha of the commit</param>
            <param name="options">Options to change the API response</param>
            <remarks>http://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.Create(System.String,System.String,System.String,Octokit.NewCommitComment)">
            <summary>
            Creates a new Commit Comment for a specified Commit.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="sha">The sha reference of commit</param>
            <param name="newCommitComment">The new comment to add to the commit</param>
            <remarks>http://developer.github.com/v3/repos/comments/#create-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.Create(System.Int64,System.String,Octokit.NewCommitComment)">
            <summary>
            Creates a new Commit Comment for a specified Commit.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="sha">The sha reference of commit</param>
            <param name="newCommitComment">The new comment to add to the commit</param>
            <remarks>http://developer.github.com/v3/repos/comments/#create-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.Update(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates a specified Commit Comment.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment number</param>
            <param name="commentUpdate">The modified comment</param>
            <remarks>http://developer.github.com/v3/repos/comments/#update-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.Update(System.Int64,System.Int32,System.String)">
            <summary>
            Updates a specified Commit Comment.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment number</param>
            <param name="commentUpdate">The modified comment</param>
            <remarks>http://developer.github.com/v3/repos/comments/#update-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes the specified Commit Comment
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="number">The comment id</param>
            <remarks>http://developer.github.com/v3/repos/comments/#delete-a-commit-comment</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommentsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes the specified Commit Comment
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="number">The comment id</param>
            <remarks>http://developer.github.com/v3/repos/comments/#delete-a-commit-comment</remarks>
        </member>
        <member name="T:Octokit.Reactive.ObservableRepositoryCommitsClient">
            <summary>
            A client for GitHub's Repository Commits API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/repos/commits/">Repository Commits API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.Compare(System.String,System.String,System.String,System.String)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.Compare(System.Int64,System.String,System.String)">
            <summary>
            Compare two references in a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="base">The reference to use as the base commit</param>
            <param name="head">The reference to use as the head commit</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The reference for the commit</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.Get(System.Int64,System.String)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The reference for the commit</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetAll(System.String,System.String)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetAll(System.Int64)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetAll(System.String,System.String,Octokit.CommitRequest)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetAll(System.Int64,Octokit.CommitRequest)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetAll(System.String,System.String,Octokit.CommitRequest,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetAll(System.Int64,Octokit.CommitRequest,Octokit.ApiOptions)">
            <summary>
            Gets all commits for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to filter list of commits returned</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetSha1(System.String,System.String,System.String)">
            <summary>
            Get the SHA-1 of a commit reference
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The repository reference</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryCommitsClient.GetSha1(System.Int64,System.String)">
            <summary>
            Get the SHA-1 of a commit reference
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The repository reference</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableRepositoryContentsClient">
            <summary>
            Client for accessing contents of files within a repository as base64 encoded content.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/contents/">Repository Contents API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Creates an instance of <see cref="T:Octokit.Reactive.ObservableRepositoryContentsClient"/>.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetReadme(System.String,System.String)">
            <summary>
            Returns the HTML rendered README.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetReadme(System.Int64)">
            <summary>
            Returns the HTML rendered README.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetReadmeHtml(System.String,System.String)">
            <summary>
            Returns just the HTML portion of the README without the surrounding HTML document. 
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetReadmeHtml(System.Int64)">
            <summary>
            Returns just the HTML portion of the README without the surrounding HTML document. 
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetArchive(System.String,System.String)">
            <summary>
            Get an archive of a given repository's contents
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetArchive(System.Int64)">
            <summary>
            Get an archive of a given repository's contents
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat,System.String)">
            <summary>
            Get an archive of a given repository's contents, using a specific format and reference
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat,System.String)">
            <summary>
            Get an archive of a given repository's contents, using a specific format and reference
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetArchive(System.String,System.String,Octokit.ArchiveFormat,System.String,System.TimeSpan)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <param name="timeout"> Time span until timeout </param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetArchive(System.Int64,Octokit.ArchiveFormat,System.String,System.TimeSpan)">
            <summary>
            Get an archive of a given repository's contents, in a specific format
            </summary>
            <remarks>https://developer.github.com/v3/repos/contents/#get-archive-link</remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="archiveFormat">The format of the archive. Can be either tarball or zipball</param>
            <param name="reference">A valid Git reference.</param>
            <param name="timeout"> Time span until timeout </param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetAllContents(System.String,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetAllContents(System.Int64,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetAllContents(System.String,System.String)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetAllContents(System.Int64)">
            <summary>
            Returns the contents of the root directory in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetAllContentsByRef(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetAllContentsByRef(System.Int64,System.String,System.String)">
            <summary>
            Returns the contents of a file or directory in a repository.
            </summary>
            <remarks>
            If given a path to a single file, this method returns a collection containing only that file.
            See the <a href="https://developer.github.com/v3/repos/contents/#get-contents">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
            <param name="path">The content path</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetAllContentsByRef(System.String,System.String,System.String)">
            <summary>
            Returns the contents of the home directory in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.GetAllContentsByRef(System.Int64,System.String)">
            <summary>
            Returns the contents of the home directory in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.CreateFile(System.String,System.String,System.String,Octokit.CreateFileRequest)">
            <summary>
            Creates a commit that creates a new file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.CreateFile(System.Int64,System.String,Octokit.CreateFileRequest)">
            <summary>
            Creates a commit that creates a new file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.UpdateFile(System.String,System.String,System.String,Octokit.UpdateFileRequest)">
            <summary>
            Creates a commit that updates the contents of a file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to update</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.UpdateFile(System.Int64,System.String,Octokit.UpdateFileRequest)">
            <summary>
            Creates a commit that updates the contents of a file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to update</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.DeleteFile(System.String,System.String,System.String,Octokit.DeleteFileRequest)">
            <summary>
            Creates a commit that deletes a file in a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to delete</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryContentsClient.DeleteFile(System.Int64,System.String,Octokit.DeleteFileRequest)">
            <summary>
            Creates a commit that deletes a file in a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="path">The path to the file</param>
            <param name="request">Information about the file to delete</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableRepositoryDeployKeysClient">
            <summary>
            A client for GitHub's Repository Deploy Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/">Deploy Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Get a single deploy key by number for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#get"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="number">The id of the deploy key.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.Get(System.Int64,System.Int32)">
            <summary>
            Get a single deploy key by number for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#get"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="number">The id of the deploy key.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.GetAll(System.String,System.String)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.GetAll(System.Int64)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Get all deploy keys for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#list"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.Create(System.String,System.String,Octokit.NewDeployKey)">
            <summary>
            Creates a new deploy key for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#create"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="newDeployKey">The deploy key to create for the repository.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.Create(System.Int64,Octokit.NewDeployKey)">
            <summary>
            Creates a new deploy key for a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#create"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="newDeployKey">The deploy key to create for the repository.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a deploy key from a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#delete"> API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository.</param>
            <param name="name">The name of the repository.</param>
            <param name="number">The id of the deploy key to delete.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryDeployKeysClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a deploy key from a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/keys/#delete"> API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository.</param>
            <param name="number">The id of the deploy key to delete.</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableRepositoryForksClient">
            <summary>
            A client for GitHub's Repository Forks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/forks/">Forks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new GitHub Repos Fork API client.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.GetAll(System.String,System.String)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.GetAll(System.Int64)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.GetAll(System.String,System.String,Octokit.RepositoryForksListRequest)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.GetAll(System.Int64,Octokit.RepositoryForksListRequest)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.GetAll(System.String,System.String,Octokit.RepositoryForksListRequest,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.GetAll(System.Int64,Octokit.RepositoryForksListRequest,Octokit.ApiOptions)">
            <summary>
            Gets the list of forks defined for a repository
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#list-forks">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="request">Used to request and filter a list of repository forks</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.Create(System.String,System.String,Octokit.NewRepositoryFork)">
            <summary>
            Creates a fork for a repository. Specify organization in the fork parameter to create for an organization.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#create-a-fork">API documentation</a> for more information.
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="fork">Used to fork a repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryForksClient.Create(System.Int64,Octokit.NewRepositoryFork)">
            <summary>
            Creates a fork for a repository. Specify organization in the fork parameter to create for an organization.
            </summary>
            <remarks>
            See <a href="http://developer.github.com/v3/repos/forks/#create-a-fork">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="fork">Used to fork a repository</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableRepositoryHooksClient">
            <summary>
            A client for GitHub's Repository Webhooks API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/hooks/">Webhooks API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.GetAll(System.String,System.String)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.GetAll(System.Int64)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets the list of hooks defined for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#list">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Get(System.String,System.String,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Get(System.Int64,System.Int32)">
            <summary>
            Gets a single hook by Id
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#get-single-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Create(System.String,System.String,Octokit.NewRepositoryHook)">
            <summary>
            Creates a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Create(System.Int64,Octokit.NewRepositoryHook)">
            <summary>
            Creates a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hook">The hook's parameters</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#create-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Edit(System.String,System.String,System.Int32,Octokit.EditRepositoryHook)">
            <summary>
            Edits a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <param name="hook">The requested changes to an edit repository hook</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Edit(System.Int64,System.Int32,Octokit.EditRepositoryHook)">
            <summary>
            Edits a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <param name="hook">The requested changes to an edit repository hook</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Test(System.String,System.String,System.Int32)">
            <summary>
            Tests a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#test-a-hook">API documentation</a> for more information. 
            This will trigger the hook with the latest push to the current repository if the hook is subscribed to push events. If the hook 
            is not subscribed to push events, the server will respond with 204 but no test POST will be generated.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Test(System.Int64,System.Int32)">
            <summary>
            Tests a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#test-a-hook">API documentation</a> for more information. 
            This will trigger the hook with the latest push to the current repository if the hook is subscribed to push events. If the hook 
            is not subscribed to push events, the server will respond with 204 but no test POST will be generated.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Ping(System.String,System.String,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Ping(System.Int64,System.Int32)">
            <summary>
            This will trigger a ping event to be sent to the hook.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#edit-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Delete(System.String,System.String,System.Int32)">
            <summary>
            Deletes a hook for a repository
            </summary>
            <param name="owner">The repository's owner</param>
            <param name="name">The repository's name</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryHooksClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a hook for a repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="hookId">The repository's hook id</param>
            <remarks>See <a href="http://developer.github.com/v3/repos/hooks/#delete-a-hook">API documentation</a> for more information.</remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryInvitationsClient.Accept(System.Int32)">
            <summary>
            Accept a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation">API documentation</a> for more information.
            </remarks>        
            <param name="invitationId">The id of the invitation.</param>   
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryInvitationsClient.Decline(System.Int32)">
            <summary>
            Decline a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation">API documentation</a> for more information.
            </remarks>        
            <param name="invitationId">The id of the invitation.</param>   
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryInvitationsClient.Delete(System.Int64,System.Int32)">
            <summary>
            Deletes a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository.</param>
            <param name="invitationId">The id of the invitation.</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryInvitationsClient.Edit(System.Int64,System.Int32,Octokit.InvitationUpdate)">
            <summary>
            Updates a repository invitation.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation">API documentation</a> for more information.
            </remarks>
            <param name="repositoryId">The id of the repository.</param>
            <param name="invitationId">The id of the invitatio.n</param>   
            <param name="permissions">The permission to set.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryInvitationsClient.GetAllForCurrent">
            <summary>
            Gets all invitations for the current user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations">API documentation</a> for more information.
            </remarks>        
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryInvitationsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all invitations for the current user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations">API documentation</a> for more information.
            </remarks>
            <param name="options">Options for changing the API response</param>        
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryInvitationsClient.GetAllForRepository(System.Int64)">
            <summary>
            Gets all the invitations on a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository">API documentation</a> for more information.
            </remarks>        
            <param name="repositoryId">The id of the repository</param>  
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryInvitationsClient.GetAllForRepository(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all the invitations on a repository.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository">API documentation</a> for more information.
            </remarks>        
            <param name="repositoryId">The id of the repository</param>
            <param name="options">Options for changing the API response</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableRepositoryPagesClient">
            <summary>
            A client for GitHub's Repository Pages API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/">Repository Pages API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.Get(System.String,System.String)">
            <summary>
            Gets the page metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.Get(System.Int64)">
            <summary>
            Gets the page metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.GetAll(System.String,System.String)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.GetAll(System.Int64)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.GetAll(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.GetAll(System.Int64,Octokit.ApiOptions)">
            <summary>
            Gets all build metadata for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options to change the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-pages-builds">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.GetLatest(System.String,System.String)">
            <summary>
            Gets the build metadata for the last build for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-latest-pages-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.GetLatest(System.Int64)">
            <summary>
            Gets the build metadata for the last build for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#list-latest-pages-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.RequestPageBuild(System.String,System.String)">
            <summary>
            Requests your site be built from the latest revision on the default branch for a given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#request-a-page-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryPagesClient.RequestPageBuild(System.Int64)">
            <summary>
            Requests your site be built from the latest revision on the default branch for a given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
             <remarks>
            See the <a href="https://developer.github.com/v3/repos/pages/#request-a-page-build">API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryTrafficClient.GetAllPaths(System.Int64)">
            <summary>
            List the top 10 popular contents over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-paths</remarks>
            <param name="repositoryId">The owner of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryTrafficClient.GetAllPaths(System.String,System.String)">
            <summary>
            List the top 10 popular contents over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-paths</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryTrafficClient.GetAllReferrers(System.Int64)">
            <summary>
            List the top 10 referrers over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-referrers</remarks>
            <param name="repositoryId">The owner of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryTrafficClient.GetAllReferrers(System.String,System.String)">
            <summary>
            List the top 10 referrers over the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#list-referrers</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryTrafficClient.GetClones(System.Int64,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of clones and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#clones</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryTrafficClient.GetClones(System.String,System.String,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of clones and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#clones</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryTrafficClient.GetViews(System.Int64,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of views and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#views</remarks>
            <param name="repositoryId">The owner of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableRepositoryTrafficClient.GetViews(System.String,System.String,Octokit.RepositoryTrafficRequest)">
            <summary>
            Get the total number of views and breakdown per day or week for the last 14 days
            </summary>
            <remarks>https://developer.github.com/v3/repos/traffic/#views</remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="per">Breakdown per day or week</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableSearchClient">
            <summary>
            GitHub Search Api Client
            </summary>
        </member>
        <member name="M:Octokit.Reactive.ObservableSearchClient.SearchRepo(Octokit.SearchRepositoriesRequest)">
            <summary>
            search repos
            http://developer.github.com/v3/search/#search-repositories
            </summary>
            <param name="search"></param>
            <returns>List of repositories</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableSearchClient.SearchUsers(Octokit.SearchUsersRequest)">
            <summary>
            search users
            http://developer.github.com/v3/search/#search-users
            </summary>
            <param name="search"></param>
            <returns>List of users</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableSearchClient.SearchIssues(Octokit.SearchIssuesRequest)">
            <summary>
            search issues
            http://developer.github.com/v3/search/#search-issues
            </summary>
            <param name="search"></param>
            <returns>List of issues</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableSearchClient.SearchCode(Octokit.SearchCodeRequest)">
            <summary>
            search code
            http://developer.github.com/v3/search/#search-code
            </summary>
            <param name="search"></param>
            <returns>List of files</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableSearchClient.SearchLabels(Octokit.SearchLabelsRequest)">
            <summary>
            search labels
            https://developer.github.com/v3/search/#search-labels
            </summary>
            <param name="search"></param>
            <returns>List of labels</returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableStarredClient">
            <summary>
            A client for GitHub's Activity Starring API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/activity/starring/">Activity Starring API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllStargazers(System.String,System.String)">
            <summary>
            Retrieves all of the stargazers for the passed repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllStargazers(System.Int64)">
            <summary>
            Retrieves all of the stargazers for the passed repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllStargazers(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllStargazers(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllStargazersWithTimestamps(System.String,System.String)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllStargazersWithTimestamps(System.Int64)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllStargazersWithTimestamps(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllStargazersWithTimestamps(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the stargazers for the passed repository with star creation timestamps.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForCurrent">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForCurrentWithTimestamps">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForCurrentWithTimestamps(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForCurrent(Octokit.StarredRequest)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForCurrent(Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForCurrentWithTimestamps(Octokit.StarredRequest)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForCurrentWithTimestamps(Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the starred <see cref="T:Octokit.Repository"/>(ies) for the current user with star creation timestamps.
            </summary>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForUser(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForUserWithTimestamps(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForUserWithTimestamps(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForUser(System.String,Octokit.StarredRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForUser(System.String,Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForUserWithTimestamps(System.String,Octokit.StarredRequest)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.GetAllForUserWithTimestamps(System.String,Octokit.StarredRequest,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) starred by the specified user with star creation timestamps.
            </summary>
            <param name="user">The login of the user</param>
            <param name="request">Star-specific request parameters that sort the results</param>
            <param name="options">Options for changing the API response</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.CheckStarred(System.String,System.String)">
            <summary>
            Check if a repository is starred by the current authenticated user
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.StarRepo(System.String,System.String)">
            <summary>
            Stars a repository for the authenticated user
            </summary>
            <param name="owner">The owner of the repository to star</param>
            <param name="name">The name of the repository to star</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStarredClient.RemoveStarFromRepo(System.String,System.String)">
            <summary>
            Unstars a repository for the authenticated user
            </summary>
            <param name="owner">The owner of the repository to unstar</param>
            <param name="name">The name of the repository to unstar</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableStatisticsClient">
            <summary>
            A client for GitHub's Repository Statistics API.
            Note that the GitHub API uses caching on these endpoints,
            see <a href="https://developer.github.com/v3/repos/statistics/#a-word-about-caching">a word about caching</a> for more details.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/repos/statistics/">Repository Statistics API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetContributors(System.String,System.String)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetContributors(System.Int64)">
            <summary>
            Returns a list of <see cref="T:Octokit.Contributor"/> for the given repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetCommitActivity(System.String,System.String)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetCommitActivity(System.Int64)">
            <summary>
            Returns the last year of commit activity grouped by week.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetCodeFrequency(System.String,System.String)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetCodeFrequency(System.Int64)">
            <summary>
            Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetParticipation(System.String,System.String)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total. 
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetParticipation(System.Int64)">
            <summary>
            Returns the total commit counts for the owner and total commit counts in total. 
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetPunchCard(System.String,System.String)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableStatisticsClient.GetPunchCard(System.Int64)">
            <summary>
            Returns a list of the number of commits per hour in each day
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableTagsClient">
            <summary>
            A client for GitHub's Git Tags API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/tags/">Git Tags API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableTagsClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a tag for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#get-a-tag
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">Tha sha reference of the tag</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTagsClient.Get(System.Int64,System.String)">
            <summary>
            Gets a tag for a given repository by sha reference
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#get-a-tag
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">Tha sha reference of the tag</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTagsClient.Create(System.String,System.String,Octokit.NewTag)">
            <summary>
            Create a tag for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#create-a-tag-object
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="tag">The tag to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTagsClient.Create(System.Int64,Octokit.NewTag)">
            <summary>
            Create a tag for a given repository
            </summary>
            <remarks>
            http://developer.github.com/v3/git/tags/#create-a-tag-object
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="tag">The tag to create</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableTeamsClient">
            <summary>
            A client for GitHub's Org Teams API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/orgs/teams/">Orgs API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new Organization Teams API client.
            </summary>
            <param name="client">An <see cref="T:Octokit.IGitHubClient" /> used to make the requests</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.Get(System.Int32)">
            <summary>
            Gets a single <see cref="T:Octokit.Team"/> by identifier.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#get-team
            </remarks>
            <param name="id">The team identifier.</param>
            <returns>The <see cref="T:Octokit.Team"/> with the given identifier.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAll(System.String)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current org.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the orgs's teams <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current org.
            </summary>
            <param name="org">Organization to list all teams of.</param>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the orgs's teams <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllForCurrent">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current user.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the user's <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Returns all <see cref="T:Octokit.Team" />s for the current user.
            </summary>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the user's <see cref="T:Octokit.Team"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllChildTeams(System.Int32)">
            <summary>
            Returns all child teams of the given team.
            </summary>
            <param name="id">The team identifier</param>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-child-teams
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllChildTeams(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all child teams of the given team.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-child-teams
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllMembers(System.Int32)">
            <summary>
            Returns all members of the given team. 
            </summary>
            <param name="id">The team identifier</param>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the team's member <see cref="T:Octokit.User"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllMembers(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all members of the given team. 
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>A list of the team's member <see cref="T:Octokit.User"/>s.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllMembers(System.Int32,Octokit.TeamMembersRequest)">
            <summary>
            Returns all members with the specified role in the given team of the given role.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="request">The request filter</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllMembers(System.Int32,Octokit.TeamMembersRequest,Octokit.ApiOptions)">
            <summary>
            Returns all members with the specified role in the given team of the given role.
            </summary>
            <remarks>
            https://developer.github.com/v3/orgs/teams/#list-team-members
            </remarks>
            <param name="id">The team identifier</param>
            <param name="request">The request filter</param>
            <param name="options">Options to change API behaviour.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.Create(System.String,Octokit.NewTeam)">
            <summary>
            Returns newly created <see cref="T:Octokit.Team" /> for the current org.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>Newly created <see cref="T:Octokit.Team"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.Update(System.Int32,Octokit.UpdateTeam)">
            <summary>
            Returns updated <see cref="T:Octokit.Team" /> for the current org.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>Updated <see cref="T:Octokit.Team"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.Delete(System.Int32)">
            <summary>
            Delete a team - must have owner permissions to this
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.AddOrEditMembership(System.Int32,System.String,Octokit.UpdateTeamMembership)">
            <summary>
            Adds a <see cref="T:Octokit.User"/> to a <see cref="T:Octokit.Team"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#add-or-update-team-membership">API documentation</a> for more information.
            </remarks>
            <param name="id">The team identifier.</param>
            <param name="login">The user to add to the team.</param>
            <param name="request">Additional parameters for the request</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.RemoveMembership(System.Int32,System.String)">
            <summary>
            Removes a <see cref="T:Octokit.User"/> from a <see cref="T:Octokit.Team"/>.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#remove-team-member">API documentation</a> for more information.
            </remarks>
            <param name="id">The team identifier.</param>
            <param name="login">The user to remove from the team.</param>
            <returns><see langword="true"/> if the user was removed from the team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetMembershipDetails(System.Int32,System.String)">
            <summary>
            Gets whether the user with the given <paramref name="login"/> 
            is a member of the team with the given <paramref name="id"/>.
            A <see cref="T:Octokit.NotFoundException"/> is thrown if the user is not a member.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#get-team-membership">API documentation</a> for more information.
            </remarks>
            <param name="id">The team to check.</param>
            <param name="login">The user to check.</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllRepositories(System.Int32)">
            <summary>
            Returns all team's repositories.
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The team's repositories</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllRepositories(System.Int32,Octokit.ApiOptions)">
            <summary>
            Returns all team's repositories.
            </summary>
            <param name="id">Team Id.</param>
            <param name="options">Options to change API behaviour.</param>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns>The team's repositories</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.AddRepository(System.Int32,System.String,System.String)">
            <summary>
            Adds a <see cref="T:Octokit.Repository"/> to a <see cref="T:Octokit.Team"/>.
            </summary>
            <param name="id">The team identifier.</param>
            <param name="organization">Org to associate the repo with.</param>
            <param name="repoName">Name of the repo.</param>
            <exception cref="T:Octokit.ApiValidationException">Thrown if you attempt to add a repository to a team that is not owned by the organization.</exception>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#add-team-repo">API documentation</a> for more information.
            </remarks>
            <returns><see langword="true"/> if the repository was added to the team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.AddRepository(System.Int32,System.String,System.String,Octokit.RepositoryPermissionRequest)">
            <summary>
            Adds a <see cref="T:Octokit.Repository"/> to a <see cref="T:Octokit.Team"/>.
            </summary>
            <param name="id">The team identifier.</param>
            <param name="organization">Org to associate the repo with.</param>
            <param name="repoName">Name of the repo.</param>
            <param name="permission">The permission to grant the team on this repository.</param>
            <exception cref="T:Octokit.ApiValidationException">Thrown if you attempt to add a repository to a team that is not owned by the organization.</exception>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#add-team-repo">API documentation</a> for more information.
            </remarks>
            <returns><see langword="true"/> if the repository was added to the team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.RemoveRepository(System.Int32,System.String,System.String)">
            <summary>
            Remove a repository from the team
            </summary>
            <exception cref="T:Octokit.ApiException">Thrown when a general API error occurs.</exception>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.IsRepositoryManagedByTeam(System.Int32,System.String,System.String)">
            <summary>
            Gets whether or not the given repository is managed by the given team.
            </summary>
            <param name="id">The team identifier</param>
            <param name="owner">Owner of the org the team is associated with.</param>
            <param name="repo">Name of the repo.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#get-team-repo">API documentation</a> for more information.
            </remarks>
            <returns><see langword="true"/> if the repository is managed by the given team; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllPendingInvitations(System.Int32)">
            <summary>
            List all pending invitations for the given team.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#list-pending-team-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="id">The team identifier</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableTeamsClient.GetAllPendingInvitations(System.Int32,Octokit.ApiOptions)">
            <summary>
            List all pending invitations for the given team.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/orgs/teams/#list-pending-team-invitations">API Documentation</a>
            for more information.
            </remarks>
            <param name="id">The team identifier</param>
            <param name="options">Options to change API behaviour</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableTreesClient">
            <summary>
            A client for GitHub's Git Trees API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/git/trees/">Git Trees API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableTreesClient.Get(System.String,System.String,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#get-a-tree
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTreesClient.Get(System.Int64,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#get-a-tree
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTreesClient.GetRecursive(System.String,System.String,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            https://developer.github.com/v3/git/trees/#get-a-tree-recursively
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTreesClient.GetRecursive(System.Int64,System.String)">
            <summary>
            Gets a Tree Response for a given SHA.
            </summary>
            <remarks>
            https://developer.github.com/v3/git/trees/#get-a-tree-recursively
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="reference">The SHA that references the tree</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTreesClient.Create(System.String,System.String,Octokit.NewTree)">
            <summary>
            Creates a new Tree in the specified repo
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#create-a-tree
            </remarks>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="newTree">The value of the new tree</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableTreesClient.Create(System.Int64,Octokit.NewTree)">
            <summary>
            Creates a new Tree in the specified repo
            </summary>
            <remarks>
            http://developer.github.com/v3/git/trees/#create-a-tree
            </remarks>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newTree">The value of the new tree</param>
        </member>
        <member name="T:Octokit.Reactive.ObservableUserAdministrationClient">
            <summary>
            A client for GitHub's User Administration API (GitHub Enterprise)
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/">Administration API documentation</a> for more details.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.#ctor(Octokit.IGitHubClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Octokit.Reactive.ObservableUserAdministrationClient"/> class.
            </summary>
            <param name="client">An <see cref="T:Octokit.IGitHubClient" /> used to make the requests</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.Create(Octokit.NewUser)">
            <summary>
            Create a new user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#create-a-new-user">API documentation</a>
            for more information.
            </remarks>
            <param name="newUser">The <see cref="T:Octokit.NewUser"/> object describing the user to create</param>
            <returns>The created <see cref="T:Octokit.User"/> object</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.Rename(System.String,Octokit.UserRename)">
            <summary>
            Rename an existing user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#rename-an-existing-user">API documentation</a>
            for more information.
            Note that this queues a request to rename a user, rather than execute it straight away
            </remarks>
            <param name="login">The username to rename</param>
            <param name="userRename">The <see cref="T:Octokit.UserRename"/> request, specifying the new login</param>
            <returns>A <see cref="T:Octokit.UserRenameResponse"/> object indicating the queued task message and Url to the user</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.CreateImpersonationToken(System.String,Octokit.NewImpersonationToken)">
            <summary>
            Create an impersonation OAuth token (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#create-an-impersonation-oauth-token">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to impersonate</param>
            <param name="newImpersonationToken">The <see cref="T:Octokit.NewImpersonationToken"/> request specifying the required scopes</param>
            <returns>An <see cref="T:Octokit.Authorization"/> object containing the impersonation token</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.DeleteImpersonationToken(System.String)">
            <summary>
            Deletes an impersonation OAuth token (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-an-impersonation-oauth-token">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to remove impersonation token from</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.Promote(System.String)">
            <summary>
            Promotes ordinary user to a site administrator (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#promote-an-ordinary-user-to-a-site-administrator">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to promote to administrator.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.Demote(System.String)">
            <summary>
            Demotes a site administrator to an ordinary user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#demote-a-site-administrator-to-an-ordinary-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to demote from administrator.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.Suspend(System.String)">
            <summary>
            Suspends a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#suspend-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to suspend.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.Unsuspend(System.String)">
            <summary>
            Unsuspends a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/administration/#unsuspend-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to unsuspend.</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.ListAllPublicKeys">
            <summary>
            List all public keys (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#list-all-public-keys">API documentation</a>
            for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.Delete(System.String)">
            <summary>
            Delete a user (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-a-user">API documentation</a>
            for more information.
            </remarks>
            <param name="login">The user to delete</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserAdministrationClient.DeletePublicKey(System.Int32)">
            <summary>
            Delete a public key (must be Site Admin user).
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/enterprise/2.5/v3/users/administration/#delete-a-public-key">API documentation</a>
            for more information.
            </remarks>
            <param name="keyId">The key to delete</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableUserEmailsClient">
            <summary>
            A client for GitHub's User Emails API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/emails/">User Emails API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserEmailsClient.GetAll">
            <summary>
            Gets all email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user
            </remarks>
            <returns>The <see cref="T:Octokit.EmailAddress"/>es for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserEmailsClient.GetAll(Octokit.ApiOptions)">
            <summary>
            Gets all email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user
            </remarks>
            <param name="options">Options for changing the API response</param>
            <returns>The <see cref="T:Octokit.EmailAddress"/>es for the authenticated user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserEmailsClient.Add(System.String[])">
            <summary>
            Adds email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#add-email-addresses
            </remarks>
            <param name="emailAddresses">The email addresses to add.</param>
            <returns>Returns the added <see cref="T:Octokit.EmailAddress"/>es.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserEmailsClient.Delete(System.String[])">
            <summary>
            Deletes email addresses for the authenticated user.
            </summary>
            <remarks>
            http://developer.github.com/v3/users/emails/#delete-email-addresses
            </remarks>
            <param name="emailAddresses">The email addresses to delete.</param>
            <returns>Returns the added <see cref="T:Octokit.EmailAddress"/>es.</returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableUserGpgKeysClient">
            <summary>
            A client for GitHub's UserUser GPG Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/">User GPG Keys documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserGpgKeysClient.GetAllForCurrent">
            <summary>
            Gets all GPG keys for the authenticated user.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.GpgKey"/>s for the current user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserGpgKeysClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all GPG keys for the authenticated user.
            </summary>
            <param name="options">Options for changing the API response</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys">API documentation</a> for more information.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of <see cref="T:Octokit.GpgKey"/>s for the current user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserGpgKeysClient.Get(System.Int32)">
            <summary>
            View extended details of the <see cref="T:Octokit.GpgKey"/> for the specified id.
            </summary>
            <param name="id">The Id of the GPG key</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns>The <see cref="T:Octokit.GpgKey"/> for the specified Id.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserGpgKeysClient.Create(Octokit.NewGpgKey)">
            <summary>
            Creates a new <see cref="T:Octokit.GpgKey"/> for the authenticated user.
            </summary>
            <param name="newGpgKey">The new GPG key to add.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns>The newly created <see cref="T:Octokit.GpgKey"/>.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserGpgKeysClient.Delete(System.Int32)">
            <summary>
            Deletes the GPG key for the specified Id.
            </summary>
            <param name="id">The Id of the GPG key to delete.</param>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key">API documentation</a> for more information.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:Octokit.Reactive.ObservableUserKeysClient">
            <summary>
            A client for GitHub's User Keys API.
            </summary>
            <remarks>
            See the <a href="http://developer.github.com/v3/users/keys/">User Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserKeysClient.GetAll(System.String)">
            <summary>
            Gets all verified public keys for a user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user
            </remarks>
            <param name="userName">The @ handle of the user.</param>
            <returns>Lists the verified public keys for a user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserKeysClient.GetAll(System.String,Octokit.ApiOptions)">
            <summary>
            Gets all verified public keys for a user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user
            </remarks>
            <param name="userName">The @ handle of the user.</param>
            <param name="options">Options to change API's behavior.</param>
            <returns>Lists the verified public keys for a user.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserKeysClient.GetAllForCurrent">
            <summary>
            Gets all public keys for the authenticated user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-your-public-keys
            </remarks>
            <returns>Lists the current user's keys.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserKeysClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Gets all public keys for the authenticated user.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#list-your-public-keys
            </remarks>
            <param name="options">Options to change API's behavior.</param>
            <returns>Lists the current user's keys.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserKeysClient.Get(System.Int32)">
            <summary>
            Retrieves the <see cref="T:Octokit.PublicKey"/> for the specified id.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#get-a-single-public-key
            </remarks>
            <param name="id">The Id of the SSH key</param>
            <returns>View extended details for a single public key.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserKeysClient.Create(Octokit.NewPublicKey)">
            <summary>
            Create a public key <see cref="T:Octokit.NewPublicKey"/>.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#create-a-public-key
            </remarks>
            <param name="newKey">The SSH Key contents</param>
            <returns>Creates a public key.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUserKeysClient.Delete(System.Int32)">
            <summary>
            Delete a public key.
            </summary>
            <remarks>
            https://developer.github.com/v3/users/keys/#delete-a-public-key
            </remarks>
            <param name="id">The id of the key to delete</param>
            <returns>Removes a public key.</returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUsersClient.Get(System.String)">
            <summary>
            Returns the user specified by the login.
            </summary>
            <param name="login">The login name for the user</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableUsersClient.Current">
            <summary>
            Returns a <see cref="T:Octokit.User"/> for the current authenticated user.
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.User"/></returns>
        </member>
        <member name="M:Octokit.Reactive.ObservableUsersClient.Update(Octokit.UserUpdate)">
            <summary>
            Update the specified <see cref="T:Octokit.UserUpdate"/>.
            </summary>
            <param name="user">The login for the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated.</exception>
            <returns>A <see cref="T:Octokit.User"/></returns>
        </member>
        <member name="P:Octokit.Reactive.ObservableUsersClient.Followers">
             <summary>
             A client for GitHub's User Followers API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/followers/">Followers API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableUsersClient.Email">
             <summary>
             A client for GitHub's User Emails API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/emails/">Emails API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableUsersClient.GitSshKey">
             <summary>
             A client for GitHub's User Keys API
             </summary>
             <remarks>
             See the <a href="http://developer.github.com/v3/users/keys/">Keys API documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableUsersClient.GpgKey">
            <summary>
            A client for GitHub's UserUser GPG Keys API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/users/gpg_keys/">User GPG Keys documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Octokit.Reactive.ObservableUsersClient.Administration">
             <summary>
             A client for GitHub's User Administration API
             </summary>
             <remarks>
             See the <a href="https://developer.github.com/v3/users/administration/">User Administrator API documentation</a> for more information.
            </remarks>
        </member>
        <member name="T:Octokit.Reactive.ObservableWatchedClient">
            <summary>
            A client for GitHub's Watching API.
            </summary>
            <remarks>
            See the <a href="https://developer.github.com/v3/activity/watching/">Watching API documentation</a> for more information.
            </remarks>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.GetAllWatchers(System.String,System.String)">
            <summary>
            Retrieves all of the watchers for the passed repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.GetAllWatchers(System.Int64)">
            <summary>
            Retrieves all of the watchers for the passed repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.GetAllWatchers(System.String,System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watchers for the passed repository
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <param name="options">Options for changing the API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.GetAllWatchers(System.Int64,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watchers for the passed repository
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="options">Options for changing the API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.GetAllForCurrent">
            <summary>
            Retrieves all of the watched <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.GetAllForCurrent(Octokit.ApiOptions)">
            <summary>
            Retrieves all of the watched <see cref="T:Octokit.Repository"/>(ies) for the current user
            </summary>
            <param name="options">Options for changing the API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.GetAllForUser(System.String)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) watched by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.GetAllForUser(System.String,Octokit.ApiOptions)">
            <summary>
            Retrieves all of the <see cref="T:Octokit.Repository"/>(ies) watched by the specified user
            </summary>
            <param name="user">The login of the user</param>
            <param name="options">Options for changing the API's response.</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.CheckWatched(System.String,System.String)">
            <summary>
            Check if a repository is watched by the current authenticated user
            </summary>
            <param name="owner">The owner of the repository</param>
            <param name="name">The name of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.CheckWatched(System.Int64)">
            <summary>
            Check if a repository is watched by the current authenticated user
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <exception cref="T:Octokit.AuthorizationException">Thrown if the client is not authenticated</exception>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.WatchRepo(System.String,System.String,Octokit.NewSubscription)">
            <summary>
            Stars a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to star</param>
            <param name="name">The name of the repository to star</param>
            <param name="newSubscription">A <see cref="T:Octokit.NewSubscription"/> instance describing the new subscription to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.WatchRepo(System.Int64,Octokit.NewSubscription)">
            <summary>
            Stars a repository for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
            <param name="newSubscription">A <see cref="T:Octokit.NewSubscription"/> instance describing the new subscription to create</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.UnwatchRepo(System.String,System.String)">
            <summary>
            Unstars a repository for the authenticated user.
            </summary>
            <param name="owner">The owner of the repository to unstar</param>
            <param name="name">The name of the repository to unstar</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableWatchedClient.UnwatchRepo(System.Int64)">
            <summary>
            Unstars a repository for the authenticated user.
            </summary>
            <param name="repositoryId">The Id of the repository</param>
        </member>
        <member name="M:Octokit.Reactive.IObservableGitHubClient.SetRequestTimeout(System.TimeSpan)">
            <summary>
            Set the GitHub Api request timeout.
            Useful to set a specific timeout for lengthy operations, such as uploading release assets
            </summary>
            <remarks>
            See more information here: https://technet.microsoft.com/library/system.net.http.httpclient.timeout(v=vs.110).aspx
            </remarks>
            <param name="timeout">The Timeout value</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubClient.SetRequestTimeout(System.TimeSpan)">
            <summary>
            Set the GitHub Api request timeout.
            Useful to set a specific timeout for lengthy operations, such as uploading release assets
            </summary>
            <remarks>
            See more information here: https://technet.microsoft.com/library/system.net.http.httpclient.timeout(v=vs.110).aspx
            </remarks>
            <param name="timeout">The Timeout value</param>
        </member>
        <member name="M:Octokit.Reactive.ObservableGitHubClient.GetLastApiInfo">
            <summary>
            Gets the latest API Info - this will be null if no API calls have been made
            </summary>
            <returns><seealso cref="T:Octokit.ApiInfo"/> representing the information returned as part of an Api call</returns>
        </member>
        <member name="M:Octokit.AuthorizationExtensions.GetOrCreateApplicationAuthentication(Octokit.Reactive.IObservableAuthorizationsClient,System.String,System.String,Octokit.NewAuthorization,System.Func{Octokit.TwoFactorRequiredException,System.IObservable{Octokit.TwoFactorChallengeResult}})">
            <summary>
            This method will create a new authorization for the specified OAuth application, only if an authorization 
            for that application doesn’t already exist for the user. It returns the user’s token for the application
            if one exists. Otherwise, it creates a new one.
            </summary>
            <remarks>
            <para>
            This method allows the caller to provide a callback which is used to retrieve the two-factor code from
            the user. Typically the callback is used to show some user interface to the user.
            </para>
            <para>
            See <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> 
            for more details.
            </para>
            </remarks>
            <param name="authorizationsClient">The <see cref="T:Octokit.IAuthorizationsClient" /> this method extends</param>
            <param name="clientId">Client Id for the OAuth application that is requesting the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Defines the scopes and metadata for the token</param>
            <param name="twoFactorChallengeHandler">Callback used to retrieve the two-factor authentication code
            from the user</param>
            <returns></returns>
        </member>
        <member name="M:Octokit.AuthorizationExtensions.CreateAndDeleteExistingApplicationAuthorization(Octokit.Reactive.IObservableAuthorizationsClient,System.String,System.String,Octokit.NewAuthorization,System.Func{Octokit.TwoFactorAuthorizationException,System.IObservable{Octokit.TwoFactorChallengeResult}},System.Boolean)">
            <summary>
            This method will create a new authorization for the specified OAuth application. If an authorization 
            for that application already exists for the user and fingerprint, it'll delete the existing one and 
            recreate it.
            </summary>
            <remarks>
            <para>
            This method is typically used to initiate an application authentication flow.
            This method allows the caller to provide a callback which is used to retrieve the two-factor code from
            the user. Typically the callback is used to show some user interface to the user.
            </para>
            <para>
            See <a href="http://developer.github.com/v3/oauth/#list-your-authorizations">API documentation</a> 
            for more details.
            </para>
            </remarks>
            <param name="authorizationsClient">The <see cref="T:Octokit.IAuthorizationsClient" /> this method extends</param>
            <param name="clientId">Client Id for the OAuth application that is requesting the token</param>
            <param name="clientSecret">The client secret</param>
            <param name="newAuthorization">Defines the scopes and metadata for the token</param>
            <param name="twoFactorChallengeHandler">Callback used to retrieve the two-factor authentication code
            from the user</param>
            <param name="retryInvalidTwoFactorCode">If true, instead of completing when the two factor code supplied
            is invalid, we go through the whole cycle again and prompt the two factor dialog.</param>
            <returns></returns>
        </member>
        <member name="T:Octokit.Ensure">
            <summary>
              Ensure input parameters
            </summary>
        </member>
        <member name="M:Octokit.Ensure.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Checks an argument to ensure it isn't null.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
            Checks a string argument to ensure it isn't null or empty.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.GreaterThanZero(System.TimeSpan,System.String)">
            <summary>
            Checks a timespan argument to ensure it is a positive value.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
        <member name="M:Octokit.Ensure.ArgumentNotNullOrEmptyEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Checks an enumerable argument to ensure it isn't null or empty.
            </summary>
            <param name = "value">The argument value to check</param>
            <param name = "name">The name of the argument</param>
        </member>
    </members>
</doc>
